<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>能源综合管理平台项目实战</title>
      <link href="/post/355b5773.html"/>
      <url>/post/355b5773.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-项目介绍"><a href="#1-项目介绍" class="headerlink" title="1.项目介绍"></a>1.项目介绍</h1><p>动力港能源管理平台是基于公司充电能源业务，结合互联网技术，实现网络化管理，与云平台实现数据共享和远程控制，使用更加便捷和智能化。便于公司对能源设备的集中管理和监测，优化充电结构，提高充电效率。</p><h2 id="1-项目技术栈"><a href="#1-项目技术栈" class="headerlink" title="1.项目技术栈"></a>1.项目技术栈</h2><p><strong>Vue3 + vue-router 4.x + pinia + TypeScript + Vite + element plus + axios + less + echarts + 高德地图api + TinyMCE富文本编辑器</strong></p><h1 id="2-创建项目"><a href="#2-创建项目" class="headerlink" title="2.创建项目"></a>2.创建项目</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm create vite@latest my-vue-admin --template vue-ts</span><br></pre></td></tr></table></figure><p>直接选择vite给我提供的现成的模板</p><p>安装依赖：</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install vue<span class="literal">-router</span>@<span class="number">4</span> pinia element<span class="literal">-plus</span></span><br></pre></td></tr></table></figure><p><strong>项目文件中关于：</strong></p><ul><li><p>**tsconfig.app.json:**一般用于更精细的控制编译选项，特别是与应用程序相关的选项，如 JSX 支持或模块解析策略等</p></li><li><p>**tsconfig.json:**是最基本的配置文件，提供全局设置</p></li><li><p>**tsconfig.node.json:**为 Node.js 环境或后台代码提供的 TypeScript 配置文件。通常用于配置 Node.js 脚本或服务（如 API 服务）的 TypeScript 编译选项</p></li><li><p><strong>vite-env.d.ts</strong>:全局类型声明</p></li></ul><p>安装less</p><p>package.json:</p><ul><li>“dependencies”:生产依赖，项目上线时一起打包上传服务器;</li><li>“devDependencies”:开发依赖，项目上线时不打包上传服务器，节约资源</li></ul><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install <span class="literal">-D</span> less</span><br></pre></td></tr></table></figure><h2 id="常见报错解决："><a href="#常见报错解决：" class="headerlink" title="常见报错解决："></a>常见报错解决：</h2><p>如果更改了@符号，提示找不到模块 ‘@&#x2F;components&#x2F;xxx.vue’ 或其相应的类型声明”</p><p><img src="D:/Software/Typora/images/image-20240828140028681.png" alt="image-20240828140028681"></p><h1 id="3-创建文件夹结构"><a href="#3-创建文件夹结构" class="headerlink" title="3.创建文件夹结构"></a>3.创建文件夹结构</h1><ol><li>src目录下创建store用来存放pinia相关文件</li><li>src目录下创建router文件夹用来存放路由相关文件</li><li>src目录下创建views文件夹，用来存放我们的相关页面</li><li>src目录下创建utils文件夹，用来存放我们封装的一些工具函数</li></ol><h1 id="4-基本路由结构的创建"><a href="#4-基本路由结构的创建" class="headerlink" title="4.基本路由结构的创建"></a>4.基本路由结构的创建</h1><p>&#x3D;&#x3D;src-router-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory,<span class="title class_">RouteRecordRaw</span>  &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">routes</span>: <span class="title class_">RouteRecordRaw</span>[]=[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&quot;Home&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&quot;../views/Home.vue&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&quot;about&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&quot;../views/About.vue&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;main.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.less&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(router)<span class="comment">//app.use(router) 是将 Vue Router 插件添加到 Vue 应用中。这意味着你的应用将能够使用路由功能</span></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;App.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;RouterView/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="5-配置-src路径"><a href="#5-配置-src路径" class="headerlink" title="5.配置@ src路径"></a>5.配置@ src路径</h1><p>因为相对路径每次找很麻烦，我们可以使用@，表示src目录</p><p>只需要在</p><p>&#x3D;&#x3D;vite.config.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span>;</span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./src&#x27;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>此时可能会有报错，如下</p><p><img src="D:/Software/Typora/images/image-20241014143019905.png" alt="image-20241014143019905"></p><p>只需要运行：</p><p>在你的项目中安装 Node.js 的 TypeScript 类型定义</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install @types/node <span class="literal">--save-dev</span></span><br></pre></td></tr></table></figure><p>另外直接修改的话会看到有报错：</p><p><img src="D:/Software/Typora/images/image-20241014142310973-17513419767151.png" alt="image-20241014142310973"></p><p>只需要去tsconfig.app.json文件增加一个配置：即可,如下</p><p><img src="D:/Software/Typora/images/image-20241014142908128-17513419767162.png" alt="image-20241014142908128"></p><h1 id="6-项目基础路由搭建"><a href="#6-项目基础路由搭建" class="headerlink" title="6.项目基础路由搭建"></a>6.项目基础路由搭建</h1><p>将基础路由单独抽离为一个文件</p><p>&#x3D;&#x3D;src-router-basicRouteMap.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RouteRecordRaw</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">routes</span>: <span class="title class_">RouteRecordRaw</span>[] =[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&quot;/&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&quot;Home&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&quot;@/layouts/DefaultLayout.vue&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/:pathMatch(.*)*&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;NotFound&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;@/views/NotFound.vue&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> routes</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;src-router-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> routes <span class="keyword">from</span> <span class="string">&quot;./basicRouteMap.ts&quot;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><h1 id="7-登录页面搭建"><a href="#7-登录页面搭建" class="headerlink" title="7.登录页面搭建"></a>7.登录页面搭建</h1><h2 id="1-静态基础结构搭建"><a href="#1-静态基础结构搭建" class="headerlink" title="1.静态基础结构搭建"></a>1.静态基础结构搭建</h2><p>参照element-plus官网案例</p><h2 id="2-基础逻辑处理"><a href="#2-基础逻辑处理" class="headerlink" title="2.基础逻辑处理"></a>2.基础逻辑处理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-form :model=&quot;ruleForm&quot; label=&quot;用户名&quot; :rules=&quot;rules&quot;  ref=&quot;formRef&quot;&gt;</span><br><span class="line">     &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">         &lt;el-input v-model=&quot;ruleForm.username&quot; placeholder=&quot;请输入用户名&quot; prefix-icon=&quot;User&quot;/&gt;</span><br><span class="line">     &lt;/el-form-item&gt;</span><br><span class="line">     &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">         &lt;el-input v-model=&quot;ruleForm.password&quot; placeholder=&quot;请输入密码&quot; prefix-icon=&quot;Lock&quot;/&gt;</span><br><span class="line">     &lt;/el-form-item&gt;</span><br><span class="line">     &lt;el-form-item&gt;</span><br><span class="line">         &lt;el-button type=&quot;primary&quot; style=&quot;width: 100%;&quot; &gt;登录&lt;/el-button&gt;</span><br><span class="line">     &lt;/el-form-item&gt;</span><br><span class="line"> &lt;/el-form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import type &#123; FormRules &#125; from &#x27;element-plus&#x27;</span><br><span class="line">import logo from &quot;@/assets/logo.png&quot; //通过模块化的方式引入图片</span><br><span class="line">interface RuleForm &#123;</span><br><span class="line">  username: string;</span><br><span class="line">  password: string</span><br><span class="line">&#125;</span><br><span class="line">const ruleForm: RuleForm = reactive(&#123; //reactive官网有明确说明，不推荐使用泛型的写法</span><br><span class="line">  username: &quot;&quot;,</span><br><span class="line">  password: &quot;&quot;</span><br><span class="line">&#125;)</span><br><span class="line">const formRef = ref&lt;FormInstance&gt;();</span><br><span class="line">const rules = reactive&lt;FormRules&lt;RuleForm&gt;&gt;(&#123;</span><br><span class="line">  username: [</span><br><span class="line">    &#123; required: true, message: &#x27;请输入用户名&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    &#123; min: 3, max: 8, message: &#x27;用户名要求3到8位字符&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">  ],</span><br><span class="line">  password: [</span><br><span class="line">    &#123; required: true, message: &#x27;请输入密码&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>登录按钮事件</strong>:</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">handleLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">  formRef.<span class="property">value</span>?.<span class="title function_">validate</span>(<span class="keyword">async</span> (<span class="attr">valid</span>: <span class="built_in">boolean</span>) =&gt; &#123; <span class="comment">//?.可选链操作符 </span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(valid)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于可选链操作符：</p><blockquote><p>可选链操作符 (<code>?.</code>) 是 JavaScript 中提供的一种简洁安全的访问嵌套属性的方法。使用可选链操作符的目的是避免在访问链中任意为 <code>null</code> 或 <code>undefined</code> 的情况引发运行时错误。</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">someObject?.<span class="property">someProperty</span></span><br></pre></td></tr></table></figure><blockquote><p>这段代码会安全地尝试访问 <code>someObject</code> 的 <code>someProperty</code> 属性。如果 <code>someObject</code> 是 <code>null</code> 或 <code>undefined</code>，则整个表达式会返回 <code>undefined</code>，而不会抛出异常。</p></blockquote><p><strong>关于rules校验规则</strong></p><ol><li><strong>required</strong>: 是否必填，值为 <code>true</code> 或 <code>false</code>。</li><li><strong>message</strong>: 验证失败时的提示信息。</li><li><strong>trigger</strong>: 设置触发验证的时机，可以是 <code>blur</code>、<code>change</code> 等。</li><li><strong>min</strong> 和 <strong>max</strong>: 适用于字符串和数组，设置最小值和最大值。</li><li><strong>type</strong>: 数据类型，比如 <code>string</code>、<code>number</code>、<code>boolean</code>、<code>array</code>、<code>date</code> 等。</li><li><strong>pattern</strong>: 正则表达式，用于验证输入。</li></ol><h2 id="3-登录的接口处理"><a href="#3-登录的接口处理" class="headerlink" title="3.登录的接口处理"></a>3.登录的接口处理</h2><p>登录返回的用户数据是存储在store中，所以我们去store中定义</p><p>&#x3D;&#x3D;src-store-auth.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserStore=<span class="title function_">defineStore</span>(<span class="string">&quot;user&quot;</span>,&#123;</span><br><span class="line">    <span class="attr">state</span>:<span class="function">()=&gt;</span>(&#123;</span><br><span class="line">        <span class="attr">token</span>:<span class="literal">null</span>,</span><br><span class="line">        <span class="attr">roles</span>:[],</span><br><span class="line">        <span class="attr">username</span>:<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">actions</span>:&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>既然用到了pinia，别忘了去main.ts中将pinia加入到我们的项目中</p><p>&#x3D;&#x3D;main.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/main.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/dist/index.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./mock/index&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./router/guard&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./style.css&quot;</span></span><br><span class="line"><span class="comment">// 如果您正在使用CDN引入，请删除下面一行。</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">ElementPlusIconsVue</span> <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> [key, component] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(<span class="title class_">ElementPlusIconsVue</span>)) &#123;</span><br><span class="line">    app.<span class="title function_">component</span>(key, component)</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(router);</span><br><span class="line">app.<span class="title function_">use</span>(pinia);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><p>因为点击登陆之后，修改store中的数据，所以我们把登录的逻辑在action中写，现在我们需要后端接口，所以我们安装一下mockjs</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install mockjs -D</span><br></pre></td></tr></table></figure><p>src目录下新建mock文件夹，里面写index.ts</p><p>&#x3D;&#x3D;src-mock-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Mock</span> <span class="keyword">from</span> <span class="string">&#x27;mockjs&#x27;</span>;</span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">setup</span>(&#123;</span><br><span class="line">  <span class="attr">timeout</span>: <span class="string">&#x27;200-600&#x27;</span> <span class="comment">// 设置延迟时间</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//管理员权限菜单</span></span><br><span class="line"><span class="keyword">const</span> menulist = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;数据看板&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/dashboard&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;DataLine&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;充电站管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/chargingstation&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Lightning&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;充电站监控&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/chargingstation/monitor&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;VideoCamera&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;营收统计&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/chargingstation/revenue&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;DataAnalysis&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;充电桩管理&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/chargingstation/fault&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;Warning&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;电子地图&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/map&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;MapLocation&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;运营管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/operations&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Files&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;订单管理&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/operations/orders&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;DocumentCopy&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;订单详情&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/operations/detail&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;Share&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;计费管理&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/operations/total&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;Money&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;报警管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/alarm&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Phone&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;会员卡管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/equipment&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Magnet&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;招商管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/document&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Document&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;系统设置&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/system&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Setting&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;个人中心&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/personal&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;User&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"><span class="comment">//运营专员权限菜单</span></span><br><span class="line"><span class="keyword">const</span> menulist2 = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;数据看板&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/dashboard&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;DataLine&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;充电站管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/chargingstation&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Lightning&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;充电站监控&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/chargingstation/monitor&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;VideoCamera&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;营收统计&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/chargingstation/revenue&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;DataAnalysis&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;充电桩管理&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/chargingstation/fault&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;Warning&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;电子地图&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/map&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;MapLocation&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;运营管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/operations&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Files&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;订单管理&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/operations/orders&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;DocumentCopy&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;订单详情&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/operations/detail&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;Share&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;计费管理&quot;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&quot;/operations/total&quot;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;Money&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;报警管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/alarm&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Phone&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;会员卡管理&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/equipment&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;Magnet&quot;</span></span><br><span class="line">    &#125;,  </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;个人中心&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/personal&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;User&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"><span class="comment">//登录接口</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&#x27;https://www.demo.com/login&#x27;</span>, <span class="string">&#x27;post&#x27;</span>, <span class="function">(<span class="params">options: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(options.<span class="property">body</span>);</span><br><span class="line">  <span class="keyword">if</span> (username === <span class="string">&#x27;admin&#x27;</span> &amp;&amp; password === <span class="string">&#x27;admin666&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;登陆成功&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">token</span>: <span class="string">&#x27;admintokenkkljbuo2w9xla2&#x27;</span>,</span><br><span class="line">        <span class="attr">user</span>: &#123;</span><br><span class="line">          <span class="attr">username</span>: <span class="string">&#x27;赖军&#x27;</span>,</span><br><span class="line">          <span class="attr">roles</span>: [<span class="string">&#x27;admin&#x27;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">menulist</span>: menulist</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (username === <span class="string">&#x27;user&#x27;</span> &amp;&amp; password === <span class="string">&#x27;user666&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;登陆成功&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">token</span>: <span class="string">&#x27;usertokenlkg55dws5ch4ew97cl&#x27;</span>,</span><br><span class="line">        <span class="attr">user</span>: &#123;</span><br><span class="line">          <span class="attr">username</span>: <span class="string">&#x27;江霞&#x27;</span>,</span><br><span class="line">          <span class="attr">roles</span>: [<span class="string">&#x27;user&#x27;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">menulist</span>: menulist2</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">401</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;用户名或者密码有误&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这里可能会有个报错</p><p><img src="D:/Software/Typora/images/image-20241016154349994.png" alt="image-20241016154349994"></p><p>我们要去全局类型声明文件配置一下</p><p>&#x3D;&#x3D;src-vite-env.d.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// &lt;reference types=&quot;vite/client&quot; /&gt;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&quot;mockjs&quot;</span>  </span><br></pre></td></tr></table></figure><p>作用是：告诉编译器存在一个名为 <code>mockjs</code> 的模块</p><p>另外别忘了去main.ts文件下引入mock文件</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;./mock/index&quot;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>创建api文件夹用来存放项目的所有api接口调用文件</p></blockquote><h2 id="4-axios二次封装"><a href="#4-axios二次封装" class="headerlink" title="4.axios二次封装"></a>4.axios二次封装</h2><p>发送请求我们需要使用axios，所以我们去安装</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;utils-axios.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios, &#123; <span class="title class_">AxiosInstance</span>, <span class="title class_">AxiosResponse</span>, <span class="title class_">AxiosError</span>, <span class="title class_">InternalAxiosRequestConfig</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElNotification</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 axios 实例</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">service</span>: <span class="title class_">AxiosInstance</span> = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>: <span class="string">&quot;https://www.demo.com&quot;</span>,<span class="comment">//后期我们会把它替换成环境变量</span></span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">5000</span> <span class="comment">// 请求超时时间</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function">(<span class="params">config: InternalAxiosRequestConfig</span>) =&gt;</span> &#123; </span><br><span class="line">        <span class="comment">// 可以在这里添加认证 token</span></span><br><span class="line">        <span class="comment">// config.headers[&#x27;Authorization&#x27;] = &#x27;Bearer &#x27; + getToken();</span></span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">error: AxiosError</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 请求错误处理</span></span><br><span class="line">        <span class="title class_">ElNotification</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;Request Error: &#x27;</span> + error.<span class="property">message</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function">(<span class="params">response: AxiosResponse</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> res = response.<span class="property">data</span>;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">code</span> !== <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">// 根据实际业务修改状态码不是 200 时的逻辑</span></span><br><span class="line">            <span class="title class_">ElNotification</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>: res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">error: AxiosError</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title class_">ElNotification</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;Response Error: &#x27;</span> + error.<span class="property">message</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure><h2 id="5-封装get-post请求"><a href="#5-封装get-post请求" class="headerlink" title="5.封装get post请求"></a>5.封装get post请求</h2><p>&#x3D;&#x3D;utils-http.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> service <span class="keyword">from</span> <span class="string">&quot;./axios&quot;</span>;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ResponseData</span>&#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="attr">data</span>: <span class="built_in">any</span>;</span><br><span class="line">    <span class="attr">message</span>: <span class="built_in">string</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 封装GET方法</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get</span>(<span class="params">url: <span class="built_in">string</span>, params?: <span class="built_in">any</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">ResponseData</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> service.<span class="title function_">get</span>(url,&#123;params&#125; );</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 封装POST方法</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">post</span>(<span class="params">url: <span class="built_in">string</span>, data?: <span class="built_in">any</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">ResponseData</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> service.<span class="title function_">post</span>(url, data);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">export</span> &#123; get, post &#125;;</span><br></pre></td></tr></table></figure><h2 id="6-创建登录请求"><a href="#6-创建登录请求" class="headerlink" title="6.创建登录请求"></a>6.创建登录请求</h2><p>&#x3D;&#x3D;src-api-user.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    <span class="title class_">Login</span> = <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">LoginParams</span> &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">password</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loginApi</span>(<span class="params">data:LoginParams</span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">Login</span>,data)</span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">export</span> &#123;loginApi&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;store-auth.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loginApi &#125; <span class="keyword">from</span> <span class="string">&#x27;../api/user&#x27;</span>;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">LoginParams</span> &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">password</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserStore=<span class="title function_">defineStore</span>(<span class="string">&quot;user&quot;</span>,&#123;</span><br><span class="line">    <span class="attr">state</span>:<span class="function">()=&gt;</span>(&#123;</span><br><span class="line">        <span class="attr">token</span>:<span class="literal">null</span>,</span><br><span class="line">        <span class="attr">roles</span>:[],</span><br><span class="line">        <span class="attr">username</span>:<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">actions</span>:&#123;</span><br><span class="line">        <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">data:LoginParams</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> res= <span class="keyword">await</span> <span class="title function_">loginApi</span>(data);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">          &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>最后调整store里的逻辑</p><p>&#x3D;&#x3D;store-auth.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loginApi &#125; <span class="keyword">from</span> <span class="string">&#x27;../api/user&#x27;</span>;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">LoginParams</span> &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">password</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserStore=<span class="title function_">defineStore</span>(<span class="string">&quot;user&quot;</span>,&#123;</span><br><span class="line">    <span class="attr">state</span>:<span class="function">()=&gt;</span>(&#123;</span><br><span class="line">        <span class="attr">token</span>:sessionStorage.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>) || <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">roles</span>: sessionStorage.<span class="title function_">getItem</span>(<span class="string">&#x27;roles&#x27;</span>) ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;roles&#x27;</span>)!) : [],</span><br><span class="line">        <span class="attr">username</span>:sessionStorage.<span class="title function_">getItem</span>(<span class="string">&quot;username&quot;</span>) || <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">menu</span>:sessionStorage.<span class="title function_">getItem</span>(<span class="string">&quot;menu&quot;</span>)?<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;menu&quot;</span>)!):[]</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">actions</span>:&#123;</span><br><span class="line">        <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">data: LoginParams</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> &#123;<span class="attr">data</span>:&#123;token,<span class="attr">user</span>:&#123;username,roles&#125;,menulist&#125;&#125; = <span class="keyword">await</span> <span class="title function_">loginApi</span>(data);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">token</span>=token;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">roles</span>=roles;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">menu</span>=menulist;</span><br><span class="line">                <span class="comment">// //既存到pinia中又存到本地存储中是因为第一pinia中数据是响应式第二存取速度要比本地存储快</span></span><br><span class="line">                sessionStorage.<span class="title function_">setItem</span>(<span class="string">&quot;token&quot;</span>,token);</span><br><span class="line">                sessionStorage.<span class="title function_">setItem</span>(<span class="string">&quot;roles&quot;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(roles))</span><br><span class="line">                sessionStorage.<span class="title function_">setItem</span>(<span class="string">&quot;username&quot;</span>,username)</span><br><span class="line">                sessionStorage.<span class="title function_">setItem</span>(<span class="string">&quot;menu&quot;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(roles))</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;登录失败:&quot;</span>, error);</span><br><span class="line">                <span class="comment">// 这里可以处理错误，比如显示提示信息</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;Login.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>();</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">  formRef.<span class="property">value</span>?.<span class="title function_">validate</span>(<span class="keyword">async</span> (<span class="attr">valid</span>: <span class="built_in">boolean</span>) =&gt; &#123; <span class="comment">//?.可选链操作符 </span></span><br><span class="line">    <span class="keyword">if</span>(valid)&#123;</span><br><span class="line">      userStore.<span class="title function_">login</span>(ruleForm)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-useRouter使用误区"><a href="#8-useRouter使用误区" class="headerlink" title="8.useRouter使用误区"></a>8.useRouter使用误区</h1><p>&#x3D;&#x3D;Login.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">  formRef.<span class="property">value</span>?.<span class="title function_">validate</span>( <span class="function">(<span class="params">valid: <span class="built_in">boolean</span></span>) =&gt;</span> &#123; <span class="comment">//?.可选链操作符 </span></span><br><span class="line">    <span class="keyword">if</span>(valid)&#123;</span><br><span class="line">      userStore.<span class="title function_">login</span>(ruleForm);</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这样有个问题，如果用户用户名密码不正确，也可以跳转，所以有同学想，那你在pinia中写跳转不就行了吗,类似如下写法</p><p><img src="D:/Software/Typora/images/image-20241017105930061.png" alt="image-20241017105930061"></p><p>但这是错误的， useRouter() 必须在组件上下文中使用。Pinia store 并不属于 Vue 组件的上下文，因此在 store 中调用 useRouter() 将导致错误</p><p>那如果我就是想在这里使用怎么办，有办法，可以将router传过来，如下更改</p><p><img src="D:/Software/Typora/images/image-20241017110315151.png" alt="image-20241017110315151"></p><p>&#x3D;&#x3D;Login.vue&#x3D;&#x3D;</p><p><img src="D:/Software/Typora/images/image-20241017110354595.png" alt="image-20241017110354595"></p><p>这种方式可以，不过我们还有另一种方式，就是导航守卫，导航守卫也可以控制路由跳转呀</p><h1 id="9-导航守卫"><a href="#9-导航守卫" class="headerlink" title="9.导航守卫"></a>9.导航守卫</h1><p>&#x3D;&#x3D;router-guard.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./index&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&quot;../store/auth&quot;</span>;</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>();</span><br><span class="line">    <span class="keyword">const</span> isLogin = userStore.<span class="property">token</span>;</span><br><span class="line">    <span class="comment">// 用户未登录的情况</span></span><br><span class="line">    <span class="keyword">if</span> (!isLogin) &#123;</span><br><span class="line">        <span class="keyword">if</span> (to.<span class="property">path</span> !== <span class="string">&quot;/login&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span> &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 用户已登录但尝试访问登录页面的情况</span></span><br><span class="line">        <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&quot;/login&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">path</span>: <span class="string">&quot;/&quot;</span> &#125;; <span class="comment">// 阻止导航,让他跳回首页  </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>别忘了在main.ts中引入导航守卫文件</p><p>&#x3D;&#x3D;main.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;@/router/guard&quot;</span></span><br></pre></td></tr></table></figure><h1 id="10-主页面开发"><a href="#10-主页面开发" class="headerlink" title="10.主页面开发"></a>10.主页面开发</h1><p>&#x3D;&#x3D;src-layouts-DefaultLayout.vue&#x3D;&#x3D;</p><p>直接复制element plus中的布局容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-container&gt;</span><br><span class="line">     &lt;el-aside width=&quot;200px&quot;&gt;Aside&lt;/el-aside&gt;</span><br><span class="line">     &lt;el-container&gt;</span><br><span class="line">       &lt;el-header&gt;Header&lt;/el-header&gt;</span><br><span class="line">       &lt;el-main&gt;Main&lt;/el-main&gt;</span><br><span class="line">     &lt;/el-container&gt;</span><br><span class="line">   &lt;/el-container&gt;</span><br></pre></td></tr></table></figure><p>加点样式:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">  .el-aside&#123;</span><br><span class="line">    height: 100vh;;</span><br><span class="line">    box-shadow: 10px 0 8px -2px rgba(0, 0, 0, 0.2);</span><br><span class="line">    background-color: white</span><br><span class="line">  &#125;</span><br><span class="line">  .el-header&#123;</span><br><span class="line">    padding: 0 !important</span><br><span class="line">  &#125;</span><br><span class="line">  .el-main&#123;</span><br><span class="line">    height: 80vh;</span><br><span class="line">    overflow: auto;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="11-开发侧边栏组件"><a href="#11-开发侧边栏组件" class="headerlink" title="11.开发侧边栏组件"></a>11.开发侧边栏组件</h1><p>&#x3D;&#x3D;components-navMenu-Menu.vue&#x3D;&#x3D;</p><p>直接去element plus官网中复制的现成代码，删掉了group,其他不变</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-menu active-text-color=&quot;#ffd04b&quot; background-color=&quot;#545c64&quot; class=&quot;el-menu-vertical-demo&quot; default-active=&quot;2&quot;</span><br><span class="line">        text-color=&quot;#fff&quot;&gt;</span><br><span class="line">        &lt;el-sub-menu index=&quot;1&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">                &lt;el-icon&gt;</span><br><span class="line">                    &lt;location /&gt;</span><br><span class="line">                &lt;/el-icon&gt;</span><br><span class="line">                &lt;span&gt;Navigator One&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;1-1&quot;&gt;item one&lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;1-2&quot;&gt;item two&lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;1-3&quot;&gt;item three&lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">            &lt;el-sub-menu index=&quot;1-4&quot;&gt;</span><br><span class="line">                &lt;template #title&gt;item four&lt;/template&gt;</span><br><span class="line">                &lt;el-menu-item index=&quot;1-4-1&quot;&gt;item one&lt;/el-menu-item&gt;</span><br><span class="line">            &lt;/el-sub-menu&gt;</span><br><span class="line">        &lt;/el-sub-menu&gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;2&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;document /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;Navigator Two&lt;/span&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;3&quot; disabled&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">                &lt;document /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;Navigator Three&lt;/span&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;4&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">                &lt;setting /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;Navigator Four&lt;/span&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后去主页面引入菜单组件即可</p><p>&#x3D;&#x3D;DefaultLayout.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">      &lt;Menu&gt;&lt;/Menu&gt;</span><br><span class="line"> &lt;/el-aside&gt;</span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span><br><span class="line">import Menu from &#x27;../components/NavMenu/Menu.vue&#x27;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>如果报错,因为TypeScript 并不知道如何理解 <code>.vue</code> 文件，因此需要这样一个声明</p><p><img src="D:/Software/Typora/images/image-20241017145850520.png" alt="image-20241017145850520"></p><p>去全局类型声明文件中设置一下即可</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// &lt;reference types=&quot;vite/client&quot; /&gt;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&quot;mockjs&quot;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.vue&#x27;</span> &#123;</span><br><span class="line">    <span class="keyword">import</span> &#123; <span class="title class_">ComponentOptions</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">componentOptions</span>: <span class="title class_">ComponentOptions</span></span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> componentOptions</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol><li><strong>模块声明</strong>：<code>declare module &#39;*.vue&#39;</code> 表示所有以 <code>.vue</code> 结尾的文件都可以作为模块导入。</li><li><strong>类型定义</strong>：它引入了 Vue 的 <code>ComponentOptions</code> 类型，这样 TypeScript 就能知道 <code>.vue</code> 文件中定义的组件是怎样的。</li><li><strong>导出</strong>：<code>export default componentOptions</code> 允许你在导入 <code>.vue</code> 文件时，获得一个符合 <code>ComponentOptions</code> 类型的默认导出。</li></ol><p>从store中取出菜单数据</p><p>&#x3D;&#x3D;components-navMenu-Menu.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; useUserStore &#125; from &#x27;@/store/auth&#x27;;</span><br><span class="line">const userStore = useUserStore();</span><br><span class="line">console.log(userStore.menu)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p><strong>对菜单数据进行递归操作</strong></p></blockquote><p>&#x3D;&#x3D;components-navMenu-MenuItem.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-sub-menu v-if=&quot;item.children&quot; :index=&quot;item.url&quot;&gt;</span><br><span class="line">        &lt;template #title&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">                &lt;document /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;my-menu v-for=&quot;child in item.children&quot; :key=&quot;child.url&quot; :item=&quot;child&quot;&gt;&lt;/my-menu&gt;</span><br><span class="line">    &lt;/el-sub-menu&gt;</span><br><span class="line">    &lt;el-menu-item v-else :index=&quot;item.url&quot;&gt;</span><br><span class="line">        &lt;el-icon&gt;</span><br><span class="line">            &lt;document /&gt;</span><br><span class="line">        &lt;/el-icon&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineComponent, PropType &#125; from &#x27;vue&#x27;;</span><br><span class="line">import  &#123; MenuItem as MenuItemType &#125; from &quot;../../types/user/index&quot;; //这里换成@符号会有bug，先不换了</span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">    name: &#x27;MyMenu&#x27;, // 你可以给组件起一个名字</span><br><span class="line">    props: &#123;</span><br><span class="line">        item: &#123;</span><br><span class="line">            type: Object as PropType&lt;MenuItemType&gt;, //使用 TypeScript 的 PropType 来指定 item 的具体类型为 MenuItemType</span><br><span class="line">            required: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后Menu.vue组件中调用</p><p>&#x3D;&#x3D;components-navMenu-Menu.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-menu &gt;</span><br><span class="line">        &lt;menu-item v-for=&quot;item in menuItems&quot; :key=&quot;item.url&quot; :item=&quot;item&quot;&gt;&lt;/menu-item&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; useUserStore &#125; from &#x27;@/store/auth&#x27;;</span><br><span class="line">import MenuItem from &#x27;./MenuItem.vue&#x27;;</span><br><span class="line">const userStore = useUserStore();</span><br><span class="line">const menuItems=userStore.menu</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="2-将图标字符串转为图标组件"><a href="#2-将图标字符串转为图标组件" class="headerlink" title="2.将图标字符串转为图标组件"></a>2.将图标字符串转为图标组件</h2><p>因为element plus中 <el-icon>中放的是图标组件，虽然我们全局注册了，但是因为后端返回给我们的是字符串，没办法直接用，</p><p>所以使用component组件解决</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;component :is=&quot;item.icon&quot; /&gt;</span><br></pre></td></tr></table></figure><h2 id="3-优化侧边栏样式"><a href="#3-优化侧边栏样式" class="headerlink" title="3.优化侧边栏样式"></a>3.优化侧边栏样式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;logo&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;logo&quot; width=&quot;34px&quot; height=&quot;34px&quot; /&gt;</span><br><span class="line">        &lt;h1&gt;动力港&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;el-menu&gt;</span><br><span class="line">        &lt;menu-item v-for=&quot;item in menuItems&quot; :key=&quot;item.url&quot; :item=&quot;item&quot;&gt;&lt;/menu-item&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; useUserStore &#125; from &#x27;@/store/auth&#x27;;</span><br><span class="line">import logo from &quot;@/assets/logo.png&quot;</span><br><span class="line">import MenuItem from &#x27;./MenuItem.vue&#x27;;</span><br><span class="line">const userStore = useUserStore();</span><br><span class="line">const menuItems = userStore.menu</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">  .logo&#123;</span><br><span class="line">    display: flex;justify-content: center;height: 50px;align-items: center;padding:10px 0; </span><br><span class="line">    img&#123;margin-left: -10px;&#125;</span><br><span class="line">    h1&#123;color:#333;margin-left: 10px;font-size: 22px &#125;</span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line">  .el-menu&#123;</span><br><span class="line">    border-right: none; </span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>修改高亮样式</p><p>&#x3D;&#x3D;MenuItem.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.is-active&#123;background-color: rgb(34 , 136, 255);color: #fff !important;&#125;</span><br><span class="line">.is-active&gt;div span&#123;color: #fff &#125;</span><br><span class="line">.el-menu-item:hover&#123;</span><br><span class="line">    background-color: rgb(34 , 136, 255) !important;color: #fff !important;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>隐藏滚动条</p><p>&#x3D;&#x3D;style.less&#x3D;&#x3D;</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="4-开启路由模式"><a href="#4-开启路由模式" class="headerlink" title="4.开启路由模式"></a>4.开启路由模式</h2><p><img src="D:/Software/Typora/images/image-20241018103847516.png" alt="image-20241018103847516"></p><h1 id="12-创建路由页面"><a href="#12-创建路由页面" class="headerlink" title="12.创建路由页面"></a>12.创建路由页面</h1><p>数据看板：() &#x3D;&gt; import(“@&#x2F;views&#x2F;dashboard&#x2F;DashBoard.vue”)</p><p>充电站监控：() &#x3D;&gt; import(“@&#x2F;views&#x2F;chargingstation&#x2F;Monitor.vue”)</p><p>营收统计：() &#x3D;&gt; import(“@&#x2F;views&#x2F;chargingstation&#x2F;Revenue.vue”)</p><p>充电桩管理：() &#x3D;&gt; import(“@&#x2F;views&#x2F;chargingstation&#x2F;Fault.vue”)</p><p>电子地图：() &#x3D;&gt; import(“@&#x2F;views&#x2F;Map&#x2F;ElectronicMap.vue”)</p><p>订单管理：() &#x3D;&gt; import(“@&#x2F;views&#x2F;operations&#x2F;Orders.vue”)</p><p>订单详情：() &#x3D;&gt; import(“@&#x2F;views&#x2F;operations&#x2F;Detail.vue”)</p><p>计费管理：() &#x3D;&gt; import(“@&#x2F;views&#x2F;operations&#x2F;Total.vue”)</p><p>报警管理：() &#x3D;&gt; import(“@&#x2F;views&#x2F;alarm&#x2F;Alarm.vue”)</p><p>会员卡管理：() &#x3D;&gt; import(“@&#x2F;views&#x2F;equipment&#x2F;Equipment.vue”)</p><p>招商管理：() &#x3D;&gt; import(“@&#x2F;views&#x2F;document&#x2F;Document.vue”)</p><p>系统设置： () &#x3D;&gt; import(“@&#x2F;views&#x2F;system&#x2F;System.vue”)</p><p>个人中心：() &#x3D;&gt; import(“@&#x2F;views&#x2F;personal&#x2F;Personal.vue”)</p><p>然后添加二级路由的<RouterView></p><p>&#x3D;&#x3D;layouts-DefaultLayout.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-container&gt;</span><br><span class="line">        &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">            &lt;Menu&gt;&lt;/Menu&gt;</span><br><span class="line">        &lt;/el-aside&gt;</span><br><span class="line">        &lt;el-container&gt;</span><br><span class="line">            &lt;el-header&gt;Header&lt;/el-header&gt;</span><br><span class="line">            &lt;el-main&gt;</span><br><span class="line">              &lt;RouterView/&gt;</span><br><span class="line">            &lt;/el-main&gt;</span><br><span class="line">        &lt;/el-container&gt;</span><br><span class="line">    &lt;/el-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>隐藏订单详情菜单</p><p>&#x3D;&#x3D;components-navMenu-MenuItem.vue&#x3D;&#x3D;</p><p><img src="D:/Software/Typora/images/image-20241018120914156.png" alt="image-20241018120914156"></p><h1 id="13-页面权限控制"><a href="#13-页面权限控制" class="headerlink" title="13.页面权限控制"></a>13.页面权限控制</h1><p>现在虽然我们的菜单是根据后端动态生成的，但是如果用户直到路由，直接手动输入路由地址，还是可以跳转，所以我们需要控制</p><blockquote><p>页面级权限控制常见的两种思路：</p></blockquote><p>1.前端不默认创建完整路由表，后端返回权限名称，前端静态路由表中每一项都设置该路由表所需的权限，然后循环路由表，筛选出来该权限名称所拥有的路由表，通过addRoute方法动态添加路由，生成实际路由表</p><p>2.前端默认创建完整路由表，后端返回权限名称，路由表每一项中设置访问该路由所应该具备的权限，跳转的时候通过导航守卫控制是否允许跳转</p><p>&#x3D;&#x3D;router-basicRouterMap.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/system&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;system&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;@/views/system/System.vue&quot;</span>),   </span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">        <span class="attr">needAuth</span>: [<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;manager&quot;</span>]</span><br><span class="line">    &#125;           </span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/system&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;system&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;@/views/system/System.vue&quot;</span>),   </span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">        <span class="attr">needAuth</span>: [<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;manager&quot;</span>]</span><br><span class="line">    &#125;           </span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>导航守卫添加代码</p><p>&#x3D;&#x3D;router-guard.ts&#x3D;&#x3D;</p><p><img src="D:/Software/Typora/images/image-20241018141623970.png" alt="image-20241018141623970"></p><h1 id="14-Header组件开发"><a href="#14-Header组件开发" class="headerlink" title="14.Header组件开发"></a>14.Header组件开发</h1><p>&#x3D;&#x3D;components-TopHeader-TopHeader.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;personal&quot;&gt;</span><br><span class="line">            &lt;el-badge is-dot class=&quot;item&quot;&gt;</span><br><span class="line">                &lt;el-icon size=&quot;20&quot;&gt;</span><br><span class="line">                    &lt;Bell /&gt;</span><br><span class="line">                &lt;/el-icon&gt;</span><br><span class="line">            &lt;/el-badge&gt;</span><br><span class="line">            &lt;el-avatar src=&quot;https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png&quot; /&gt;</span><br><span class="line">            &lt;el-dropdown :hide-on-click=&quot;false&quot; @command=&quot;handleCommand&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;el-dropdown-link&quot;&gt;</span><br><span class="line">                    欢迎你，&#123;&#123; username &#125;&#125;</span><br><span class="line">                    &lt;el-icon class=&quot;el-icon--right&quot;&gt;&lt;arrow-down /&gt;&lt;/el-icon&gt;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">                &lt;template #dropdown&gt;</span><br><span class="line">                    &lt;el-dropdown-menu&gt;</span><br><span class="line">                        &lt;el-dropdown-item icon=&quot;User&quot; command=&quot;user&quot;&gt;个人中心&lt;/el-dropdown-item&gt;</span><br><span class="line">                        &lt;el-dropdown-item icon=&quot;SwitchButton&quot; command=&quot;logout&quot;&gt;退出登录&lt;/el-dropdown-item&gt;</span><br><span class="line">                    &lt;/el-dropdown-menu&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;/el-dropdown&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; useUserStore &#125; from &quot;@/store/auth.ts&quot;</span><br><span class="line">import &#123; storeToRefs &#125; from &quot;pinia&quot;;</span><br><span class="line">import &#123;useRouter&#125; from &quot;vue-router&quot;</span><br><span class="line">const userStore=useUserStore()</span><br><span class="line">const &#123;username&#125;=storeToRefs(userStore) </span><br><span class="line">const router=useRouter();</span><br><span class="line">function handleCommand(command:string) &#123;</span><br><span class="line">    if (command == &quot;user&quot;) &#123;</span><br><span class="line">        router.push(&quot;/personal&quot;) </span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        userStore.logout()</span><br><span class="line">        router.push(&quot;/login&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot;&gt;</span><br><span class="line">.header &#123;</span><br><span class="line">    background-color: white;</span><br><span class="line">    height: 60px;</span><br><span class="line">    align-items: center;</span><br><span class="line">    padding: 0 20px;</span><br><span class="line">    .personal &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        height: 60px;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line"></span><br><span class="line">        .el-dropdown-link &#123;</span><br><span class="line">            margin-left: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .item &#123;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">            margin-right: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;store-auth.ts&#x3D;&#x3D;</p><p>actions中添加logout</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">logout</span>(<span class="params"></span>) &#123;</span><br><span class="line">           <span class="variable language_">this</span>.<span class="property">token</span> = <span class="literal">null</span>;</span><br><span class="line">           <span class="variable language_">this</span>.<span class="property">roles</span> = [];</span><br><span class="line">           <span class="variable language_">this</span>.<span class="property">username</span>=<span class="string">&quot;&quot;</span></span><br><span class="line">           <span class="variable language_">this</span>.<span class="property">menu</span>=[]</span><br><span class="line">           sessionStorage.<span class="title function_">clear</span>()</span><br><span class="line">         &#125;,</span><br></pre></td></tr></table></figure><h1 id="15-快捷页签导航开发"><a href="#15-快捷页签导航开发" class="headerlink" title="15.快捷页签导航开发"></a>15.快捷页签导航开发</h1><h2 id="1-基本功能"><a href="#1-基本功能" class="headerlink" title="1.基本功能"></a>1.基本功能</h2><p>先在DefaultLayout页面尝试基本功能</p><p>&#x3D;&#x3D;layouts-DefaultLayout.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-container&gt;</span><br><span class="line">    &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">      &lt;Menu&gt;&lt;/Menu&gt;</span><br><span class="line">    &lt;/el-aside&gt;</span><br><span class="line">    &lt;el-container&gt;</span><br><span class="line">      &lt;el-header&gt;</span><br><span class="line">        &lt;TopHeader /&gt;</span><br><span class="line">      &lt;/el-header&gt;</span><br><span class="line">      &lt;el-main&gt;</span><br><span class="line">        &lt;el-tabs </span><br><span class="line">            v-model=&quot;activeName&quot; </span><br><span class="line">            class=&quot;demo-tabs&quot; </span><br><span class="line">            closable</span><br><span class="line">            @tab-click=&quot;handleClick&quot;</span><br><span class="line">            @tab-remove=&quot;remove&quot;</span><br><span class="line">        &gt;</span><br><span class="line">            &lt;el-tab-pane label=&quot;User&quot; name=&quot;first&quot;&gt;</span><br><span class="line">              &lt;template #label&gt;</span><br><span class="line">                &lt;span class=&quot;custom-tabs-label&quot;&gt;</span><br><span class="line">                  &lt;el-icon&gt;&lt;calendar /&gt;&lt;/el-icon&gt;</span><br><span class="line">                  &lt;span&gt;Route&lt;/span&gt;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">              &lt;/template&gt;</span><br><span class="line">              route的内容</span><br><span class="line">            &lt;/el-tab-pane&gt;</span><br><span class="line">            &lt;el-tab-pane label=&quot;Config&quot; name=&quot;second&quot;&gt;Config&lt;/el-tab-pane&gt;</span><br><span class="line">            &lt;el-tab-pane label=&quot;Role&quot; name=&quot;third&quot;&gt;Role&lt;/el-tab-pane&gt;</span><br><span class="line">            &lt;el-tab-pane label=&quot;Task&quot; name=&quot;fourth&quot;&gt;Task&lt;/el-tab-pane&gt;</span><br><span class="line">          &lt;/el-tabs&gt;</span><br><span class="line">        &lt;RouterView /&gt;</span><br><span class="line">      &lt;/el-main&gt;</span><br><span class="line">    &lt;/el-container&gt;</span><br><span class="line">  &lt;/el-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import Menu from &quot;@/components/navMenu/Menu.vue&quot;</span><br><span class="line">import TopHeader from &quot;@/components/TopHeader/TopHeader.vue&quot;</span><br><span class="line">import type &#123; TabsPaneContext &#125; from &#x27;element-plus&#x27;</span><br><span class="line">const activeName = ref(&#x27;first&#x27;)</span><br><span class="line">const handleClick=(tab: TabsPaneContext, event: Event)=&gt;&#123;</span><br><span class="line">  console.log(tab, event)</span><br><span class="line">  &#125;</span><br><span class="line">  const remove=(panelName:string)=&gt;&#123;</span><br><span class="line">    console.log(panelName)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.el-aside &#123;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  ;</span><br><span class="line">  box-shadow: 10px 0 8px -2px rgba(0, 0, 0, 0.2);</span><br><span class="line">  background-color: white</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-header &#123;</span><br><span class="line">  padding: 0 !important</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-main &#123;</span><br><span class="line">  height: 80vh;</span><br><span class="line">  overflow: auto;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>然后创建单独的组件</p><p>&#x3D;&#x3D;layouts-TabsLayout.vue&#x3D;&#x3D;</p><p>将这些内容全部复制到该组件下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-tabs v-model=&quot;activeName&quot; class=&quot;demo-tabs&quot; closable @tab-click=&quot;handleClick&quot; @tab-remove=&quot;remove&quot;&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;User&quot; name=&quot;first&quot;&gt;</span><br><span class="line">            &lt;template #label&gt;</span><br><span class="line">                &lt;span class=&quot;custom-tabs-label&quot;&gt;</span><br><span class="line">                    &lt;el-icon&gt;</span><br><span class="line">                        &lt;calendar /&gt;</span><br><span class="line">                    &lt;/el-icon&gt;</span><br><span class="line">                    &lt;span&gt;Route&lt;/span&gt;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            route的内容</span><br><span class="line">        &lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;Config&quot; name=&quot;second&quot;&gt;Config&lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;Role&quot; name=&quot;third&quot;&gt;Role&lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;Task&quot; name=&quot;fourth&quot;&gt;Task&lt;/el-tab-pane&gt;</span><br><span class="line">    &lt;/el-tabs&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;</span><br><span class="line">import type &#123; TabsPaneContext &#125; from &#x27;element-plus&#x27;</span><br><span class="line">const activeName = ref(&#x27;first&#x27;)</span><br><span class="line">const handleClick = (tab: TabsPaneContext, event: Event) =&gt; &#123;</span><br><span class="line">    console.log(tab, event)</span><br><span class="line">&#125;</span><br><span class="line">const remove = (panelName: string) =&gt; &#123;</span><br><span class="line">    console.log(panelName)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>那么问题来了，应该有几个tab-pane呢，应该是点击一次菜单，就应该多一个，默认有dashboard一个,所以此时我们创建store，存储所点击的菜单项</p><p>&#x3D;&#x3D;store-tabs.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span>&#123;<span class="title class_">MenuItem</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@/types/user&quot;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTabsStore = <span class="title function_">defineStore</span>(<span class="string">&quot;tabs&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> tabs = ref&lt;<span class="title class_">MenuItem</span>[]&gt;([&#123; <span class="attr">name</span>: <span class="string">&quot;数据看板&quot;</span>, <span class="attr">path</span>: <span class="string">&quot;/dashboard&quot;</span>, <span class="attr">icon</span>: <span class="string">&quot;DataLine&quot;</span> &#125;]);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">addTab</span> = (<span class="params">name: <span class="built_in">string</span>, path: <span class="built_in">string</span>, icon: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!tabs.<span class="property">value</span>.<span class="title function_">some</span>(<span class="function"><span class="params">tab</span> =&gt;</span> tab.<span class="property">path</span> === path)) &#123;</span><br><span class="line">            tabs.<span class="property">value</span>.<span class="title function_">push</span>(&#123; name, path, icon &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;tabs,addTab&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>DefaultLayout.vue文件引入TabsLayout</p><p>&#x3D;&#x3D;DefaultLayout.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-main&gt;</span><br><span class="line">    &lt;TabsLayout/&gt;</span><br><span class="line">    &lt;!-- &lt;RouterView /&gt; --&gt;</span><br><span class="line">&lt;/el-main&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">TabsLayout</span> <span class="keyword">from</span> <span class="string">&quot;@/layouts/TabsLayout.vue&quot;</span></span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;layouts-TabsLayout.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useTabsStore&#125; <span class="keyword">from</span> <span class="string">&quot;@/store/tabs.ts&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> tabsStore = <span class="title function_">useTabsStore</span>();</span><br><span class="line"><span class="keyword">const</span> &#123;tabs&#125;=<span class="title function_">storeToRefs</span>(tabsStore);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">88</span>,tabs.<span class="property">value</span>) <span class="comment">//这里验证，确实可以拿到store中的数据</span></span><br></pre></td></tr></table></figure><h2 id="2-添加页签"><a href="#2-添加页签" class="headerlink" title="2.添加页签"></a>2.添加页签</h2><p>&#x3D;&#x3D;components-NavMenu-MenuItem.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;el-menu-item v-else :index=&quot;item.url&quot; @click=&quot;add(item.name, item.url, item.icon)&quot; v-show=&quot;!(item.name == &#x27;订单详情&#x27;)&quot;&gt;</span><br><span class="line">        &lt;el-icon&gt;</span><br><span class="line">            &lt;component :is=&quot;item.icon&quot; /&gt;</span><br><span class="line">        &lt;/el-icon&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineComponent, PropType &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; MenuItem as MenuItemType &#125; from &quot;../../types/user/index&quot;;</span><br><span class="line">import &#123; useTabsStore &#125; from &#x27;@/store/tabs&#x27;;</span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">    name: &#x27;MyMenu&#x27;, // 你可以给组件起一个名字</span><br><span class="line">    props: &#123;</span><br><span class="line">        item: &#123;</span><br><span class="line">            type: Object as PropType&lt;MenuItemType&gt;,</span><br><span class="line">            required: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    setup() &#123;</span><br><span class="line">        const tabsStore=useTabsStore();</span><br><span class="line">        const &#123;addTab&#125;=tabsStore;</span><br><span class="line">        function add(name: string, url: string, icon: string) &#123;</span><br><span class="line">            addTab(name, url, icon)</span><br><span class="line">        &#125;</span><br><span class="line">        return &#123;add &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;layouts-TabsLayout.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-tabs v-model=&quot;activeName&quot; class=&quot;demo-tabs&quot; type=&quot;card&quot; closable @tab-click=&quot;handleClick&quot; @tab-remove=&quot;remove&quot;&gt;</span><br><span class="line">        &lt;el-tab-pane </span><br><span class="line">            v-for=&quot;item in tabs&quot;</span><br><span class="line">            :key=&quot;item.name&quot;</span><br><span class="line">            :label=&quot;item.name&quot;</span><br><span class="line">            :name=&quot;item.name&quot;</span><br><span class="line">        &gt;</span><br><span class="line">            &lt;template #label&gt;</span><br><span class="line">                &lt;span class=&quot;custom-tabs-label&quot;&gt;</span><br><span class="line">                    &lt;el-icon&gt;</span><br><span class="line">                        &lt;component :is=&quot;item.icon&quot; /&gt;</span><br><span class="line">                    &lt;/el-icon&gt;</span><br><span class="line">                    &lt;span&gt;&amp;nbsp;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            route的内容</span><br><span class="line">        &lt;/el-tab-pane&gt;</span><br><span class="line">    &lt;/el-tabs&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line"> .demo-tabs &#123;</span><br><span class="line">  ::v-deep  .is-active&#123;color: white !important;background-color: #5696ff;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>将<RouterView>挪到tabs中</p><p>很多同学的想法肯定是像下面这样加</p><p><img src="D:/Software/Typora/images/image-20241019133130266.png" alt="image-20241019133130266"></p><p>但是这样你想想，会渲染几个<RouterView>,很明显，循环执行了几次，就会有几个RouterView</p><p>我们可以在dashboard页面验证一下</p><p>&#x3D;&#x3D;views-dashboard-DashBoard.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    数据看板</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;onMounted&#125; from &quot;vue&quot;</span><br><span class="line">    onMounted(()=&gt;&#123;</span><br><span class="line">        console.log(888) //会发现，有几个选项卡就会执行几次</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>所以我们把RouterView拿到tabs的外面去，如下</p><p><img src="D:/Software/Typora/images/image-20241019133442049.png" alt="image-20241019133442049"></p><h2 id="3-左侧菜单和页签同步的问题"><a href="#3-左侧菜单和页签同步的问题" class="headerlink" title="3.左侧菜单和页签同步的问题"></a>3.左侧菜单和页签同步的问题</h2><p>store设置一个currentTab，用来保存当前高亮&#x2F;选中的tab,再添加一个setCurrentTab方法，设置当前高亮的方法</p><p>&#x3D;&#x3D;store-tabs.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span>&#123;<span class="title class_">MenuItem</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@/types/user&quot;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTabsStore = <span class="title function_">defineStore</span>(<span class="string">&quot;tabs&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> tabs = ref&lt;<span class="title class_">MenuItem</span>[]&gt;([&#123; <span class="attr">name</span>: <span class="string">&quot;数据看板&quot;</span>, <span class="attr">url</span>: <span class="string">&quot;/dashboard&quot;</span>, <span class="attr">icon</span>: <span class="string">&quot;DataLine&quot;</span> &#125;]);</span><br><span class="line">    <span class="keyword">const</span> currentTab = ref&lt;&#123; <span class="attr">name</span>: <span class="built_in">string</span>; <span class="attr">url</span>: <span class="built_in">string</span> &#125;&gt;(&#123; <span class="attr">name</span>: <span class="string">&quot;数据看板&quot;</span>, <span class="attr">url</span>: <span class="string">&quot;/dashboard&quot;</span> &#125;);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">addTab</span> = (<span class="params">name: <span class="built_in">string</span>, url: <span class="built_in">string</span>, icon: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!tabs.<span class="property">value</span>.<span class="title function_">some</span>(<span class="function"><span class="params">tab</span> =&gt;</span> tab.<span class="property">url</span> === url)) &#123;</span><br><span class="line">            tabs.<span class="property">value</span>.<span class="title function_">push</span>(&#123; name, url, icon &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setCurrentTab</span> = (<span class="params">name: <span class="built_in">string</span>, path: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">        currentTab.<span class="property">value</span> = &#123; name, path &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;tabs,addTab,currentTab,setCurrentTab&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;layouts-TabsLayout.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-tabs v-model=&quot;currentTab.name&quot; &gt; 更改双向绑定</span><br><span class="line">    </span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;</span><br><span class="line">import type &#123; TabsPaneContext &#125; from &#x27;element-plus&#x27;</span><br><span class="line">import &#123;useTabsStore&#125; from &quot;@/store/tabs.ts&quot;</span><br><span class="line">import &#123; storeToRefs &#125; from &#x27;pinia&#x27;;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;;</span><br><span class="line">const tabsStore = useTabsStore();</span><br><span class="line">const router=useRouter();</span><br><span class="line">const &#123;tabs,currentTab&#125;=storeToRefs(tabsStore);//添加解构赋值</span><br><span class="line">const &#123;setCurrentTab&#125;=tabsStore;//因为是方法，不需要响应式，单独解构</span><br><span class="line">const handleClick = (tab: TabsPaneContext, event: Event) =&gt; &#123;</span><br><span class="line">    router.push(tabs.value[tab.index].url) //路由跳转</span><br><span class="line">    setCurrentTab(tabs.value[tab.index].name,tabs.value[tab.index].url) //设置当前</span><br><span class="line">&#125;</span><br><span class="line">const remove = (panelName: string) =&gt; &#123;</span><br><span class="line">    console.log(panelName)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;components-navMenu-MenuItem.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tabsStore=<span class="title function_">useTabsStore</span>();</span><br><span class="line">    <span class="keyword">const</span> &#123;addTab,setCurrentTab&#125;=tabsStore;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">name: <span class="built_in">string</span>, url: <span class="built_in">string</span>, icon: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="title function_">addTab</span>(name, url, icon);</span><br><span class="line">        <span class="title function_">setCurrentTab</span>(name,url)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;add &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-解决刷新的问题"><a href="#4-解决刷新的问题" class="headerlink" title="4.解决刷新的问题"></a>4.解决刷新的问题</h2><p>之所以刷新后左侧菜单和tab对应不上，是因为我们给tab设置了一刷新默认都是dashboard，这个不太合理，所以去掉默认值如下</p><p><img src="D:/Software/Typora/images/image-20241019141947305.png" alt="image-20241019141947305"></p><p>刷新的时候我们能通过路由对象拿到当前路径，但是我需要拿到当前菜单数据的name和icon，所以我们定义一个方法，根据path，去菜单数据里找出对应的那个数据对象</p><p>&#x3D;&#x3D;layouts-TabsLayout.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useRouter,useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> route=<span class="title function_">useRoute</span>()</span><br><span class="line"><span class="keyword">const</span> &#123;menu&#125; =<span class="title function_">storeToRefs</span>(userStore)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findObjectByUrl</span>(<span class="params">arr, url</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> arr) &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">url</span> === url) &#123;</span><br><span class="line">      <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">children</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> found = <span class="title function_">findObjectByUrl</span>(item.<span class="property">children</span>, url);</span><br><span class="line">      <span class="keyword">if</span> (found) &#123;</span><br><span class="line">        <span class="keyword">return</span> found;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span>; <span class="comment">// 如果未找到，返回 null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;name,url,icon&#125;=<span class="title function_">findObjectByUrl</span>(menu.<span class="property">value</span>,route.<span class="property">path</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_">addTab</span>(name,url,icon)</span><br><span class="line"><span class="title function_">setCurrentTab</span>(name,url)</span><br></pre></td></tr></table></figure><h2 id="5-删除功能"><a href="#5-删除功能" class="headerlink" title="5.删除功能"></a>5.删除功能</h2><p>基本的删除功能</p><p>&#x3D;&#x3D;store-tabs.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">removeTab</span> = (<span class="params">name: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 删除指定路径的选项卡</span></span><br><span class="line">    tabs.<span class="property">value</span> = tabs.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">tab</span> =&gt;</span> tab.<span class="property">name</span> !== name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;layouts-TabsLayout.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">remove</span> = (<span class="params">panelName: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">removeTab</span>(panelName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是如果删除的是当前高亮的tab，就会有bug</p><p>tabs.ts做如下修改</p><p>&#x3D;&#x3D;store-tabs.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">removeTab</span> = (<span class="params">name: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//如果删除的是高亮的</span></span><br><span class="line">    <span class="keyword">if</span> (currentTab.<span class="property">value</span>.<span class="property">name</span> === name)&#123;</span><br><span class="line">        <span class="keyword">const</span> currentIndex = tabs.<span class="property">value</span>.<span class="title function_">findIndex</span>(<span class="function"><span class="params">tab</span> =&gt;</span> tab.<span class="property">name</span> === name);</span><br><span class="line">         <span class="comment">// 如果被移除的标签是当前标签，更新当前标签为前面一个标签</span></span><br><span class="line">         currentTab.<span class="property">value</span> = tabs.<span class="property">value</span>[currentIndex - <span class="number">1</span>]; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除指定路径的选项卡</span></span><br><span class="line">    tabs.<span class="property">value</span> = tabs.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">tab</span> =&gt;</span> tab.<span class="property">name</span> !== name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;layouts-TabsLayout.vue&#x3D;&#x3D;并将路由跳转过去</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">remove</span> = (<span class="params">panelName: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">removeTab</span>(panelName);</span><br><span class="line">    router.<span class="title function_">push</span>(currentTab.<span class="property">value</span>.<span class="property">url</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还是会有bug,如下优化</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">remove</span> = (<span class="params">panelName: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(currentTab.<span class="property">value</span>.<span class="property">name</span>==panelName)&#123;</span><br><span class="line">        <span class="comment">//如果点击的是高亮的</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">552</span>,currentTab.<span class="property">value</span>)</span><br><span class="line">        <span class="title function_">removeTab</span>(panelName);</span><br><span class="line">        router.<span class="title function_">push</span>(currentTab.<span class="property">value</span>.<span class="property">url</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">removeTab</span>(panelName); </span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，如果多个页签，选中了第一个，再删除第一个，就会有bug,改成如果高亮 是第一个，不允许删除</p><p>&#x3D;&#x3D;store-tabs.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">removeTab</span> = (<span class="params">name: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//如果删除的是高亮的</span></span><br><span class="line">    <span class="keyword">if</span> (currentTab.<span class="property">value</span>.<span class="property">name</span> === name)&#123;</span><br><span class="line">        <span class="keyword">const</span> currentIndex = tabs.<span class="property">value</span>.<span class="title function_">findIndex</span>(<span class="function"><span class="params">tab</span> =&gt;</span> tab.<span class="property">name</span> === name);</span><br><span class="line">         <span class="comment">// 如果被移除的标签是当前标签，更新当前标签为前面一个标签</span></span><br><span class="line">         <span class="keyword">if</span>(currentIndex!=<span class="number">0</span>)&#123;</span><br><span class="line">            currentTab.<span class="property">value</span> = tabs.<span class="property">value</span>[currentIndex - <span class="number">1</span>]; </span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">         &#125;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除指定路径的选项卡</span></span><br><span class="line">    tabs.<span class="property">value</span> = tabs.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">tab</span> =&gt;</span> tab.<span class="property">name</span> !== name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="16-数据看板页面开发"><a href="#16-数据看板页面开发" class="headerlink" title="16.数据看板页面开发"></a>16.数据看板页面开发</h1><h2 id="1-设备运行状态模块开发"><a href="#1-设备运行状态模块开发" class="headerlink" title="1.设备运行状态模块开发"></a>1.设备运行状态模块开发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">        &lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">            &lt;el-card&gt;</span><br><span class="line">                &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                    &lt;h3&gt;今日设备运行状态&lt;/h3&gt;</span><br><span class="line">                    &lt;p&gt;更新时间：2024年8月31日&lt;/p&gt;</span><br><span class="line">                    &lt;el-icon color=&quot;#86909c&quot; style=&quot;margin-left: 5px;&quot;&gt;</span><br><span class="line">                        &lt;Refresh /&gt;</span><br><span class="line">                    &lt;/el-icon&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;equipment&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">                        &lt;h4&gt;充电桩使用率&lt;/h4&gt;</span><br><span class="line">                        &lt;img :src=&quot;flash&quot; alt=&quot;&quot; class=&quot;mb mt&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;72 / 95&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;statistic-card&quot;&gt;</span><br><span class="line">                            &lt;el-statistic :value=&quot;9&quot;&gt;</span><br><span class="line">                                &lt;template #title&gt;</span><br><span class="line">                                    &lt;div style=&quot;display: inline-flex; align-items: center&quot;&gt;</span><br><span class="line">                                        异常设备</span><br><span class="line">                                        &lt;el-tooltip effect=&quot;dark&quot;</span><br><span class="line">                                            content=&quot;Number of users who logged into the product in one day&quot;</span><br><span class="line">                                            placement=&quot;top&quot;&gt;</span><br><span class="line">                                            &lt;el-icon style=&quot;margin-left: 4px&quot; :size=&quot;12&quot;&gt;</span><br><span class="line">                                                &lt;Warning /&gt;</span><br><span class="line">                                            &lt;/el-icon&gt;</span><br><span class="line">                                        &lt;/el-tooltip&gt;</span><br><span class="line">                                    &lt;/div&gt;</span><br><span class="line">                                &lt;/template&gt;</span><br><span class="line">                            &lt;/el-statistic&gt;</span><br><span class="line">                            &lt;div class=&quot;statistic-footer&quot;&gt;</span><br><span class="line">                                &lt;div class=&quot;footer-item&quot;&gt;</span><br><span class="line">                                    &lt;span&gt;相较昨日&lt;/span&gt;</span><br><span class="line">                                    &lt;span class=&quot;green&quot;&gt;</span><br><span class="line">                                        24%</span><br><span class="line">                                        &lt;el-icon color=&quot;green&quot;&gt;</span><br><span class="line">                                            &lt;CaretTop /&gt;</span><br><span class="line">                                        &lt;/el-icon&gt;</span><br><span class="line">                                    &lt;/span&gt;</span><br><span class="line">                                &lt;/div&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">                        &lt;h4&gt;充电柜使用率&lt;/h4&gt;</span><br><span class="line">                        &lt;img :src=&quot;flash2&quot; alt=&quot;&quot; class=&quot;mb mt&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;655 / 1233&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;statistic-card&quot;&gt;</span><br><span class="line">                            &lt;el-statistic :value=&quot;22&quot;&gt;</span><br><span class="line">                                &lt;template #title&gt;</span><br><span class="line">                                    &lt;div style=&quot;display: inline-flex; align-items: center&quot;&gt;</span><br><span class="line">                                        异常设备</span><br><span class="line">                                        &lt;el-tooltip effect=&quot;dark&quot;</span><br><span class="line">                                            content=&quot;Number of users who logged into the product in one day&quot;</span><br><span class="line">                                            placement=&quot;top&quot;&gt;</span><br><span class="line">                                            &lt;el-icon style=&quot;margin-left: 4px&quot; :size=&quot;12&quot;&gt;</span><br><span class="line">                                                &lt;Warning /&gt;</span><br><span class="line">                                            &lt;/el-icon&gt;</span><br><span class="line">                                        &lt;/el-tooltip&gt;</span><br><span class="line">                                    &lt;/div&gt;</span><br><span class="line">                                &lt;/template&gt;</span><br><span class="line">                            &lt;/el-statistic&gt;</span><br><span class="line">                            &lt;div class=&quot;statistic-footer&quot;&gt;</span><br><span class="line">                                &lt;div class=&quot;footer-item&quot;&gt;</span><br><span class="line">                                    &lt;span&gt;相较昨日&lt;/span&gt;</span><br><span class="line">                                    &lt;span class=&quot;green&quot;&gt;</span><br><span class="line">                                        24%</span><br><span class="line">                                        &lt;el-icon color=&quot;red&quot;&gt;</span><br><span class="line">                                            &lt;CaretTop /&gt;</span><br><span class="line">                                        &lt;/el-icon&gt;</span><br><span class="line">                                    &lt;/span&gt;</span><br><span class="line">                                &lt;/div&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">                        &lt;h4&gt;充电站使用率&lt;/h4&gt;</span><br><span class="line">                        &lt;img :src=&quot;flash3&quot; alt=&quot;&quot; class=&quot;mb mt&quot;&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;h1&gt;2263 / 3398&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;statistic-card&quot;&gt;</span><br><span class="line">                            &lt;el-statistic :value=&quot;47&quot;&gt;</span><br><span class="line">                                &lt;template #title&gt;</span><br><span class="line">                                    &lt;div style=&quot;display: inline-flex; align-items: center&quot;&gt;</span><br><span class="line">                                        异常设备</span><br><span class="line">                                        &lt;el-tooltip effect=&quot;dark&quot;</span><br><span class="line">                                            content=&quot;Number of users who logged into the product in one day&quot;</span><br><span class="line">                                            placement=&quot;top&quot;&gt;</span><br><span class="line">                                            &lt;el-icon style=&quot;margin-left: 4px&quot; :size=&quot;12&quot;&gt;</span><br><span class="line">                                                &lt;Warning /&gt;</span><br><span class="line">                                            &lt;/el-icon&gt;</span><br><span class="line">                                        &lt;/el-tooltip&gt;</span><br><span class="line">                                    &lt;/div&gt;</span><br><span class="line">                                &lt;/template&gt;</span><br><span class="line">                            &lt;/el-statistic&gt;</span><br><span class="line">                            &lt;div class=&quot;statistic-footer&quot;&gt;</span><br><span class="line">                                &lt;div class=&quot;footer-item&quot;&gt;</span><br><span class="line">                                    &lt;span&gt;相较昨日&lt;/span&gt;</span><br><span class="line">                                    &lt;span class=&quot;green&quot;&gt;</span><br><span class="line">                                        24%</span><br><span class="line">                                        &lt;el-icon color=&quot;green&quot;&gt;</span><br><span class="line">                                            &lt;CaretTop /&gt;</span><br><span class="line">                                        &lt;/el-icon&gt;</span><br><span class="line">                                    &lt;/span&gt;</span><br><span class="line">                                &lt;/div&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/el-card&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">        &lt;el-col :span=&quot;6&quot;&gt;&lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import flash from &quot;@/assets/flash.png&quot;</span><br><span class="line">import flash2 from &quot;@/assets/flash2.png&quot;</span><br><span class="line">import flash3 from &quot;@/assets/flash3.png&quot;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.title &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: flex-end;</span><br><span class="line">    /* 底部对齐 */</span><br><span class="line">    margin-bottom: 30px;</span><br><span class="line">    font-size: 20px;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    text-align: center;</span><br><span class="line">    margin-bottom: 20px;</span><br><span class="line">    p &#123;</span><br><span class="line">        color: #86909c;</span><br><span class="line">        margin-left: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.equipment &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    padding: 0 50px;</span><br><span class="line"></span><br><span class="line">    .item &#123;</span><br><span class="line">        h4 &#123;</span><br><span class="line">            margin-bottom: 20px;</span><br><span class="line">            margin-top: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h1 &#123;</span><br><span class="line">            font-size: 36px;</span><br><span class="line">            margin-bottom: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .statistic-card &#123;</span><br><span class="line">            .el-statistic__content &#123;</span><br><span class="line">                margin: 10px !important;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="2-常用功能页面开发"><a href="#2-常用功能页面开发" class="headerlink" title="2.常用功能页面开发"></a>2.常用功能页面开发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">            &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">                &lt;template #header&gt;</span><br><span class="line">                    &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;常用功能&lt;/h1&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">                &lt;div class=&quot;quick mt mb&quot;&gt;</span><br><span class="line">                    &lt;div :span=&quot;4&quot;&gt;</span><br><span class="line">                        &lt;img :src=&quot;repair&quot;&gt;</span><br><span class="line">                        &lt;p&gt;设备维修&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div :span=&quot;4&quot;&gt;</span><br><span class="line">                        &lt;img :src=&quot;daily&quot;&gt;</span><br><span class="line">                        &lt;p&gt;每日日报&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div :span=&quot;4&quot;&gt;</span><br><span class="line">                        &lt;img :src=&quot;progress&quot;&gt;</span><br><span class="line">                        &lt;p&gt;任务进度&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div :span=&quot;4&quot;&gt;</span><br><span class="line">                        &lt;img :src=&quot;total&quot;&gt;</span><br><span class="line">                        &lt;p&gt;营收占比&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div :span=&quot;4&quot;&gt;</span><br><span class="line">                        &lt;img :src=&quot;money&quot;&gt;</span><br><span class="line">                        &lt;p&gt;营收统计&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div :span=&quot;4&quot;&gt;</span><br><span class="line">                        &lt;img :src=&quot;remain&quot;&gt;</span><br><span class="line">                        &lt;p&gt;待办事项&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/el-card&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import flash from &quot;@/assets/flash.png&quot;</span><br><span class="line">import flash2 from &quot;@/assets/flash2.png&quot;</span><br><span class="line">import flash3 from &quot;@/assets/flash3.png&quot;</span><br><span class="line">import repair from &quot;@/assets/repair.png&quot;</span><br><span class="line">import progress from &quot;@/assets/progress.png&quot;</span><br><span class="line">import remain from &quot;@/assets/remain.png&quot;</span><br><span class="line">import total from &quot;@/assets/total.png&quot;</span><br><span class="line">import money from &quot;@/assets/money.png&quot;</span><br><span class="line">import daily from &quot;@/assets/daily.png&quot;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.quick &#123;</span><br><span class="line">    padding: 0 40px;</span><br><span class="line">    margin-top: 30px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        color: #333;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="3-使用echarts"><a href="#3-使用echarts" class="headerlink" title="3.使用echarts"></a>3.使用echarts</h2><p>安装echarts</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install echarts --save</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span>;</span><br></pre></td></tr></table></figure><p>添加一个card</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">               &lt;template #header&gt;</span><br><span class="line">                   &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                       &lt;h1&gt;能源统计&lt;/h1&gt;</span><br><span class="line">                   &lt;/div&gt;</span><br><span class="line">               &lt;/template&gt;</span><br><span class="line">               &lt;el-row&gt;</span><br><span class="line">                   &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                       &lt;div ref=&quot;chartRef2&quot; style=&quot;width: 100%; height: 400px;margin-top: -40px&quot;&gt;&lt;/div&gt;</span><br><span class="line">                   &lt;/el-col&gt;</span><br><span class="line">                   &lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">                       &lt;div ref=&quot;chartRef&quot; style=&quot;width: 100%; height: 400px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">                   &lt;/el-col&gt;</span><br><span class="line">               &lt;/el-row&gt;</span><br><span class="line"> &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><p>如下这样写刚好报错，因为我们的图标需要用到dom实例，但是现在是在setup生命周期里的，所以需要在挂载完毕的时候渲染图表</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import * as echarts from &#x27;echarts&#x27;;</span><br><span class="line">import &#123;ref&#125; from &quot;vue&quot;</span><br><span class="line">const chartRef = ref(null)</span><br><span class="line">const chartRef2 = ref(null)</span><br><span class="line">// 基于准备好的dom，初始化echarts实例</span><br><span class="line">var myChart = echarts.init(chartRef.value);</span><br><span class="line">// 绘制图表</span><br><span class="line">myChart.setOption(&#123;</span><br><span class="line">  title: &#123;</span><br><span class="line">    text: &#x27;ECharts 入门示例&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  tooltip: &#123;&#125;,</span><br><span class="line">  xAxis: &#123;</span><br><span class="line">    data: [&#x27;衬衫&#x27;, &#x27;羊毛衫&#x27;, &#x27;雪纺衫&#x27;, &#x27;裤子&#x27;, &#x27;高跟鞋&#x27;, &#x27;袜子&#x27;]</span><br><span class="line">  &#125;,</span><br><span class="line">  yAxis: &#123;&#125;,</span><br><span class="line">  series: [</span><br><span class="line">    &#123;</span><br><span class="line">      name: &#x27;销量&#x27;,</span><br><span class="line">      type: &#x27;bar&#x27;,</span><br><span class="line">      data: [5, 20, 36, 10, 10, 20]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>改成下面的写法才可生效</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt; </span><br><span class="line">import * as echarts from &#x27;echarts&#x27;;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;</span><br><span class="line">import &#123; onMounted &#125; from &quot;vue&quot;</span><br><span class="line">const chartRef = ref(null)</span><br><span class="line">const chartRef2 = ref(null)</span><br><span class="line">// 基于准备好的dom，初始化echarts实例</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">    var myChart = echarts.init(chartRef.value);</span><br><span class="line">    // 绘制图表</span><br><span class="line">    myChart.setOption(&#123;</span><br><span class="line">        title: &#123;</span><br><span class="line">            text: &#x27;ECharts 入门示例&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: &#123;&#125;,</span><br><span class="line">        xAxis: &#123;</span><br><span class="line">            data: [&#x27;衬衫&#x27;, &#x27;羊毛衫&#x27;, &#x27;雪纺衫&#x27;, &#x27;裤子&#x27;, &#x27;高跟鞋&#x27;, &#x27;袜子&#x27;]</span><br><span class="line">        &#125;,</span><br><span class="line">        yAxis: &#123;&#125;,</span><br><span class="line">        series: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: &#x27;销量&#x27;,</span><br><span class="line">                type: &#x27;bar&#x27;,</span><br><span class="line">                data: [5, 20, 36, 10, 10, 20]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="4-解决窗口变化echarts适配问题"><a href="#4-解决窗口变化echarts适配问题" class="headerlink" title="4.解决窗口变化echarts适配问题"></a>4.解决窗口变化echarts适配问题</h2><p>添加resize事件</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span><br><span class="line"><span class="keyword">var</span> myChart = echarts.<span class="title function_">init</span>(chartRef.<span class="property">value</span>);</span><br><span class="line"><span class="comment">// 绘制图表</span></span><br><span class="line">myChart.<span class="title function_">setOption</span>(&#123;</span><br><span class="line">  <span class="attr">xAxis</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">yAxis</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">series</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">data</span>: [<span class="number">150</span>, <span class="number">230</span>, <span class="number">224</span>, <span class="number">218</span>, <span class="number">135</span>, <span class="number">147</span>, <span class="number">260</span>],</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resizeChart</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    myChart.<span class="title function_">resize</span>();</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resizeChart);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>样式穿透优化一下</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.statistic-card</span> &#123;</span><br><span class="line">          :<span class="built_in">deep</span>(.el-statistic__content) &#123;</span><br><span class="line">               <span class="attribute">margin</span>: <span class="number">10px</span> <span class="meta">!important</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="5-封装useChart自定义组合式函数"><a href="#5-封装useChart自定义组合式函数" class="headerlink" title="5.封装useChart自定义组合式函数"></a>5.封装useChart自定义组合式函数</h2><p>hooks-useChart.ts</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, onMounted, onBeforeUnmount, <span class="title class_">Ref</span>,markRaw  &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useChart</span>(<span class="params">chartRef: Ref&lt;HTMLElement | <span class="literal">null</span>&gt;, initialOptions: <span class="built_in">any</span></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> chartInstance = ref&lt;echarts.<span class="property">ECharts</span> | <span class="literal">null</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">const</span> chartOptions = <span class="title function_">ref</span>(initialOptions);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">initChart</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (chartRef.<span class="property">value</span>) &#123;</span><br><span class="line">             chartInstance.<span class="property">value</span> =echarts.<span class="title function_">init</span>(chartRef.<span class="property">value</span>);</span><br><span class="line">             chartInstance.<span class="property">value</span>.<span class="title function_">setOption</span>(chartOptions.<span class="property">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">resizeChart</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        chartInstance.<span class="property">value</span>?.<span class="title function_">resize</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">initChart</span>();</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resizeChart);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title function_">onBeforeUnmount</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resizeChart);</span><br><span class="line">        <span class="keyword">if</span> (chartInstance.<span class="property">value</span>) &#123;</span><br><span class="line">            chartInstance.<span class="property">value</span>.<span class="title function_">dispose</span>();<span class="comment">//dispose 方法的作用是释放图表实例所占用的资源，以便在不再需要图表时清理内存</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样封装有问题，会发现当我改变窗口的时候会报错</p><p>按如下更改：</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Echarts 管理的状态和数据与 Vue 的响应式产生冲突，导致Echarts 无法正常更新而报错。</span></span><br><span class="line">          <span class="comment">// 解决：取消 VUE 的响应式系统观测 Echarts 的变化更新，让Echarts 自动更新。</span></span><br><span class="line">          chartInstance.<span class="property">value</span> =<span class="title function_">markRaw</span>(echarts.<span class="title function_">init</span>(chartRef.<span class="property">value</span>)) ;</span><br></pre></td></tr></table></figure><p>使用：</p><p>&#x3D;&#x3D;DashBoard.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> chartRef = <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">const</span> chartOptions = &#123;</span><br><span class="line">    <span class="attr">title</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;ECharts 入门示例&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;衬衫333&#x27;</span>, <span class="string">&#x27;羊毛衫&#x27;</span>, <span class="string">&#x27;雪纺衫&#x27;</span>, <span class="string">&#x27;裤子&#x27;</span>, <span class="string">&#x27;高跟鞋&#x27;</span>, <span class="string">&#x27;袜子&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;销量&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="number">5</span>, <span class="number">20</span>, <span class="number">36</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">20</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">useChart</span>(chartRef,chartOptions)</span><br></pre></td></tr></table></figure><h2 id="6-实现电量统计的图表"><a href="#6-实现电量统计的图表" class="headerlink" title="6.实现电量统计的图表"></a>6.实现电量统计的图表</h2><p>基本的配置:</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> chartOptions = &#123;</span><br><span class="line">    <span class="attr">title</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;电量统计&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;left top&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="keyword">function</span> (<span class="params">params</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> params[<span class="number">0</span>].<span class="property">name</span> + <span class="string">&#x27;&lt;br/&gt;&#x27;</span> + params[<span class="number">0</span>].<span class="property">seriesName</span> + <span class="string">&#x27;: &#x27;</span> + params[<span class="number">0</span>].<span class="property">value</span> + <span class="string">&#x27;KW&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">legend</span>: &#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;充电量&#x27;</span>, <span class="string">&#x27;充电时长&#x27;</span>, <span class="string">&#x27;充电功率&#x27;</span>],</span><br><span class="line">        <span class="attr">textStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#333&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;13:00&#x27;</span>, <span class="string">&#x27;14:00&#x27;</span>, <span class="string">&#x27;15:00&#x27;</span>, <span class="string">&#x27;16:00&#x27;</span>, <span class="string">&#x27;17:00&#x27;</span>, <span class="string">&#x27;18:00&#x27;</span>, <span class="string">&#x27;19:00&#x27;</span>, <span class="string">&#x27;20:00&#x27;</span>, <span class="string">&#x27;21:00&#x27;</span>],</span><br><span class="line">        <span class="attr">boundaryGap</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;KW&#x27;</span>,</span><br><span class="line">        <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">            <span class="attr">formatter</span>: <span class="string">&#x27;&#123;value&#125; KW&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;充电量&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="number">20</span>, <span class="number">50</span>, <span class="number">30</span>, <span class="number">70</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">50</span>],</span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(0, 0, 255, 0.5)&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowBlur</span>: <span class="number">10</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">width</span>: <span class="number">4</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;充电时长&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="number">40</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>],</span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;lightgreen&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(0, 255, 0, 0.5)&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowBlur</span>: <span class="number">10</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">width</span>: <span class="number">4</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;充电功率&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="number">30</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">60</span>],</span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;skyblue&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(173, 216, 230, 0.5)&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowBlur</span>: <span class="number">10</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">width</span>: <span class="number">4</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这样数据是写死的，我们真实工作中数据肯定是通过接口获取，所以添加获取图表数据的接口</p><p>&#x3D;&#x3D;mock-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//echarts图表数据接口</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;https://www.demo.com/chartData&quot;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;登陆成功&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">list</span>:[</span><br><span class="line">        &#123;<span class="attr">name</span>:<span class="string">&quot;充电量&quot;</span>,<span class="attr">data</span>: [<span class="number">20</span>, <span class="number">50</span>, <span class="number">30</span>, <span class="number">70</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">50</span>]&#125;,</span><br><span class="line">        &#123;<span class="attr">name</span>:<span class="string">&quot;充电时长&quot;</span>,<span class="attr">data</span>: [<span class="number">40</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>]&#125;,</span><br><span class="line">        &#123;<span class="attr">name</span>:<span class="string">&quot;充电功率&quot;</span>,<span class="attr">data</span>:  [<span class="number">30</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">60</span>]&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;api-dashboard.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; get &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    chartData = <span class="string">&#x27;/chartData&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">chartDataApi</span>(<span class="params"></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="title class_">Api</span>.<span class="property">chartData</span>)</span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">export</span> &#123;chartDataApi&#125;</span><br></pre></td></tr></table></figure><p>优化我们之前封装的组合式函数</p><p>&#x3D;&#x3D;Dashboard.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;chartDataApi&#125; <span class="keyword">from</span> <span class="string">&quot;@/api/dashboard&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">const</span> chartRef = <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setChartData</span>=<span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> chartOptions = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;电量统计&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;left top&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="keyword">function</span> (<span class="params">params</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> params[<span class="number">0</span>].<span class="property">name</span> + <span class="string">&#x27;&lt;br/&gt;&#x27;</span> + params[<span class="number">0</span>].<span class="property">seriesName</span> + <span class="string">&#x27;: &#x27;</span> + params[<span class="number">0</span>].<span class="property">value</span> + <span class="string">&#x27;KW&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">legend</span>: &#123;</span><br><span class="line">       <span class="comment">// data: [&#x27;充电量&#x27;, &#x27;充电时长&#x27;, &#x27;充电功率&#x27;],</span></span><br><span class="line">        <span class="attr">textStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#333&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;13:00&#x27;</span>, <span class="string">&#x27;14:00&#x27;</span>, <span class="string">&#x27;15:00&#x27;</span>, <span class="string">&#x27;16:00&#x27;</span>, <span class="string">&#x27;17:00&#x27;</span>, <span class="string">&#x27;18:00&#x27;</span>, <span class="string">&#x27;19:00&#x27;</span>, <span class="string">&#x27;20:00&#x27;</span>, <span class="string">&#x27;21:00&#x27;</span>],</span><br><span class="line">        <span class="attr">boundaryGap</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;KW&#x27;</span>,</span><br><span class="line">        <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">            <span class="attr">formatter</span>: <span class="string">&#x27;&#123;value&#125; KW&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">         </span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;充电量&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">           <span class="comment">// data: [20, 50, 30, 70, 60, 80, 40, 60, 50],</span></span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(0, 0, 255, 0.5)&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowBlur</span>: <span class="number">10</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">width</span>: <span class="number">4</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;充电时长&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">          <span class="comment">//  data: [30, 40, 60, 50, 70, 20, 30, 40, 60],</span></span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;lightgreen&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(0, 255, 0, 0.5)&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowBlur</span>: <span class="number">10</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">width</span>: <span class="number">4</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;充电功率&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">          <span class="comment">//   data: [30, 40, 60, 50, 70, 20, 30, 40, 60],</span></span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;skyblue&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(173, 216, 230, 0.5)&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowBlur</span>: <span class="number">10</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">width</span>: <span class="number">4</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line">    <span class="keyword">const</span> res=<span class="keyword">await</span> <span class="title function_">chartDataApi</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;res.<span class="property">data</span>.<span class="property">list</span>.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        chartOptions.<span class="property">series</span>[i].<span class="property">name</span>=res.<span class="property">data</span>.<span class="property">list</span>[i].<span class="property">name</span></span><br><span class="line">        chartOptions.<span class="property">series</span>[i].<span class="property">data</span>=res.<span class="property">data</span>.<span class="property">list</span>[i].<span class="property">data</span></span><br><span class="line">    &#125;</span><br><span class="line">    chartOptions.<span class="property">legend</span>.<span class="property">data</span>=res.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span>=&gt;</span>item.<span class="property">name</span>)  </span><br><span class="line">    <span class="keyword">return</span> chartOptions</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">useChart</span>(chartRef,setChartData)</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;useChart.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, onMounted, onBeforeUnmount, <span class="title class_">Ref</span>,markRaw  &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useChart</span>(<span class="params">chartRef: Ref&lt;HTMLElement | <span class="literal">null</span>&gt;, setChartData: <span class="built_in">any</span></span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> chartInstance = ref&lt;echarts.<span class="property">ECharts</span> | <span class="literal">null</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">    <span class="comment">//const chartOptions = ref(initialOptions);</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">initChart</span> =<span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (chartRef.<span class="property">value</span>) &#123;</span><br><span class="line">             chartInstance.<span class="property">value</span> =<span class="title function_">markRaw</span>(echarts.<span class="title function_">init</span>(chartRef.<span class="property">value</span>));</span><br><span class="line">             <span class="keyword">const</span> options=<span class="keyword">await</span> <span class="title function_">setChartData</span>()</span><br><span class="line">             chartInstance.<span class="property">value</span>.<span class="title function_">setOption</span>(options);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">resizeChart</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        chartInstance.<span class="property">value</span>?.<span class="title function_">resize</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">initChart</span>();</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resizeChart);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title function_">onBeforeUnmount</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resizeChart);</span><br><span class="line">        <span class="keyword">if</span> (chartInstance.<span class="property">value</span>) &#123;</span><br><span class="line">            chartInstance.<span class="property">value</span>.<span class="title function_">dispose</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>封装好之后，同理饼图我们也可以如此设置</p><p>原始配置项</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">    <span class="attr">legend</span>: &#123;</span><br><span class="line">        <span class="attr">top</span>: <span class="string">&#x27;bottom&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; %&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;营收占比&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">            <span class="attr">radius</span>: [<span class="string">&#x27;50%&#x27;</span>, <span class="string">&#x27;70%&#x27;</span>], <span class="comment">// 内外半径形成环形</span></span><br><span class="line">            <span class="attr">center</span>: [<span class="string">&#x27;50%&#x27;</span>, <span class="string">&#x27;50%&#x27;</span>],</span><br><span class="line">            <span class="attr">roseType</span>: <span class="string">&#x27;area&#x27;</span>,</span><br><span class="line">            <span class="attr">color</span>: [<span class="string">&#x27;#4B6EBD&#x27;</span>, <span class="string">&#x27;#3DBB92&#x27;</span>, <span class="string">&#x27;#53C1D6&#x27;</span>], <span class="comment">// 颜色</span></span><br><span class="line">            <span class="attr">label</span>: &#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">emphasis</span>: &#123;</span><br><span class="line">                <span class="attr">label</span>: &#123;</span><br><span class="line">                    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">fontSize</span>: <span class="string">&#x27;16&#x27;</span>,</span><br><span class="line">                    <span class="attr">fontWeight</span>: <span class="string">&#x27;bold&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">data</span>: [</span><br><span class="line">                &#123; <span class="attr">value</span>: <span class="number">35</span>, <span class="attr">name</span>: <span class="string">&#x27;充电桩&#x27;</span> &#125;,  <span class="comment">// 数据值和名称</span></span><br><span class="line">                &#123; <span class="attr">value</span>: <span class="number">30</span>, <span class="attr">name</span>: <span class="string">&#x27;充电站&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">value</span>: <span class="number">25</span>, <span class="attr">name</span>: <span class="string">&#x27;充电杆&#x27;</span> &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">graphic</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">        <span class="attr">top</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">        <span class="attr">style</span>: &#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;营收占比&#x27;</span>,</span><br><span class="line">            <span class="attr">textAlign</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">            <span class="attr">textVerticalAlign</span>: <span class="string">&#x27;middle&#x27;</span>,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">20</span>,</span><br><span class="line">            <span class="attr">fill</span>: <span class="string">&#x27;#333&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;api-dashboard.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; get &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    chartData = <span class="string">&#x27;/chartData&#x27;</span>,</span><br><span class="line">    chartData2 = <span class="string">&#x27;/chartData2&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">function</span> <span class="title function_">chartDataApi</span>(<span class="params"></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="title class_">Api</span>.<span class="property">chartData</span>)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">chartDataApi2</span>(<span class="params"></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="title class_">Api</span>.<span class="property">chartData2</span>)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">export</span> &#123;chartDataApi,chartDataApi2&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;mock-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">////echarts图表数据接口2 饼图</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;https://www.demo.com/chartData2&quot;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;操作成功&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">list</span>:[</span><br><span class="line">        &#123; <span class="attr">value</span>: <span class="number">35</span>, <span class="attr">name</span>: <span class="string">&#x27;充电桩&#x27;</span> &#125;,  <span class="comment">// 数据值和名称</span></span><br><span class="line">        &#123; <span class="attr">value</span>: <span class="number">30</span>, <span class="attr">name</span>: <span class="string">&#x27;充电站&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">value</span>: <span class="number">25</span>, <span class="attr">name</span>: <span class="string">&#x27;充电杆&#x27;</span> &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Dashboard.vue</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">setChartData2</span>=<span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> chartOptions=<span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">legend</span>: &#123;</span><br><span class="line">        <span class="attr">top</span>: <span class="string">&#x27;bottom&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; %&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;营收占比&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">            <span class="attr">radius</span>: [<span class="string">&#x27;50%&#x27;</span>, <span class="string">&#x27;70%&#x27;</span>], <span class="comment">// 内外半径形成环形</span></span><br><span class="line">            <span class="attr">center</span>: [<span class="string">&#x27;50%&#x27;</span>, <span class="string">&#x27;50%&#x27;</span>],</span><br><span class="line">            <span class="attr">roseType</span>: <span class="string">&#x27;area&#x27;</span>,</span><br><span class="line">            <span class="attr">color</span>: [<span class="string">&#x27;#4B6EBD&#x27;</span>, <span class="string">&#x27;#3DBB92&#x27;</span>, <span class="string">&#x27;#53C1D6&#x27;</span>], <span class="comment">// 颜色</span></span><br><span class="line">            <span class="attr">label</span>: &#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">emphasis</span>: &#123;</span><br><span class="line">                <span class="attr">label</span>: &#123;</span><br><span class="line">                    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">fontSize</span>: <span class="string">&#x27;16&#x27;</span>,</span><br><span class="line">                    <span class="attr">fontWeight</span>: <span class="string">&#x27;bold&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">data</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">graphic</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">        <span class="attr">top</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">        <span class="attr">style</span>: &#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;营收占比&#x27;</span>,</span><br><span class="line">            <span class="attr">textAlign</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">            <span class="attr">textVerticalAlign</span>: <span class="string">&#x27;middle&#x27;</span>,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">20</span>,</span><br><span class="line">            <span class="attr">fill</span>: <span class="string">&#x27;#333&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">    <span class="keyword">const</span> res=<span class="keyword">await</span> <span class="title function_">chartDataApi2</span>();</span><br><span class="line">    chartOptions.<span class="property">series</span>[<span class="number">0</span>].<span class="property">data</span>=res.<span class="property">data</span>.<span class="property">list</span></span><br><span class="line">    <span class="keyword">return</span> chartOptions</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">useChart</span>(chartRef,setChartData)</span><br><span class="line"><span class="title function_">useChart</span>(chartRef2,setChartData2)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-雷达图"><a href="#7-雷达图" class="headerlink" title="7.雷达图"></a>7.雷达图</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card&gt;</span><br><span class="line">              &lt;template #header&gt;</span><br><span class="line">                  &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                      &lt;h1&gt;设备总览&lt;/h1&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">              &lt;/template&gt;</span><br><span class="line">              &lt;div ref=&quot;chartRef3&quot; style=&quot;width: 100%; height: 240px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;mock&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//echarts图表数据接口3 雷达图</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;https://www.demo.com/chartData3&quot;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;操作成功&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">list</span>: [<span class="number">42</span>, <span class="number">30</span>, <span class="number">200</span>, <span class="number">350</span>, <span class="number">500</span>, <span class="number">180</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>api</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">chartDataApi3</span>(<span class="params"></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="title class_">Api</span>.<span class="property">chartData3</span>)</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">setChartData3</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> chartOptions = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">radar</span>: &#123;</span><br><span class="line">        <span class="comment">// shape: &#x27;circle&#x27;,</span></span><br><span class="line">        <span class="attr">indicator</span>: [</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;闲置数&#x27;</span>, <span class="attr">max</span>: <span class="number">65</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;使用数&#x27;</span>, <span class="attr">max</span>: <span class="number">160</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;故障数&#x27;</span>, <span class="attr">max</span>: <span class="number">300</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;维修数&#x27;</span>, <span class="attr">max</span>: <span class="number">380</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;更换数&#x27;</span>, <span class="attr">max</span>: <span class="number">520</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;报废数&#x27;</span>, <span class="attr">max</span>: <span class="number">250</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;Budget vs spending&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;radar&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: [],</span><br><span class="line">                    <span class="attr">name</span>: <span class="string">&#x27;Allocated Budget&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line"></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">chartDataApi3</span>();</span><br><span class="line">    chartOptions.<span class="property">series</span>[<span class="number">0</span>].<span class="property">data</span>[<span class="number">0</span>].<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">list</span></span><br><span class="line">    <span class="keyword">return</span> chartOptions</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-营收统计表开发"><a href="#8-营收统计表开发" class="headerlink" title="8.营收统计表开发"></a>8.营收统计表开发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">               &lt;template #header&gt;</span><br><span class="line">                   &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                       &lt;h1&gt;营收统计表&lt;/h1&gt;</span><br><span class="line">                   &lt;/div&gt;</span><br><span class="line">               &lt;/template&gt;</span><br><span class="line">               &lt;ul class=&quot;ranking-list&quot;&gt;</span><br><span class="line">                   &lt;li class=&quot;ranking-item&quot;&gt;</span><br><span class="line">                       &lt;span class=&quot;rank&quot; style=&quot;background-color:rgb(103, 194, 58);color: #fff ;&quot;&gt;1&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;store-name&quot;&gt;广州&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">                       &lt;span class=&quot;sales&quot;&gt;52,457&lt;/span&gt;</span><br><span class="line">                       &lt;span style=&quot;margin-left: 50px;&quot;&gt;</span><br><span class="line">                           24%</span><br><span class="line">                           &lt;el-icon color=&quot;green&quot;&gt;</span><br><span class="line">                               &lt;CaretTop /&gt;</span><br><span class="line">                           &lt;/el-icon&gt;</span><br><span class="line">                       &lt;/span&gt;</span><br><span class="line">                   &lt;/li&gt;</span><br><span class="line">                   &lt;li class=&quot;ranking-item&quot;&gt;</span><br><span class="line">                       &lt;span class=&quot;rank&quot; style=&quot;background-color:rgb(64, 158, 255) ;color: #fff ;&quot;&gt;2&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;store-name&quot;&gt;上海&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;sales&quot;&gt;323,234&lt;/span&gt;</span><br><span class="line">                       &lt;span style=&quot;margin-left: 50px;&quot;&gt;</span><br><span class="line">                           24%</span><br><span class="line">                           &lt;el-icon color=&quot;red&quot;&gt;</span><br><span class="line">                               &lt;CaretBottom /&gt;</span><br><span class="line">                           &lt;/el-icon&gt;</span><br><span class="line">                       &lt;/span&gt;</span><br><span class="line">                   &lt;/li&gt;</span><br><span class="line">                   &lt;li class=&quot;ranking-item&quot;&gt;</span><br><span class="line">                       &lt;span class=&quot;rank&quot; style=&quot;background-color:rgb(230, 162, 60) ;color: #fff ;&quot;&gt;3&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;store-name&quot;&gt;佛山&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;sales&quot;&gt;192,255&lt;/span&gt;</span><br><span class="line">                       &lt;span style=&quot;margin-left: 50px;&quot;&gt;</span><br><span class="line">                           24%</span><br><span class="line">                           &lt;el-icon color=&quot;red&quot;&gt;</span><br><span class="line">                               &lt;CaretBottom /&gt;</span><br><span class="line">                           &lt;/el-icon&gt;</span><br><span class="line">                       &lt;/span&gt;</span><br><span class="line">                   &lt;/li&gt;</span><br><span class="line">                   &lt;li class=&quot;ranking-item&quot;&gt;</span><br><span class="line">                       &lt;span class=&quot;rank&quot;&gt;4&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;store-name&quot;&gt;珠海&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;sales&quot;&gt;17,540&lt;/span&gt;</span><br><span class="line">                       &lt;span style=&quot;margin-left: 50px;&quot;&gt;</span><br><span class="line">                           24%</span><br><span class="line">                           &lt;el-icon color=&quot;green&quot;&gt;</span><br><span class="line">                               &lt;CaretTop /&gt;</span><br><span class="line">                           &lt;/el-icon&gt;</span><br><span class="line">                       &lt;/span&gt;</span><br><span class="line">                   &lt;/li&gt;</span><br><span class="line">                   &lt;li class=&quot;ranking-item&quot;&gt;</span><br><span class="line">                       &lt;span class=&quot;rank&quot;&gt;5&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;store-name&quot;&gt;深圳&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;sales&quot;&gt;662,337&lt;/span&gt;</span><br><span class="line">                       &lt;span style=&quot;margin-left: 50px;&quot;&gt;</span><br><span class="line">                           24%</span><br><span class="line">                           &lt;el-icon color=&quot;red&quot;&gt;</span><br><span class="line">                               &lt;CaretBottom /&gt;</span><br><span class="line">                           &lt;/el-icon&gt;</span><br><span class="line">                       &lt;/span&gt;</span><br><span class="line">                   &lt;/li&gt;</span><br><span class="line">                   &lt;li class=&quot;ranking-item&quot;&gt;</span><br><span class="line">                       &lt;span class=&quot;rank&quot;&gt;6&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;store-name&quot;&gt;厦门&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;sales&quot;&gt;22,941&lt;/span&gt;</span><br><span class="line">                       &lt;span style=&quot;margin-left: 50px;&quot;&gt;</span><br><span class="line">                           24%</span><br><span class="line">                           &lt;el-icon color=&quot;green&quot;&gt;</span><br><span class="line">                               &lt;CaretTop /&gt;</span><br><span class="line">                           &lt;/el-icon&gt;</span><br><span class="line">                       &lt;/span&gt;</span><br><span class="line">                   &lt;/li&gt;</span><br><span class="line">                   &lt;li class=&quot;ranking-item&quot;&gt;</span><br><span class="line">                       &lt;span class=&quot;rank&quot;&gt;7&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;store-name&quot;&gt;长沙&lt;/span&gt;</span><br><span class="line">                       &lt;span class=&quot;sales&quot;&gt;565,221&lt;/span&gt;</span><br><span class="line">                       &lt;span style=&quot;margin-left: 50px;&quot;&gt;</span><br><span class="line">                           24%</span><br><span class="line">                           &lt;el-icon color=&quot;green&quot;&gt;</span><br><span class="line">                               &lt;CaretTop /&gt;</span><br><span class="line">                           &lt;/el-icon&gt;</span><br><span class="line">                       &lt;/span&gt;</span><br><span class="line">                   &lt;/li&gt;</span><br><span class="line">               &lt;/ul&gt;</span><br><span class="line">           &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.ranking-list</span> &#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ranking-item</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ranking-item</span><span class="selector-pseudo">:nth-child</span>(even) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">253</span>, <span class="number">246</span>, <span class="number">236</span>);</span><br><span class="line">    <span class="comment">/* 交替背景色 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.rank</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="comment">/* 排名颜色 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.store-name</span> &#123;</span><br><span class="line">    <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sales</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="comment">/* 销售额颜色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-故障报警"><a href="#9-故障报警" class="headerlink" title="9.故障报警"></a>9.故障报警</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">                &lt;template #header&gt;</span><br><span class="line">                    &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;故障报警&lt;/h1&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">                &lt;el-timeline style=&quot;max-width: 600px&quot;&gt;</span><br><span class="line">                    &lt;el-timeline-item timestamp=&quot;2018/4/12&quot; placement=&quot;top&quot; :hollow=&quot;true&quot; type=&quot;danger&quot;&gt;</span><br><span class="line">                        &lt;el-card&gt;</span><br><span class="line">                            &lt;h4&gt;矿业北路通讯中断&lt;/h4&gt;</span><br><span class="line">                        &lt;/el-card&gt;</span><br><span class="line">                    &lt;/el-timeline-item&gt;</span><br><span class="line">                    &lt;el-timeline-item timestamp=&quot;2018/4/3&quot; placement=&quot;top&quot; :hollow=&quot;true&quot; type=&quot;warning&quot;&gt;</span><br><span class="line">                        &lt;el-card&gt;</span><br><span class="line">                            &lt;h4&gt;黄河南路超出服务区域&lt;/h4&gt;               </span><br><span class="line">                        &lt;/el-card&gt;</span><br><span class="line">                    &lt;/el-timeline-item&gt;</span><br><span class="line">                    &lt;el-timeline-item timestamp=&quot;2018/4/2&quot; placement=&quot;top&quot; :hollow=&quot;true&quot; type=&quot;danger&quot;&gt;</span><br><span class="line">                        &lt;el-card&gt;</span><br><span class="line">                            &lt;h4&gt;6号机组异常断电&lt;/h4&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;/el-card&gt;</span><br><span class="line">                    &lt;/el-timeline-item&gt;</span><br><span class="line">                &lt;/el-timeline&gt;</span><br><span class="line">            &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><h1 id="17-充电站监控页面开发"><a href="#17-充电站监控页面开发" class="headerlink" title="17.充电站监控页面开发"></a>17.充电站监控页面开发</h1><p>&#x3D;&#x3D;views-chargingstation-Monitor.vue&#x3D;&#x3D;</p><h2 id="1-顶部静态结构开发"><a href="#1-顶部静态结构开发" class="headerlink" title="1.顶部静态结构开发"></a>1.顶部静态结构开发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card&gt;</span><br><span class="line">        &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;formParams.input&quot; placeholder=&quot;请输入站点名称、id&quot;&gt;</span><br><span class="line">                    &lt;template #append&gt;</span><br><span class="line">                        &lt;el-select v-model=&quot;select&quot; style=&quot;width: 115px&quot;&gt;</span><br><span class="line">                            &lt;el-option label=&quot;按名称查询&quot; value=&quot;name&quot; /&gt;</span><br><span class="line">                            &lt;el-option label=&quot;按ID查询&quot; value=&quot;id&quot; /&gt;</span><br><span class="line">                        &lt;/el-select&gt;</span><br><span class="line">                    &lt;/template&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-select v-model=&quot;formParams.value&quot; placeholder=&quot;充电站状态&quot;&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;1&quot; label=&quot;全部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;2&quot; label=&quot;使用中&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;3&quot; label=&quot;空闲中&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;4&quot; label=&quot;维护中&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;5&quot; label=&quot;待维修&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                &lt;/el-select&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button&gt;重置&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;el-row&gt;</span><br><span class="line">                &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                    &lt;el-statistic title=&quot;累计充电量(度)&quot; :value=&quot;268900&quot; /&gt;</span><br><span class="line">                &lt;/el-col&gt;</span><br><span class="line">                &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                    &lt;el-statistic title=&quot;累计充电次数(次)&quot; :value=&quot;1389&quot;&gt;&lt;/el-statistic&gt;</span><br><span class="line">                &lt;/el-col&gt;</span><br><span class="line">                &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                    &lt;el-statistic title=&quot;服务区域(个)&quot; :value=&quot;88&quot; /&gt;</span><br><span class="line">                &lt;/el-col&gt;</span><br><span class="line">                &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                    &lt;el-statistic title=&quot;累计效益(元)&quot; :value=&quot;5622178&quot;&gt;</span><br><span class="line">                    &lt;/el-statistic&gt;</span><br><span class="line">                &lt;/el-col&gt;</span><br><span class="line">            &lt;/el-row&gt;</span><br><span class="line">        &lt;/el-card&gt;</span><br><span class="line">  &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; &gt;</span><br><span class="line">                &lt;el-icon style=&quot;margin-right: 5px;&quot;&gt;</span><br><span class="line">                    &lt;Plus /&gt;</span><br><span class="line">                &lt;/el-icon&gt;</span><br><span class="line">                新增充电站</span><br><span class="line">            &lt;/el-button&gt;</span><br><span class="line">        &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref,reactive &#125; from &#x27;vue&#x27;</span><br><span class="line">const formParams = reactive(&#123;</span><br><span class="line">    input: &quot;&quot;,</span><br><span class="line">    value: 1</span><br><span class="line">&#125;)</span><br><span class="line">const select = ref(&quot;name&quot;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="2-表格开发"><a href="#2-表格开发" class="headerlink" title="2.表格开发"></a>2.表格开发</h2><p>了解为基础表格结构之后，开发接口，获取表格数据</p><blockquote><p><strong>mock接口开发：略，参见源文件</strong></p></blockquote><blockquote><p><strong>api文件封装</strong></p></blockquote><p>&#x3D;&#x3D;api-chargingstation.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ListType</span>&#123;</span><br><span class="line">    <span class="attr">page</span>:<span class="built_in">number</span>,</span><br><span class="line">    <span class="attr">pageSize</span>:<span class="built_in">number</span>,</span><br><span class="line">    name?:<span class="built_in">string</span>,</span><br><span class="line">    id?:<span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">status</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    <span class="title class_">List</span> = <span class="string">&#x27;/stationList&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">listApi</span>(<span class="params">data:ListType</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">List</span>,data)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">export</span> &#123;listApi&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;views-chargingstation-Monitor.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, reactive,onMounted &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; listApi &#125; from &quot;@/api/chargingstation&quot;</span><br><span class="line">const formParams = reactive(&#123;</span><br><span class="line">    input: &quot;&quot;,</span><br><span class="line">    value: 1</span><br><span class="line">&#125;)</span><br><span class="line">const select = ref(&quot;name&quot;)</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">    const res = await listApi(&#123;page:1,pageSize:10,status:1&#125;);</span><br><span class="line">    console.log(res)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">    loadData()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>添加table静态结构和分页静态结构</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-table :data=&quot;tableData&quot; style=&quot;width: 100%&quot;  v-loading=&quot;loading&quot;&gt;</span><br><span class="line">            &lt;el-table-column type=&quot;index&quot; width=&quot;60&quot; label=&quot;序号&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;name&quot; label=&quot;站点名称&quot; width=&quot;200&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;id&quot; label=&quot;站点id&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;city&quot; label=&quot;所属城市&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;fast&quot; label=&quot;快充数&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;slow&quot; label=&quot;慢充数&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;status&quot; label=&quot;状态&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-tag v-if=&quot;scope.row.status == 2&quot; type=&quot;primary&quot;&gt;使用中&lt;/el-tag&gt;</span><br><span class="line">                    &lt;el-tag v-else-if=&quot;scope.row.status == 3&quot; type=&quot;success&quot;&gt;空闲中&lt;/el-tag&gt;</span><br><span class="line">                    &lt;el-tag v-else-if=&quot;scope.row.status == 4&quot; type=&quot;warning&quot;&gt;维护中&lt;/el-tag&gt;</span><br><span class="line">                    &lt;el-tag v-else-if=&quot;scope.row.status == 5&quot; type=&quot;danger&quot;&gt;待维修&lt;/el-tag&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;now&quot; label=&quot;正在充电&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;fault&quot; label=&quot;故障数&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;person&quot; label=&quot;站点负责人&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;tel&quot; label=&quot;负责人电话&quot; /&gt;</span><br><span class="line">            &lt;el-table-column label=&quot;操作&quot; width=&quot;200&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-button type=&quot;primary&quot; size=&quot;small&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">                    &lt;el-popconfirm title=&quot;确定要删除吗&quot; &gt;</span><br><span class="line">                        &lt;template #reference&gt;</span><br><span class="line">                            &lt;el-button type=&quot;danger&quot; size=&quot;small&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">                        &lt;/template&gt;</span><br><span class="line">                    &lt;/el-popconfirm&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">&lt;el-pagination class=&quot;fr mt mb&quot; v-model:current-page=&quot;pageInfo.page&quot; v-model:page-size=&quot;pageInfo.pageSize&quot;</span><br><span class="line">                :page-sizes=&quot;[10, 20, 30, 40]&quot; :background=&quot;true&quot; layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">                :total=&quot;totals&quot; @size-change=&quot;handleSizeChange&quot; @current-change=&quot;handleCurrentChange&quot; /&gt;</span><br></pre></td></tr></table></figure><p>对应的ts</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, reactive, onMounted &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; listApi &#125; from &quot;@/api/chargingstation&quot;</span><br><span class="line">const formParams = reactive(&#123;</span><br><span class="line">    input: &quot;&quot;,</span><br><span class="line">    value: 1</span><br><span class="line">&#125;)</span><br><span class="line">const select = ref(&quot;name&quot;)</span><br><span class="line">const tableData = ref([]);</span><br><span class="line">const loading = ref(false);</span><br><span class="line">const totals = ref(0)</span><br><span class="line">const pageInfo = reactive(&#123;</span><br><span class="line">    page: 1,</span><br><span class="line">    pageSize: 10</span><br><span class="line">&#125;)</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">    loading.value = true</span><br><span class="line">    const &#123;data:&#123;list,total&#125;&#125; = await listApi(&#123; ...pageInfo, [select.value]: formParams.input, status: formParams.value &#125;);</span><br><span class="line">    totals.value = total</span><br><span class="line">    tableData.value = list</span><br><span class="line">    loading.value = false</span><br><span class="line">&#125;</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">    loadData()</span><br><span class="line">&#125;)</span><br><span class="line">const handleSizeChange = (size: number) =&gt; &#123;</span><br><span class="line">    pageInfo.pageSize = size</span><br><span class="line">    loadData()</span><br><span class="line">&#125;</span><br><span class="line">const handleCurrentChange = (page: number) =&gt; &#123;</span><br><span class="line">    pageInfo.page = page;</span><br><span class="line">    loadData()</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-查询重置功能"><a href="#3-查询重置功能" class="headerlink" title="3.查询重置功能"></a>3.查询重置功能</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; @click=&quot;loadData&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">&lt;el-button @click=&quot;handleReset&quot;&gt;重置&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><p>重置：</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleReset</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    pageInfo.<span class="property">page</span> = <span class="number">1</span>;</span><br><span class="line">    pageInfo.<span class="property">pageSize</span> = <span class="number">10</span>;</span><br><span class="line">    formParams.<span class="property">input</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">    formParams.<span class="property">value</span> = <span class="number">1</span></span><br><span class="line">    select.<span class="property">value</span> = <span class="string">&quot;name&quot;</span></span><br><span class="line">    <span class="title function_">loadData</span>()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-新增-x2F-编辑充电站"><a href="#4-新增-x2F-编辑充电站" class="headerlink" title="4.新增&#x2F;编辑充电站"></a>4.新增&#x2F;编辑充电站</h2><p>&#x3D;&#x3D;views-chargingstation-components-StationForm.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-dialog title=&quot;编辑站点信息&quot; :model-value=&quot;true&quot;&gt;</span><br><span class="line">        &lt;el-form :model=&quot;ruleForm&quot; label-width=&quot;120&quot; :rules=&quot;rules&quot; ref=&quot;formRef&quot;&gt;</span><br><span class="line">            &lt;el-row&gt;</span><br><span class="line">                &lt;el-col :span=&quot;12&quot;&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;站点名称：&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.name&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;站点id：&quot; prop=&quot;id&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.id&quot; :disabled=&quot;disabled&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;所属城市：&quot; prop=&quot;city&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.city&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;站点负责人：&quot; prop=&quot;person&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.person&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;负责人电话：&quot; prop=&quot;tel&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.tel&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                &lt;/el-col&gt;</span><br><span class="line">                &lt;el-col :span=&quot;12&quot;&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;快充数：&quot; prop=&quot;fast&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.fast&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;慢充数：&quot; prop=&quot;slow&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.slow&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;充电站状态：&quot; prop=&quot;status&quot;&gt;</span><br><span class="line">                        &lt;el-select v-model=&quot;ruleForm.status&quot; placeholder=&quot;充电站状态&quot; :disabled=&quot;disabled&quot;&gt;</span><br><span class="line">                            &lt;el-option :value=&quot;1&quot; label=&quot;全部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option :value=&quot;2&quot; label=&quot;使用中&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option :value=&quot;3&quot; label=&quot;空闲中&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option :value=&quot;4&quot; label=&quot;维护中&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option :value=&quot;5&quot; label=&quot;待维修&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                        &lt;/el-select&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;正在充电：&quot; prop=&quot;now&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.now&quot; :disabled=&quot;disabled&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;故障数：&quot; prop=&quot;fault&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.fault&quot; :disabled=&quot;disabled&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                &lt;/el-col&gt;</span><br><span class="line">            &lt;/el-row&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line"></span><br><span class="line">        &lt;template #footer&gt;</span><br><span class="line">            &lt;div class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">                &lt;el-button&gt;取消&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; &gt;</span><br><span class="line">                    确认</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref,reactive&#125; from &#x27;vue&#x27;</span><br><span class="line">import type &#123; FormRules &#125; from &#x27;element-plus&#x27;</span><br><span class="line">import type &#123;RowType&#125; from &quot;../../../types/station&quot;</span><br><span class="line">const ruleForm = ref&lt;RowType&gt;(&#123;</span><br><span class="line">    name: &quot;&quot;,</span><br><span class="line">    id: &quot;&quot;,</span><br><span class="line">    city: &quot;&quot;,</span><br><span class="line">    fast: &quot;&quot;,</span><br><span class="line">    slow: &quot;&quot;,</span><br><span class="line">    status: &quot;&quot;,</span><br><span class="line">    now: &quot;&quot;,</span><br><span class="line">    fault: &quot;&quot;,</span><br><span class="line">    person: &quot;&quot;,</span><br><span class="line">    tel: &quot;&quot;</span><br><span class="line">&#125;)</span><br><span class="line">const disabled = ref(false)</span><br><span class="line">const rules = reactive&lt;FormRules&lt;RowType&gt;&gt;(&#123;</span><br><span class="line">    name: [</span><br><span class="line">        &#123; required: true, message: &#x27;站点名称不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    id: [</span><br><span class="line">        &#123; required: true, message: &#x27;站点id不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    city: [</span><br><span class="line">        &#123; required: true, message: &#x27;所属城市不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    person: [</span><br><span class="line">        &#123; required: true, message: &#x27;站点负责人不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    tel: [</span><br><span class="line">        &#123; required: true, message: &#x27;负责人电话不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    fast: [</span><br><span class="line">        &#123; required: true, message: &#x27;快充数不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    slow: [</span><br><span class="line">        &#123; required: true, message: &#x27;慢充数不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    status: [</span><br><span class="line">        &#123; required: true, message: &#x27;充电站状态不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    now: [</span><br><span class="line">        &#123; required: true, message: &#x27;正在充电数不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    fault: [</span><br><span class="line">        &#123; required: true, message: &#x27;故障数量不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="5-实现弹窗的开关功能"><a href="#5-实现弹窗的开关功能" class="headerlink" title="5.实现弹窗的开关功能"></a>5.实现弹窗的开关功能</h2><p>父组件中：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;StationForm :dialog-visible=&quot;visible&quot;&gt;&lt;/StationForm&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> visible = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>子组件中:</p><blockquote><p>这里没有选择使用v-model是因为这个数据是父组件传来的，不要双向绑定</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-dialog :model-value=&quot;dialogVisible&quot; :title=&quot;title&quot; @close=&quot;handleCancel&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">    <span class="attr">dialogVisible</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">        <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>打开：</p></blockquote><p>&#x3D;&#x3D;父组件&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; size=&quot;small&quot; @click=&quot;edit(scope.row)&quot;&gt;编辑&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; <span class="title class_">RowType</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types/station&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">edit</span> = (<span class="params">row: RowType</span>) =&gt; &#123;</span><br><span class="line">    visible.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>关闭：</p></blockquote><p>&#x3D;&#x3D;子组件&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;el-dialog title=&quot;编辑站点信息&quot; :model-value=&quot;dialogVisible&quot; @close=&quot;handleCancel&quot;&gt; </span><br><span class="line">&lt;el-button @click=&quot;handleCancel&quot;&gt;取消&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&quot;close&quot;</span>])</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleCancel</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">emit</span>(<span class="string">&quot;close&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;父组件：&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;StationForm  :dialog-visible=&quot;visible&quot;  @close=&quot;visible = false&quot;&gt;&lt;/StationForm&gt;</span><br></pre></td></tr></table></figure><p>现在有个小问题，如果你验证未通过直接关掉，下次打开会发现那个提示还在，可以通过下面设置解决</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-dialog title=&quot;编辑站点信息&quot; :model-value=&quot;dialogVisible&quot; @close=&quot;handleCancel&quot; destroy-on-close&gt;</span><br></pre></td></tr></table></figure><h2 id="6-实现编辑功能带入数据"><a href="#6-实现编辑功能带入数据" class="headerlink" title="6.实现编辑功能带入数据"></a>6.实现编辑功能带入数据</h2><p>涉及组件之间的传值，我们这里选择使用pinia,当然通过props也可以</p><p>&#x3D;&#x3D;store-station.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RowType</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@/types/station&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStationStore = <span class="title function_">defineStore</span>(<span class="string">&quot;station&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> rowData = ref&lt;<span class="title class_">RowType</span>&gt;(&#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">id</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">city</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">fast</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">slow</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">status</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">now</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">fault</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">person</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">tel</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setRowData</span> = (<span class="params">row: RowType</span>) =&gt; &#123;</span><br><span class="line">        rowData.<span class="property">value</span> = row</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;store&quot;</span>,rowData.<span class="property">value</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123; rowData, setRowData &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;父组件&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useStationStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/stores/station&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> stationStore = <span class="title function_">useStationStore</span>()</span><br><span class="line"><span class="keyword">const</span> &#123; setRowData &#125; = stationStore</span><br><span class="line"><span class="keyword">const</span> visible = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">edit</span> = (<span class="params">row: RowType</span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setRowData</span>(row)</span><br><span class="line">    visible.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;子组件&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useStationStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store/station&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> stationStore = <span class="title function_">useStationStore</span>();</span><br><span class="line"><span class="keyword">const</span> &#123; rowData &#125; = <span class="title function_">storeToRefs</span>(stationStore);</span><br><span class="line"><span class="title function_">watch</span>(<span class="function">() =&gt;</span> props.<span class="property">dialogVisible</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 等待 DOM 更新</span></span><br><span class="line">    ruleForm.<span class="property">value</span> = rowData.<span class="property">value</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>有某些数据不能改，所以设置下</p></blockquote><p>&#x3D;&#x3D;子组件&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">watch</span>(<span class="function">() =&gt;</span> props.<span class="property">dialogVisible</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 等待 DOM 更新</span></span><br><span class="line">    disabled.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">    ruleForm.<span class="property">value</span> = rowData.<span class="property">value</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="7-新增充电站"><a href="#7-新增充电站" class="headerlink" title="7.新增充电站"></a>7.新增充电站</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; @click=&quot;handleAdd&quot;&gt;</span><br><span class="line">           &lt;el-icon style=&quot;margin-right: 5px;&quot;&gt;</span><br><span class="line">               &lt;Plus /&gt;</span><br><span class="line">           &lt;/el-icon&gt;</span><br><span class="line">           新增充电站</span><br><span class="line">       &lt;/el-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleAdd</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setRowData</span>(&#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">id</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">city</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">fast</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">slow</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">status</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">now</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">fault</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">person</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">tel</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    visible.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>取消禁用状态，动态设置标题</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-dialog :title=&quot;title&quot; :model-value=&quot;dialogVisible&quot; @close=&quot;handleCancel&quot; destroy-on-close&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> title = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="title function_">watch</span>(<span class="function">() =&gt;</span> props.<span class="property">dialogVisible</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 等待 DOM 更新</span></span><br><span class="line">    <span class="keyword">if</span> (rowData.<span class="property">value</span>.<span class="property">name</span>) &#123; <span class="comment">//表示编辑</span></span><br><span class="line">        title.<span class="property">value</span> = <span class="string">&quot;编辑充电站信息&quot;</span></span><br><span class="line">        disabled.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// 表示新增</span></span><br><span class="line">        title.<span class="property">value</span> = <span class="string">&quot;新增充电站&quot;</span></span><br><span class="line">        disabled.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    ruleForm.<span class="property">value</span> = rowData.<span class="property">value</span></span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="8-弹框表单确认事件"><a href="#8-弹框表单确认事件" class="headerlink" title="8.弹框表单确认事件"></a>8.弹框表单确认事件</h2><p>提交表单的接口:</p><p>&#x3D;&#x3D;mock-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//新增/编辑充电站</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;https://www.demo.com/station/edit&quot;</span>, <span class="string">&#x27;post&#x27;</span>, <span class="function">(<span class="params">options: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">res</span>: <span class="built_in">any</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(options.<span class="property">body</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;新增/编辑充电站接口收到数据：&quot;</span>res)</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="string">&quot;操作成功&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;api-chargingstation.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RowType</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@/types/station&quot;</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ListType</span>&#123;</span><br><span class="line">    <span class="attr">page</span>:<span class="built_in">number</span>,</span><br><span class="line">    <span class="attr">pageSize</span>:<span class="built_in">number</span>,</span><br><span class="line">    name?:<span class="built_in">string</span>,</span><br><span class="line">    id?:<span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">status</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    <span class="title class_">List</span> = <span class="string">&#x27;/stationList&#x27;</span>,</span><br><span class="line">    <span class="title class_">Edit</span>=<span class="string">&quot;/station/edit&quot;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">listApi</span>(<span class="params">data:ListType</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">List</span>,data)</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">editApi</span>(<span class="params">data:RowType</span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">Edit</span>,data)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">export</span> &#123;listApi,editApi&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;子组件&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; @click=&quot;handleConfirm&quot;&gt;</span><br><span class="line">                    确认</span><br><span class="line">                &lt;/el-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleConfirm</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    formRef.<span class="property">value</span>?.<span class="title function_">validate</span>(<span class="keyword">async</span> (<span class="attr">valid</span>: <span class="built_in">boolean</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">            <span class="comment">//调用接口</span></span><br><span class="line">            <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">editApi</span>(ruleForm.<span class="property">value</span>);</span><br><span class="line">            <span class="keyword">if</span> (res.<span class="property">code</span> == <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">                    <span class="attr">message</span>: res.<span class="property">data</span>,</span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="title function_">handleCancel</span>();</span><br><span class="line">                <span class="title function_">emit</span>(<span class="string">&quot;reload&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;父组件&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;StationForm :dialog-visible=&quot;visible&quot; @close=&quot;visible = false&quot; @reload=&quot;loadData&quot;&gt;&lt;/StationForm&gt;</span><br></pre></td></tr></table></figure><h2 id="9-删除充电站"><a href="#9-删除充电站" class="headerlink" title="9.删除充电站"></a>9.删除充电站</h2><p>&#x3D;&#x3D;mock-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//删除充电站接口</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;https://www.demo.com/station/delete&quot;</span>, <span class="string">&quot;post&quot;</span>, <span class="function">(<span class="params">options: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">88</span>, <span class="title class_">JSON</span>.<span class="title function_">parse</span>(options.<span class="property">body</span>))</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="string">&quot;操作成功&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;api&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RowType</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@/types/station&quot;</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ListType</span>&#123;</span><br><span class="line">    <span class="attr">page</span>:<span class="built_in">number</span>,</span><br><span class="line">    <span class="attr">pageSize</span>:<span class="built_in">number</span>,</span><br><span class="line">    name?:<span class="built_in">string</span>,</span><br><span class="line">    id?:<span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">status</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    <span class="title class_">List</span> = <span class="string">&#x27;/stationList&#x27;</span>,</span><br><span class="line">    <span class="title class_">Edit</span>=<span class="string">&quot;/station/edit&quot;</span>,</span><br><span class="line">    <span class="title class_">Delete</span>=<span class="string">&quot;/station/delete&quot;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">listApi</span>(<span class="params">data:ListType</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">List</span>,data)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">editApi</span>(<span class="params">data:RowType</span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">Edit</span>,data)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">deleteApi</span>(<span class="params">id:<span class="built_in">string</span></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">Delete</span>,&#123;id&#125;)</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">export</span> &#123;listApi,editApi,deleteApi&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;父组件&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-popconfirm title=&quot;确定要删除吗&quot;  @confirm=&quot;handleDelete(scope.row.id)&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; listApi,deleteApi &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/chargingstation&quot;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleDelete</span> = <span class="keyword">async</span> (<span class="params">id: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">deleteApi</span>(id);</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> == <span class="number">200</span>) &#123; &#125;</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">        <span class="attr">message</span>: res.<span class="property">data</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title function_">loadData</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="18-营收统计页面开发"><a href="#18-营收统计页面开发" class="headerlink" title="18.营收统计页面开发"></a>18.营收统计页面开发</h1><h2 id="1-静态结构"><a href="#1-静态结构" class="headerlink" title="1.静态结构"></a>1.静态结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">            &lt;el-col :span=&quot;4&quot;&gt;</span><br><span class="line">                &lt;el-card&gt;</span><br><span class="line">                    &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;round&quot;&gt;</span><br><span class="line">                            &lt;el-icon&gt;</span><br><span class="line">                                &lt;Document /&gt;</span><br><span class="line">                            &lt;/el-icon&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;h4&gt;今日总收入 (元)&lt;/h4&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;total mt&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;239,824&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;percent&quot;&gt;-21%&lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/el-card&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;4&quot;&gt;</span><br><span class="line">                &lt;el-card&gt;</span><br><span class="line">                    &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;round&quot;&gt;</span><br><span class="line">                            &lt;el-icon&gt;</span><br><span class="line">                                &lt;Document /&gt;</span><br><span class="line">                            &lt;/el-icon&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;h4&gt;本月总收入 (万元)&lt;/h4&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;total mt&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;2,924&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;percent&quot;&gt;-21%&lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/el-card&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;4&quot;&gt;</span><br><span class="line">                &lt;el-card&gt;</span><br><span class="line">                    &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;round&quot;&gt;</span><br><span class="line">                            &lt;el-icon&gt;</span><br><span class="line">                                &lt;Document /&gt;</span><br><span class="line">                            &lt;/el-icon&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;h4&gt;会员卡储值金额 (元)&lt;/h4&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;total mt&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;239,824&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;percent&quot;&gt;-21%&lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/el-card&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;4&quot;&gt;</span><br><span class="line">                &lt;el-card&gt;</span><br><span class="line">                    &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;round&quot;&gt;</span><br><span class="line">                            &lt;el-icon&gt;</span><br><span class="line">                                &lt;Document /&gt;</span><br><span class="line">                            &lt;/el-icon&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;h4&gt;服务费总金额 (元)&lt;/h4&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;total mt&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;239,824&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;percent&quot;&gt;-21%&lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/el-card&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;4&quot;&gt;</span><br><span class="line">                &lt;el-card&gt;</span><br><span class="line">                    &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;round&quot;&gt;</span><br><span class="line">                            &lt;el-icon&gt;</span><br><span class="line">                                &lt;Document /&gt;</span><br><span class="line">                            &lt;/el-icon&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;h4&gt;停车费总金额 (元)&lt;/h4&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;total mt&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;239,824&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;percent&quot;&gt;-21%&lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/el-card&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;4&quot;&gt;</span><br><span class="line">                &lt;el-card&gt;</span><br><span class="line">                    &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;round&quot;&gt;</span><br><span class="line">                            &lt;el-icon&gt;</span><br><span class="line">                                &lt;Document /&gt;</span><br><span class="line">                            &lt;/el-icon&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;h4&gt;电费总金额 (元)&lt;/h4&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;total mt&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;239,824&lt;/h1&gt;</span><br><span class="line">                        &lt;div class=&quot;percent&quot;&gt;-21%&lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/el-card&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.title &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .round &#123;</span><br><span class="line">        width: 30px;</span><br><span class="line">        height: 30px;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        background-color: rgb(235, 236, 245);</span><br><span class="line">        text-align: center;</span><br><span class="line">        line-height: 35px;</span><br><span class="line">        margin-right: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    h4 &#123;</span><br><span class="line">        color: #666;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.total &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    h1 &#123;</span><br><span class="line">        margin-right: 20px;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .percent &#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        padding: 3px 5px;</span><br><span class="line">        height: 20px;</span><br><span class="line">        color: green;</span><br><span class="line">        font-size: 12px;</span><br><span class="line">        background-color: rgb(235, 247, 239);</span><br><span class="line">        border-radius: 2px;</span><br><span class="line">        line-height: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>封装一个千分位分隔的功能</p><p>&#x3D;&#x3D;utils-toThousands.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">formatNumberToThousands</span>(<span class="params">num: <span class="built_in">number</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="comment">// 确保输入是数字</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isNaN</span>(num)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;输入必须是一个有效的数字&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将数字转换为字符串并去掉小数点后的多余零</span></span><br><span class="line">    <span class="keyword">const</span> numString = num.<span class="title function_">toString</span>().<span class="title function_">replace</span>(<span class="regexp">/\.0$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拆分成整数部分和小数部分</span></span><br><span class="line">    <span class="keyword">const</span> [integerPart, decimalPart] = numString.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>); <span class="comment">// 2345  7</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用数组存储分隔后的整数部分</span></span><br><span class="line">    <span class="keyword">let</span> formattedInteger = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 反向遍历整数部分</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = integerPart.<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123; <span class="comment">//2345   i=3</span></span><br><span class="line">        <span class="comment">// 将字符添加到格式化结果中   2345.7</span></span><br><span class="line">        formattedInteger = integerPart[i] + formattedInteger;<span class="comment">//5+&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 每隔3位添加逗号</span></span><br><span class="line">        <span class="keyword">if</span> ((integerPart.<span class="property">length</span> - i) % <span class="number">3</span> === <span class="number">0</span> &amp;&amp; i !== <span class="number">0</span>) &#123;</span><br><span class="line">            formattedInteger = <span class="string">&quot;,&quot;</span> + formattedInteger;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果有小数部分，则返回完整格式</span></span><br><span class="line">    <span class="keyword">return</span> decimalPart ? <span class="string">`<span class="subst">$&#123;formattedInteger&#125;</span>.<span class="subst">$&#123;decimalPart&#125;</span>`</span> : formattedInteger;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> formatNumberToThousands</span><br></pre></td></tr></table></figure><h2 id="2-图表开发"><a href="#2-图表开发" class="headerlink" title="2.图表开发"></a>2.图表开发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;div ref=&quot;chartRef&quot; style=&quot;width: 100%; height: 240px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><p>图表接口</p><p>&#x3D;&#x3D;mock-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//营收统计图表</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;https://www.demo.com/revenueChart&quot;</span>, <span class="string">&quot;get&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">list</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>:<span class="string">&quot;销售&quot;</span>,</span><br><span class="line">          <span class="attr">data</span>:[<span class="number">60</span>, <span class="number">40</span>, <span class="number">120</span>, <span class="number">140</span>, <span class="number">160</span>, <span class="number">80</span>, <span class="number">140</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>:<span class="string">&quot;访问量&quot;</span>,</span><br><span class="line">          <span class="attr">data</span>:[<span class="number">600</span>, <span class="number">400</span>, <span class="number">600</span>, <span class="number">700</span>, <span class="number">800</span>, <span class="number">400</span>, <span class="number">700</span>]</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>api接口</p><p>&#x3D;&#x3D;api-chargingstation.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post,get &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RowType</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@/types/station&quot;</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ListType</span>&#123;</span><br><span class="line">    <span class="attr">page</span>:<span class="built_in">number</span>,</span><br><span class="line">    <span class="attr">pageSize</span>:<span class="built_in">number</span>,</span><br><span class="line">    name?:<span class="built_in">string</span>,</span><br><span class="line">    id?:<span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">status</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    <span class="title class_">List</span> = <span class="string">&#x27;/stationList&#x27;</span>,</span><br><span class="line">    <span class="title class_">Edit</span>=<span class="string">&quot;/station/edit&quot;</span>,</span><br><span class="line">    <span class="title class_">Delete</span>=<span class="string">&quot;/station/delete&quot;</span>,</span><br><span class="line">    <span class="title class_">RevenueChart</span>=<span class="string">&quot;/revenueChart&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">listApi</span>(<span class="params">data:ListType</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">List</span>,data)</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">editApi</span>(<span class="params">data:RowType</span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">Edit</span>,data)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">deleteApi</span>(<span class="params">id:<span class="built_in">string</span></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">Delete</span>,&#123;id&#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">chartApi</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="title class_">Api</span>.<span class="property">RevenueChart</span>)</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">export</span> &#123;listApi,editApi,deleteApi,chartApi&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;revenue.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; chartApi &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/chargingstation&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; reactive,ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useChart &#125; <span class="keyword">from</span> <span class="string">&quot;@/hooks/useChart.ts&quot;</span></span><br><span class="line"><span class="keyword">const</span> chartRef=<span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setChartData</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> chartOptions = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">        <span class="attr">tooltip</span>: &#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">legend</span>: &#123;</span><br><span class="line">            <span class="attr">data</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">xAxis</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="string">&#x27;一月&#x27;</span>, <span class="string">&#x27;二月&#x27;</span>, <span class="string">&#x27;三月&#x27;</span>, <span class="string">&#x27;四月&#x27;</span>, <span class="string">&#x27;五月&#x27;</span>, <span class="string">&#x27;六月&#x27;</span>, <span class="string">&#x27;七月&#x27;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">yAxis</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;销售&#x27;</span>,</span><br><span class="line">                <span class="attr">position</span>: <span class="string">&#x27;left&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;访问量&#x27;</span>,</span><br><span class="line">                <span class="attr">position</span>: <span class="string">&#x27;right&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">series</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: [],</span><br><span class="line">                <span class="attr">yAxisIndex</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                    <span class="attr">color</span>: <span class="string">&#x27;#409eff&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: [],</span><br><span class="line">                <span class="attr">yAxisIndex</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                    <span class="attr">color</span>: <span class="string">&#x27;#409eff&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">chartApi</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; res.<span class="property">data</span>.<span class="property">list</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        chartOptions.<span class="property">series</span>[i].<span class="property">name</span> = res.<span class="property">data</span>.<span class="property">list</span>[i].<span class="property">name</span></span><br><span class="line">        chartOptions.<span class="property">series</span>[i].<span class="property">data</span> = res.<span class="property">data</span>.<span class="property">list</span>[i].<span class="property">data</span></span><br><span class="line">    &#125;</span><br><span class="line">    chartOptions.<span class="property">legend</span>.<span class="property">data</span> = res.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">item:<span class="built_in">any</span></span>) =&gt;</span> item.<span class="property">name</span>)</span><br><span class="line">    <span class="keyword">return</span> chartOptions</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">useChart</span>(chartRef, setChartData)</span><br></pre></td></tr></table></figure><h2 id="3-表格开发"><a href="#3-表格开发" class="headerlink" title="3.表格开发"></a>3.表格开发</h2><p>表格接口</p><p>&#x3D;&#x3D;Mock-index.ts&#x3D;&#x3D;参见源文件</p><p>api</p><p>&#x3D;&#x3D;api-chargingstation.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">  <span class="title class_">Revenue</span>=<span class="string">&quot;/revenueList&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">revenueApi</span>(<span class="params">data:<span class="built_in">any</span></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">Revenue</span>,data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">           &lt;el-input v-model=&quot;input&quot; style=&quot;max-width: 400px&quot; placeholder=&quot;输入站点名称筛选&quot;&gt;</span><br><span class="line">               &lt;template #append&gt;</span><br><span class="line">                   &lt;el-button :icon=&quot;Search&quot; @click=&quot;loadData&quot;/&gt;</span><br><span class="line">               &lt;/template&gt;</span><br><span class="line">           &lt;/el-input&gt;</span><br><span class="line">           &lt;el-table :data=&quot;tableData&quot; class=&quot;mt&quot; v-loading=&quot;loading&quot;&gt;</span><br><span class="line">               &lt;el-table-column type=&quot;index&quot; width=&quot;60&quot; label=&quot;序号&quot; /&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;name&quot; label=&quot;充电站名称&quot;  /&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;id&quot; label=&quot;充电站id&quot;  /&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;city&quot; label=&quot;所属城市&quot;  /&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;count&quot; label=&quot;充电桩总量(个)&quot;  /&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;day&quot; label=&quot;单日总收入(元)&quot; sortable&gt;</span><br><span class="line">                   &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                       &lt;span&gt;&#123;&#123; scope.row.day&#125;&#125;&lt;/span&gt;</span><br><span class="line">                       &lt;el-tag class=&quot;ml&quot; :type=&quot;scope.row.percent&gt;0?&#x27;success&#x27;:&#x27;danger&#x27;&quot; &gt;&#123;&#123; scope.row.percent&gt;0?&quot;+&quot;+scope.row.percent+&quot;%&quot;:scope.row.percent+&quot;%&quot; &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">                   &lt;/template&gt;</span><br><span class="line">               &lt;/el-table-column&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;month&quot; label=&quot;月度总收入(元)&quot; &gt;</span><br><span class="line">                   &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                       &lt;span&gt;&#123;&#123;scope.row.month &#125;&#125;&lt;/span&gt;</span><br><span class="line">                       &lt;el-tag class=&quot;ml&quot; :type=&quot;scope.row.mpercent&gt;0?&#x27;success&#x27;:&#x27;danger&#x27;&quot; &gt;&#123;&#123; scope.row.mpercent&gt;0?&quot;+&quot;+scope.row.mpercent+&quot;%&quot;:scope.row.percent+&quot;%&quot; &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">                   &lt;/template&gt;</span><br><span class="line">               &lt;/el-table-column&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;electricity&quot; label=&quot;电费营收(元)&quot;  /&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;parkingFee&quot; label=&quot;停车费营收(元)&quot;  /&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;serviceFee&quot; label=&quot;服务费营收(元)&quot;  /&gt;</span><br><span class="line">               &lt;el-table-column prop=&quot;member&quot; label=&quot;会员储值金(元)&quot;  /&gt;</span><br><span class="line">               </span><br><span class="line">           &lt;/el-table&gt;</span><br><span class="line">       &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> formatNumberToThousands <span class="keyword">from</span> <span class="string">&quot;@/utils/toThousands&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; chartApi &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/chargingstation&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; reactive,ref,onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useChart &#125; <span class="keyword">from</span> <span class="string">&quot;@/hooks/useChart.ts&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123;revenueApi&#125; <span class="keyword">from</span> <span class="string">&quot;@/api/chargingstation&quot;</span></span><br><span class="line"><span class="keyword">const</span> input = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> tableData=<span class="title function_">ref</span>([]);</span><br><span class="line"><span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">loadData</span>=<span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>:&#123;list,total&#125; &#125; = <span class="keyword">await</span> <span class="title function_">revenueApi</span>(&#123;  <span class="attr">name</span>:input.<span class="property">value</span>&#125;);</span><br><span class="line"> <span class="comment">//   setTotals(total);</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 计算day字段</span></span><br><span class="line">      tableData.<span class="property">value</span> = list.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> (&#123;</span><br><span class="line">        ...item,</span><br><span class="line">        <span class="attr">day</span>: item.<span class="property">electricity</span> + item.<span class="property">parkingFee</span> + item.<span class="property">serviceFee</span> + item.<span class="property">member</span></span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//tableData.value=data</span></span><br><span class="line">    loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">loadData</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="4-分页功能"><a href="#4-分页功能" class="headerlink" title="4.分页功能"></a>4.分页功能</h2><p>我们考虑到不同页面分页功能好多东西都是一致的，所以我们去封装一个自定义组合式函数</p><p>&#x3D;&#x3D;hooks-usePagination.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">usePagaination</span>(<span class="params">loadData:()=&gt;<span class="built_in">Promise</span>&lt;<span class="built_in">any</span>&gt;,initialPageSize=<span class="number">10</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> totals = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">const</span> pageInfo = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">        <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">pageSize</span>: initialPageSize</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleSizeChange</span> = (<span class="params">size: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">        pageInfo.<span class="property">pageSize</span> = size</span><br><span class="line">        <span class="title function_">loadData</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleCurrentChange</span> = (<span class="params">page: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">        pageInfo.<span class="property">page</span> = page;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">666</span>,pageInfo.<span class="property">page</span>)</span><br><span class="line">        <span class="title function_">loadData</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">resetPagination</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        pageInfo.<span class="property">page</span> = <span class="number">1</span>;</span><br><span class="line">        pageInfo.<span class="property">pageSize</span> = initialPageSize;</span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setTotals</span>=(<span class="params">all:<span class="built_in">number</span></span>)=&gt;&#123;</span><br><span class="line">        totals.<span class="property">value</span>=all</span><br><span class="line">    &#125;  </span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        totals,setTotals,pageInfo,handleSizeChange,handleCurrentChange,resetPagination</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;revenue.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-pagination class=&quot;fr mt mb&quot; v-model:current-page=&quot;pageInfo.page&quot; v-model:page-size=&quot;pageInfo.pageSize&quot;</span><br><span class="line">               :page-sizes=&quot;[10, 20, 30, 40]&quot; :background=&quot;true&quot; layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">               :total=&quot;totals&quot; @size-change=&quot;handleSizeChange&quot; @current-change=&quot;handleCurrentChange&quot; /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;usePagaination&#125; <span class="keyword">from</span> <span class="string">&quot;@/hooks/usePagaination&quot;</span></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">     totals,</span><br><span class="line">     setTotals,</span><br><span class="line">     pageInfo,</span><br><span class="line">     handleSizeChange,</span><br><span class="line">     handleCurrentChange,</span><br><span class="line">     resetPagination</span><br><span class="line">    &#125;=<span class="title function_">usePagaination</span>(loadData)</span><br></pre></td></tr></table></figure><p><img src="D:/Software/Typora/images/image-20241025134256268.png" alt="image-20241025134256268"></p><h1 id="19-充电桩管理页面开发"><a href="#19-充电桩管理页面开发" class="headerlink" title="19.充电桩管理页面开发"></a>19.充电桩管理页面开发</h1><h2 id="1-静态结构开发"><a href="#1-静态结构开发" class="headerlink" title="1.静态结构开发"></a>1.静态结构开发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;el-card&gt;</span><br><span class="line">     &lt;el-select  style=&quot;width: 300px;&quot; placeholder=&quot;选择站点名称&quot;&gt;&lt;/el-select&gt;</span><br><span class="line">   &lt;/el-card&gt;</span><br><span class="line">   &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">    &lt;el-radio-group  size=&quot;large&quot;&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;全部&quot; :value=&quot;0&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;空闲中&quot; :value=&quot;1&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;充电中&quot; :value=&quot;2&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;连接中&quot; :value=&quot;3&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;排队中&quot; :value=&quot;4&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;已预约&quot; :value=&quot;5&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;故障/离线&quot; :value=&quot;6&quot; /&gt;</span><br><span class="line">        &lt;/el-radio-group&gt;</span><br><span class="line">   &lt;/el-card&gt;</span><br><span class="line">   &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;pic&quot;&gt;</span><br><span class="line">                        &lt;p&gt;空闲中&lt;/p&gt;</span><br><span class="line">                        &lt;img :src=&quot;free&quot; alt=&quot;&quot; width=&quot;100px&quot;&gt;</span><br><span class="line">                        &lt;p&gt; 80%&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                        &lt;h3&gt;</span><br><span class="line">                            CD1001</span><br><span class="line">                        &lt;/h3&gt;</span><br><span class="line">                        &lt;hr class=&quot;mb&quot;&gt;</span><br><span class="line">                        &lt;p&gt;电压：314v&lt;/p&gt;</span><br><span class="line">                        &lt;p&gt;电流：212.2A&lt;/p&gt;</span><br><span class="line">                        &lt;p&gt;功率：21KW&lt;/p&gt;</span><br><span class="line">                        &lt;p&gt;温度：32°c&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;btn&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;divder&quot;&gt;&lt;/div&gt;</span><br><span class="line">                    &lt;div&gt;</span><br><span class="line">                        &lt;p class=&quot;fl ml&quot; style=&quot;font-size: 12px;color: #999;&quot;&gt;暂无预警&lt;/p&gt;</span><br><span class="line">                        &lt;div style=&quot;text-align: right;&quot; class=&quot;fr&quot;&gt;</span><br><span class="line">                            &lt;el-button size=&quot;small&quot;&gt;维保记录&lt;/el-button&gt;</span><br><span class="line">                            &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; class=&quot;mr&quot;&gt;使用记录&lt;/el-button&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">   &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line"></span><br><span class="line">import free from &quot;@/assets/free.png&quot;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.item &#123;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    background-color: rgb(247, 251, 254);</span><br><span class="line">    height: 200px;</span><br><span class="line">    border-radius: 10px 10px 0 0;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line"></span><br><span class="line">    .pic &#123;</span><br><span class="line">        p &#123;</span><br><span class="line">            width: 76px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">            color: rgb(61, 187, 146);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .info &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        margin-left: 30px;</span><br><span class="line">        line-height: 26px;</span><br><span class="line">        margin-top: -10px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn &#123;</span><br><span class="line">    background-color: #f7fbfe;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 50px;</span><br><span class="line">    line-height: 50px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.divder &#123;</span><br><span class="line">    background-color: #f4f4f4;</span><br><span class="line">    height: 2px;</span><br><span class="line">    width: 95%;</span><br><span class="line">    margin: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.record &#123;</span><br><span class="line"></span><br><span class="line">    height: 60px;</span><br><span class="line">    line-height: 60px;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="2-对接接口"><a href="#2-对接接口" class="headerlink" title="2.对接接口"></a>2.对接接口</h2><p>&#x3D;&#x3D;mock ，见源文件&#x3D;&#x3D;</p><p>&#x3D;&#x3D;api-chargingstation.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">CurrentList</span>=<span class="string">&quot;currentList&quot;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">currentListApi</span>(<span class="params">name:<span class="built_in">string</span></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">currentList</span>,&#123;name&#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="3-组件中实现搜索框模糊查询"><a href="#3-组件中实现搜索框模糊查询" class="headerlink" title="3.组件中实现搜索框模糊查询"></a>3.组件中实现搜索框模糊查询</h2><blockquote><p>为el-select添加filterable属性即可启用搜索功能</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-select v-model=&quot;value&quot; style=&quot;width: 300px;&quot; placeholder=&quot;选择站点名称&quot; filterable </span><br><span class="line">            :remote-method=&quot;remoteMethod&quot;&gt;</span><br><span class="line">            &lt;el-option v-for=&quot;item in optionsCopy&quot; :key=&quot;item.id&quot; :value=&quot;item.name&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/el-option&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> ing <span class="keyword">from</span> <span class="string">&quot;@/assets/ing.png&quot;</span></span><br><span class="line"><span class="keyword">import</span> free <span class="keyword">from</span> <span class="string">&quot;@/assets/free.png&quot;</span></span><br><span class="line"><span class="keyword">import</span> outline <span class="keyword">from</span> <span class="string">&quot;@/assets/outline.png&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; currentListApi &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/chargingstation&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;ref,onMounted&#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">const</span> value = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> options = ref&lt;<span class="built_in">any</span>&gt;([])<span class="comment">//存原始下拉框</span></span><br><span class="line"><span class="keyword">let</span> optionsCopy = ref&lt;<span class="built_in">any</span>&gt;([]);<span class="comment">//复制下拉框</span></span><br><span class="line"><span class="keyword">const</span> dataList = <span class="title function_">ref</span>([]);<span class="comment">//原始数据</span></span><br><span class="line"><span class="keyword">let</span> dataListCopy = <span class="title function_">ref</span>([])<span class="comment">//复制数据</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">loadData</span> = <span class="keyword">async</span> (<span class="params">query = <span class="string">&quot;&quot;</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">currentListApi</span>(query);</span><br><span class="line">    options.<span class="property">value</span> = data</span><br><span class="line">    dataList.<span class="property">value</span> = data[<span class="number">0</span>].<span class="property">list</span> <span class="comment">//默认加载第一个的数据</span></span><br><span class="line">    dataListCopy.<span class="property">value</span> = data[<span class="number">0</span>].<span class="property">list</span></span><br><span class="line">    optionsCopy.<span class="property">value</span> = data;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">loadData</span>()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">remoteMethod</span> = (<span class="params">query: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    optionsCopy.<span class="property">value</span> = options.<span class="property">value</span> <span class="comment">//初始化</span></span><br><span class="line">    optionsCopy.<span class="property">value</span> = optionsCopy.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">name</span>.<span class="title function_">includes</span>(query))</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="4-单选按钮组查询"><a href="#4-单选按钮组查询" class="headerlink" title="4.单选按钮组查询"></a>4.单选按钮组查询</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-radio-group v-model=&quot;radio&quot; size=&quot;large&quot; @change=&quot;handleChange&quot;&gt;</span><br><span class="line">            &lt;el-radio-button :label=&quot;`全部($&#123;allCount&#125;)`&quot; :value=&quot;0&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button :label=&quot;`空闲中($&#123;checkCount(1)&#125;)`&quot; :value=&quot;1&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button :label=&quot;`充电中($&#123;checkCount(2)&#125;)`&quot; :value=&quot;2&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button :label=&quot;`连接中($&#123;checkCount(3)&#125;)`&quot; :value=&quot;3&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button :label=&quot;`排队中($&#123;checkCount(4)&#125;)`&quot; :value=&quot;4&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button :label=&quot;`已预约($&#123;checkCount(5)&#125;)`&quot; :value=&quot;5&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button :label=&quot;`故障/离线($&#123;checkCount(6)&#125;)`&quot; :value=&quot;6&quot; /&gt;</span><br><span class="line">        &lt;/el-radio-group&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> radio = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> allCount = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> <span class="title function_">checkCount</span>(<span class="number">1</span>) + <span class="title function_">checkCount</span>(<span class="number">2</span>) + <span class="title function_">checkCount</span>(<span class="number">3</span>) + <span class="title function_">checkCount</span>(<span class="number">4</span>) + <span class="title function_">checkCount</span>(<span class="number">5</span>) + <span class="title function_">checkCount</span>(<span class="number">6</span>))</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkCount</span>(<span class="params">num:<span class="built_in">number</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> dataList.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">item:<span class="built_in">any</span></span>) =&gt;</span> item.<span class="property">status</span> == num).<span class="property">length</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleChange</span> = (<span class="params">val: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">    dataListCopy.<span class="property">value</span> = dataList.<span class="property">value</span></span><br><span class="line">    <span class="keyword">if</span> (val != <span class="number">0</span>) &#123;</span><br><span class="line">        dataListCopy.<span class="property">value</span> = dataListCopy.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">item:<span class="built_in">any</span></span>) =&gt;</span> item.<span class="property">status</span> == val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-充电桩列表"><a href="#5-充电桩列表" class="headerlink" title="5.充电桩列表"></a>5.充电桩列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">       &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">           &lt;el-col :span=&quot;6&quot; v-for=&quot;item in dataListCopy&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">               &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">                   &lt;div class=&quot;pic&quot;&gt;</span><br><span class="line">                       &lt;p v-if=&quot;item.status == 1&quot;&gt;空闲中&lt;/p&gt;</span><br><span class="line">                       &lt;p v-else-if=&quot;item.status == 2&quot;&gt;充电中&lt;/p&gt;</span><br><span class="line">                       &lt;p v-else-if=&quot;item.status == 3&quot;&gt;连接中&lt;/p&gt;</span><br><span class="line">                       &lt;p v-else-if=&quot;item.status == 4&quot;&gt;排队中&lt;/p&gt;</span><br><span class="line">                       &lt;p v-else-if=&quot;item.status == 5&quot;&gt;已预约&lt;/p&gt;</span><br><span class="line">                       &lt;p v-else-if=&quot;item.status == 6&quot;&gt;故障/离线&lt;/p&gt;</span><br><span class="line">                       &lt;img :src=&quot;item.status == 1 ? free : (item.status == 6 ? outline : ing)&quot; alt=&quot;&quot; width=&quot;100px&quot;&gt;</span><br><span class="line">                       &lt;p v-if=&quot;item.status == 2&quot;&gt;&#123;&#123; item.percent &#125;&#125;&lt;/p&gt;</span><br><span class="line">                       &lt;p v-else&gt;0%&lt;/p&gt;</span><br><span class="line">                   &lt;/div&gt;</span><br><span class="line">                   &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                       &lt;h3&gt;</span><br><span class="line">                           &#123;&#123; item.id &#125;&#125;</span><br><span class="line">                       &lt;/h3&gt;</span><br><span class="line">                       &lt;hr class=&quot;mb&quot;&gt;</span><br><span class="line">                       &lt;p&gt;电压：&#123;&#123; item.voltage &#125;&#125;&lt;/p&gt;</span><br><span class="line">                       &lt;p&gt;电流：&#123;&#123; item.current &#125;&#125;&lt;/p&gt;</span><br><span class="line">                       &lt;p&gt;功率：&#123;&#123; item.power &#125;&#125;&lt;/p&gt;</span><br><span class="line">                       &lt;p&gt;温度：&#123;&#123; item.tem &#125;&#125;&lt;/p&gt;</span><br><span class="line">                   &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">               &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">               &lt;div class=&quot;btn&quot;&gt;</span><br><span class="line">                   &lt;div class=&quot;divder&quot;&gt;&lt;/div&gt;</span><br><span class="line">                   &lt;div&gt;</span><br><span class="line">                       &lt;p class=&quot;fl ml&quot; style=&quot;font-size: 12px;color: #999;&quot;&gt;暂无预警&lt;/p&gt;</span><br><span class="line">                       &lt;div style=&quot;text-align: right;&quot; class=&quot;fr&quot;&gt;</span><br><span class="line">                           &lt;el-button size=&quot;small&quot;&gt;维保记录&lt;/el-button&gt;</span><br><span class="line">                           &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; class=&quot;mr&quot;&gt;使用记录&lt;/el-button&gt;</span><br><span class="line">                       &lt;/div&gt;</span><br><span class="line">                   &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">               &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">           &lt;/el-col&gt;</span><br><span class="line">       &lt;/el-row&gt;</span><br><span class="line">   &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">watch</span>(value, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = optionsCopy.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">name</span> == value.<span class="property">value</span>);</span><br><span class="line">    dataListCopy.<span class="property">value</span> = res[<span class="number">0</span>].<span class="property">list</span></span><br><span class="line">    dataList.<span class="property">value</span> = res[<span class="number">0</span>].<span class="property">list</span></span><br><span class="line">    radio.<span class="property">value</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>添加浮框</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div style=&quot;text-align: right;&quot; class=&quot;fr&quot;&gt;</span><br><span class="line">        &lt;el-button size=&quot;small&quot;&gt;维保记录&lt;/el-button&gt;</span><br><span class="line">        &lt;el-popover placement=&quot;top-start&quot; title=&quot;使用记录&quot; :width=&quot;200&quot; trigger=&quot;hover&quot;</span><br><span class="line">            content=&quot;本日使用记录&quot;&gt;</span><br><span class="line">            &lt;template #reference&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; class=&quot;mr&quot;&gt;使用记录&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-timeline style=&quot;max-width: 600px&quot;&gt;</span><br><span class="line">                &lt;el-timeline-item timestamp=&quot;12:08:17&quot;&gt;</span><br><span class="line">                    充电80度，消费80元</span><br><span class="line">                &lt;/el-timeline-item&gt;</span><br><span class="line">                &lt;el-timeline-item timestamp=&quot;13:12:09&quot;&gt;</span><br><span class="line">                   re</span><br><span class="line">                &lt;/el-timeline-item&gt;</span><br><span class="line">                &lt;el-timeline-item timestamp=&quot;13:15:22&quot;&gt;</span><br><span class="line">                    充电60度，消费60元</span><br><span class="line">                &lt;/el-timeline-item&gt;</span><br><span class="line">                &lt;el-timeline-item timestamp=&quot;16:22:33&quot;&gt;</span><br><span class="line">                    充电70度，消费70元</span><br><span class="line">                &lt;/el-timeline-item&gt;</span><br><span class="line">                &lt;el-timeline-item timestamp=&quot;17:27:17&quot;&gt;</span><br><span class="line">                    充电100度，消费100元</span><br><span class="line">                &lt;/el-timeline-item&gt;</span><br><span class="line">                &lt;el-timeline-item timestamp=&quot;18:08:33&quot;&gt;</span><br><span class="line">                    充电80度，消费80元</span><br><span class="line">                &lt;/el-timeline-item&gt;</span><br><span class="line">            &lt;/el-timeline&gt;</span><br><span class="line">        &lt;/el-popover&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><h1 id="20-电子地图页面开发"><a href="#20-电子地图页面开发" class="headerlink" title="20.电子地图页面开发"></a>20.电子地图页面开发</h1><h2 id="1-高德地图api"><a href="#1-高德地图api" class="headerlink" title="1.高德地图api"></a>1.高德地图api</h2><blockquote><p>高德地图官网中，选择js api</p></blockquote><p><img src="D:/Software/Typora/images/image-20241028144021633.png" alt="image-20241028144021633"></p><blockquote><p>选择进阶教程，结合vue使用</p></blockquote><p><img src="D:/Software/Typora/images/image-20241028144138642.png" alt="image-20241028144138642"></p><p>&#x3D;&#x3D;components-Map-MapContainer.vue&#x3D;&#x3D;</p><p>创建基础容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>添加样式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">#container &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 80vh;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>安装地图api</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm i @amap/amap<span class="literal">-jsapi-loader</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>根据文档介绍创建基础模板</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import AMapLoader from &quot;@amap/amap-jsapi-loader&quot;;</span><br><span class="line">import &#123; onMounted, onUnmounted, ref &#125; from &quot;vue&quot;;</span><br><span class="line">let map = null;</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  AMapLoader.load(&#123;</span><br><span class="line">    key: &quot;7066344199d5d8c8bd499c1d4bfc1984&quot;, // 申请好的Web端开发者Key，首次调用 load 时必填</span><br><span class="line">    version: &quot;1.4.15&quot;, // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15</span><br><span class="line">    plugins: [], //需要使用的的插件列表，如比例尺&#x27;AMap.Scale&#x27;，支持添加多个如：[&#x27;...&#x27;,&#x27;...&#x27;]</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((AMap) =&gt; &#123;</span><br><span class="line">      map = new AMap.Map(&quot;container&quot;, &#123;</span><br><span class="line">        // 设置地图容器id</span><br><span class="line">        viewMode: &quot;3D&quot;, // 是否为3D地图模式</span><br><span class="line">        zoom:5, // 初始化地图级别</span><br><span class="line">        center: [116.397428, 39.90923], // 初始化地图中心点位置</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((e) =&gt; &#123;</span><br><span class="line">      console.log(e);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">#container &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 80vh;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;views-map-ElectronicMap.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">            &lt;el-card&gt;</span><br><span class="line">                &lt;MapContainer /&gt;</span><br><span class="line">            &lt;/el-card&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">        &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import MapContainer from &quot;@/components/Map/MapContainer.vue&quot;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="2-地图添加点标记"><a href="#2-地图添加点标记" class="headerlink" title="2.地图添加点标记"></a>2.地图添加点标记</h2><blockquote><p>1.创建mock文件：详见源文件</p></blockquote><blockquote><p>2.创建api</p></blockquote><p>&#x3D;&#x3D;src-api-map.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span>&#123;</span><br><span class="line">    <span class="title class_">MapList</span>=<span class="string">&quot;/mapList&quot;</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mapListApi</span>(<span class="params"></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">MapList</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span>&#123;mapListApi&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;components-Map-MapContain.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import AMapLoader from &quot;@amap/amap-jsapi-loader&quot;;</span><br><span class="line">import &#123; onMounted, onUnmounted, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import icon from &quot;../../assets/flashIcon.png&quot;;</span><br><span class="line">import stationPic from &quot;@/assets/station.jpg&quot;</span><br><span class="line">import &#123; mapListApi &#125; from &quot;@/api/map.ts&quot;</span><br><span class="line">let map:any = null;</span><br><span class="line">const markersData = ref&lt;any&gt;([])</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  AMapLoader.load(&#123;</span><br><span class="line">    key: &quot;7066344199d5d8c8bd499c1d4bfc1984&quot;, // 申请好的Web端开发者Key，首次调用 load 时必填</span><br><span class="line">    version: &quot;1.4.15&quot;, // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15</span><br><span class="line">    plugins: [], //需要使用的的插件列表，如比例尺&#x27;AMap.Scale&#x27;，支持添加多个如：[&#x27;...&#x27;,&#x27;...&#x27;]</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((AMap) =&gt; &#123;</span><br><span class="line">      map = new AMap.Map(&quot;container&quot;, &#123;</span><br><span class="line">        // 设置地图容器id</span><br><span class="line">        viewMode: &quot;3D&quot;, // 是否为3D地图模式</span><br><span class="line">        zoom:5, // 初始化地图级别</span><br><span class="line">        center: [116.397428, 39.90923], // 初始化地图中心点位置</span><br><span class="line">      &#125;);</span><br><span class="line">      mapListApi().then((&#123; data &#125;)=&gt; &#123;</span><br><span class="line">        markersData.value = data;</span><br><span class="line">        // 创建信息窗体实例</span><br><span class="line">        const infoWindow = new AMap.InfoWindow(&#123;</span><br><span class="line">          offset: new AMap.Pixel(0, -30), // 信息窗体的偏移量</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 添加自定义标记</span><br><span class="line">        markersData.value.forEach((markerData:any) =&gt; &#123;</span><br><span class="line">          const marker = new AMap.Marker(&#123;</span><br><span class="line">            position: markerData.position,</span><br><span class="line">            title: markerData.title,</span><br><span class="line">            icon: icon</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          // 添加点击事件</span><br><span class="line">          marker.on(&#x27;click&#x27;, () =&gt; &#123;</span><br><span class="line">            infoWindow.setContent(`</span><br><span class="line">              &lt;div style=&quot;display:flex;padding:10px;align-items:center;&quot;&gt;</span><br><span class="line">                  &lt;div&gt;</span><br><span class="line">                    &lt;img src=&quot;$&#123;stationPic&#125;&quot; width=&quot;200px&quot;/&gt;  </span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div style=&quot;width:180px;line-height:30px;margin-left:20px&quot;&gt;</span><br><span class="line">                    &lt;h3&gt;$&#123;markerData.title&#125;&lt;/h3&gt; </span><br><span class="line">                    &lt;p&gt;充电桩数量：$&#123;markerData.count&#125;&lt;/p&gt; </span><br><span class="line">                    &lt;p &gt;充电站状态：&lt;span style=&quot;color:blue&quot;&gt;$&#123;markerData.status==1?&quot;使用中&quot;:&quot;维护中&quot;&#125;&lt;/span&gt;&lt;/p&gt; </span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                 </span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            `); // 设置窗体内容</span><br><span class="line">            infoWindow.open(map, marker.getPosition()); // 在地图上打开信息窗体</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          marker.setMap(map); // 将标记添加到地图上</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((e) =&gt; &#123;</span><br><span class="line">      console.log(e);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">onUnmounted(() =&gt; &#123;</span><br><span class="line">  map?.destroy();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">#container &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 80vh;</span><br><span class="line">&#125;</span><br><span class="line">.info-modal&#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  padding: 20px !important;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="3-右侧表单开发"><a href="#3-右侧表单开发" class="headerlink" title="3.右侧表单开发"></a>3.右侧表单开发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;el-card class=&quot;des&quot;&gt;</span><br><span class="line">                &lt;div&gt;1.累计充电站数量：&lt;el-text type=&quot;primary&quot;&gt;34个&lt;/el-text&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;2.单省份最多充电桩：&lt;el-text type=&quot;primary&quot;&gt;北京(4个)&lt;/el-text&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;3.充电站遍及省份：&lt;el-text type=&quot;primary&quot;&gt;14个&lt;/el-text&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;4.暂无充电站省份：&lt;el-text type=&quot;primary&quot;&gt;22个&lt;/el-text&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;5.累计充电站：&lt;el-text type=&quot;primary&quot;&gt;北京(4个)&lt;/el-text&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;6.单日营收最高：&lt;el-text type=&quot;primary&quot;&gt;北京西单充电站&lt;/el-text&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;7.单日营收最低：&lt;el-text type=&quot;primary&quot;&gt;南宁青秀山充电站&lt;/el-text&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;8.故障率最高：&lt;el-text type=&quot;primary&quot;&gt;兰州黄河桥充电站&lt;/el-text&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/el-card&gt;</span><br><span class="line">            &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">                &lt;template #header&gt;</span><br><span class="line">                    &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                        &lt;h3&gt;新增站点地图&lt;/h3&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">                &lt;el-form :model=&quot;form&quot; style=&quot;max-width: 600px&quot; label-width=&quot;85px&quot;&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;站点名称：&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;form.name&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;站点地址：&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;form.name&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;经度：&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;form.name&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;纬度：&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;form.name&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;立即使用：&quot;&gt;</span><br><span class="line">                        &lt;el-switch v-model=&quot;form.delivery&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;备注：&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;form.desc&quot; type=&quot;textarea&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item&gt;</span><br><span class="line">                        &lt;el-button type=&quot;primary&quot; &gt;创建&lt;/el-button&gt;</span><br><span class="line">                        &lt;el-button&gt;清空&lt;/el-button&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                &lt;/el-form&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/el-card&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import MapContainer from &quot;@/components/Map/MapContainer.vue&quot;;</span><br><span class="line">import &#123; reactive &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// do not use same name with ref</span><br><span class="line">const form = reactive(&#123;</span><br><span class="line">    name: &#x27;&#x27;,</span><br><span class="line">    region: &#x27;&#x27;,</span><br><span class="line">    date1: &#x27;&#x27;,</span><br><span class="line">    date2: &#x27;&#x27;,</span><br><span class="line">    delivery: false,</span><br><span class="line">    type: [],</span><br><span class="line">    resource: &#x27;&#x27;,</span><br><span class="line">    desc: &#x27;&#x27;,</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="21-订单管理页面开发"><a href="#21-订单管理页面开发" class="headerlink" title="21.订单管理页面开发"></a>21.订单管理页面开发</h1><h2 id="1-静态结构搭建"><a href="#1-静态结构搭建" class="headerlink" title="1.静态结构搭建"></a>1.静态结构搭建</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card&gt;</span><br><span class="line">        &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.orderNo&quot; placeholder=&quot;请输入订单号&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-select v-model=&quot;searchParams.status&quot; placeholder=&quot;订单状态&quot;&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;1&quot; label=&quot;全部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;2&quot; label=&quot;进行中&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;3&quot; label=&quot;已完成&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;4&quot; label=&quot;异常&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                &lt;/el-select&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.no&quot; placeholder=&quot;设备编号&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button &gt;重置&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.name&quot; placeholder=&quot;请输入站点名称&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">                &lt;el-date-picker v-model=&quot;date&quot; type=&quot;daterange&quot; range-separator=&quot;/&quot; value-format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">                    @change=&quot;handleChange&quot; start-placeholder=&quot;开始日期&quot; end-placeholder=&quot;结束日期&quot; /&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;danger&quot; &gt;批量删除&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; icon=&quot;Download&quot;&gt;导出订单数据到Excel&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-table &gt;</span><br><span class="line">            &lt;el-table-column type=&quot;selection&quot; width=&quot;55&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column type=&quot;index&quot; label=&quot;序号&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;orderNo&quot; label=&quot;订单号&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;equipmentNo&quot; label=&quot;设备编号&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;date&quot; label=&quot;订单日期&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;startTime&quot; label=&quot;开始时间&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;endTime&quot; label=&quot;结束时间&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;money&quot; label=&quot;金额&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;pay&quot; label=&quot;支付方式&quot; /&gt;</span><br><span class="line">            &lt;el-table-column&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-tag type=&quot;success&quot; v-if=&quot;scope.row.status == 2&quot;&gt;进行中&lt;/el-tag&gt;</span><br><span class="line">                    &lt;el-tag type=&quot;primary&quot; v-else-if=&quot;scope.row.status == 3&quot;&gt;已完成&lt;/el-tag&gt;</span><br><span class="line">                    &lt;el-tag type=&quot;warning&quot; v-else-if=&quot;scope.row.status == 4&quot;&gt;异常&lt;/el-tag&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;opera&quot; label=&quot;操作&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-button type=&quot;primary&quot; size=&quot;small&quot;&gt;</span><br><span class="line">                        详情</span><br><span class="line">                    &lt;/el-button&gt;</span><br><span class="line">                    &lt;el-button type=&quot;danger&quot; size=&quot;small&quot;&gt;</span><br><span class="line">                        删除</span><br><span class="line">                    &lt;/el-button&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">        &lt;!-- &lt;el-pagination class=&quot;fr mt mb&quot; v-model:current-page=&quot;pageInfo.page&quot; v-model:page-size=&quot;pageInfo.pageSize&quot;</span><br><span class="line">            :page-sizes=&quot;[10, 20, 30, 40]&quot; :background=&quot;true&quot; layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">            :total=&quot;totals&quot; @size-change=&quot;handleSizeChange&quot; @current-change=&quot;handleCurrentChange&quot; /&gt; --&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  ref &#125; from &quot;vue&quot;</span><br><span class="line">const date = ref([&quot;&quot;, &quot;&quot;])</span><br><span class="line">interface SearchType&#123;</span><br><span class="line">    orderNo: string</span><br><span class="line">    status: number,</span><br><span class="line">    no: string,</span><br><span class="line">    startDate: string,</span><br><span class="line">    endDate: string,</span><br><span class="line">    name: string</span><br><span class="line">&#125;</span><br><span class="line">const searchParams = ref&lt;SearchType&gt;(&#123;</span><br><span class="line">    orderNo: &quot;&quot;,</span><br><span class="line">    status: 1,</span><br><span class="line">    no: &quot;&quot;,</span><br><span class="line">    startDate: &quot;&quot;,</span><br><span class="line">    endDate: &quot;&quot;, //不能写成date.value[0]</span><br><span class="line">    name: &quot;&quot;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const handleChange = (val:string[]) =&gt; &#123;</span><br><span class="line">    searchParams.value.startDate = val[0]</span><br><span class="line">    searchParams.value.endDate = val[1]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="2-创建mock"><a href="#2-创建mock" class="headerlink" title="2.创建mock"></a>2.创建mock</h2><p>&#x3D;&#x3D;api-operations.ts&#x3D;&#x3D;</p><h2 id="3-封装自定义组合式函数优化"><a href="#3-封装自定义组合式函数优化" class="headerlink" title="3.封装自定义组合式函数优化"></a>3.封装自定义组合式函数优化</h2><p>我们项目中有很多查询表格，很多操作都是类似的，可以优化吗，当然可以</p><p>下面可以封装一个组合式函数处理</p><p>&#x3D;&#x3D;hooks-useHttp.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, reactive, onMounted,unref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;@/utils/http&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Http 组合式函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> useHttp&lt;T&gt;(<span class="attr">url</span>: <span class="built_in">string</span>, <span class="attr">initialParams</span>: <span class="built_in">any</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> dataList = ref&lt;T[]&gt;([]);</span><br><span class="line">    <span class="keyword">const</span> loading = ref&lt;<span class="built_in">boolean</span>&gt;(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> totals = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> pageInfo = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">        <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">pageSize</span>: <span class="number">10</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 加载数据的函数</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">loadData</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">        loading.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">post</span>(url, &#123;...pageInfo,...<span class="title function_">unref</span>(initialParams)&#125;);</span><br><span class="line">           </span><br><span class="line">            dataList.<span class="property">value</span> = data.<span class="property">list</span>;</span><br><span class="line">            totals.<span class="property">value</span> = data.<span class="property">total</span>; <span class="comment">// 假设返回总数</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error fetching data:&#x27;</span>, error);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            loading.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 在组件挂载时加载数据</span></span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">loadData</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleSizeChange</span> = (<span class="params">size: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;handleSizeChange&quot;</span>)</span><br><span class="line">        pageInfo.<span class="property">pageSize</span> = size;</span><br><span class="line">        <span class="title function_">loadData</span>();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleCurrentChange</span> = (<span class="params">page: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;handleCurrentChange&quot;</span>)</span><br><span class="line">       pageInfo.<span class="property">page</span> = page;</span><br><span class="line">        <span class="title function_">loadData</span>();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">resetPagination</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        pageInfo.<span class="property">page</span> = <span class="number">1</span>;</span><br><span class="line">        pageInfo.<span class="property">pageSize</span> = <span class="number">10</span>; </span><br><span class="line">        <span class="title function_">loadData</span>();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        dataList,</span><br><span class="line">        loading,</span><br><span class="line">        loadData,</span><br><span class="line">        totals,</span><br><span class="line">        pageInfo,</span><br><span class="line">        handleSizeChange,</span><br><span class="line">        handleCurrentChange,</span><br><span class="line">        resetPagination,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-组件中直接使用"><a href="#4-组件中直接使用" class="headerlink" title="4.组件中直接使用"></a>4.组件中直接使用</h2><p>&#x3D;&#x3D;Orders.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card&gt;</span><br><span class="line">        &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.orderNo&quot; placeholder=&quot;请输入订单号&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-select v-model=&quot;searchParams.status&quot; placeholder=&quot;订单状态&quot;&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;1&quot; label=&quot;全部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;2&quot; label=&quot;进行中&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;3&quot; label=&quot;已完成&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option :value=&quot;4&quot; label=&quot;异常&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                &lt;/el-select&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.no&quot; placeholder=&quot;设备编号&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;loadData&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button @click=&quot;handleReset&quot;&gt;重置&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.name&quot; placeholder=&quot;请输入站点名称&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">                &lt;el-date-picker v-model=&quot;date&quot; type=&quot;daterange&quot; range-separator=&quot;/&quot; value-format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">                    @change=&quot;handleChange&quot; start-placeholder=&quot;开始日期&quot; end-placeholder=&quot;结束日期&quot; /&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;danger&quot; :disabled=&quot;!selectionList.length&quot; @click=&quot;handleBatchDelete&quot;&gt;批量删除&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; :disabled=&quot;!selectionList.length&quot; icon=&quot;Download&quot;&gt;导出订单数据到Excel&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-table :data=&quot;dataList&quot; v-loading=&quot;loading&quot; @selection-change=&quot;handleSelectionChange&quot;&gt;</span><br><span class="line">            &lt;el-table-column type=&quot;selection&quot; width=&quot;55&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column type=&quot;index&quot; label=&quot;序号&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;orderNo&quot; label=&quot;订单号&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;equipmentNo&quot; label=&quot;设备编号&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;date&quot; label=&quot;订单日期&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;startTime&quot; label=&quot;开始时间&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;endTime&quot; label=&quot;结束时间&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;money&quot; label=&quot;金额&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;pay&quot; label=&quot;支付方式&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;status&quot; label=&quot;订单状态&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-tag type=&quot;success&quot; v-if=&quot;scope.row.status == 2&quot;&gt;进行中&lt;/el-tag&gt;</span><br><span class="line">                    &lt;el-tag type=&quot;primary&quot; v-else-if=&quot;scope.row.status == 3&quot;&gt;已完成&lt;/el-tag&gt;</span><br><span class="line">                    &lt;el-tag type=&quot;warning&quot; v-else-if=&quot;scope.row.status == 4&quot;&gt;异常&lt;/el-tag&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;opera&quot; label=&quot;操作&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-button type=&quot;primary&quot; size=&quot;small&quot;&gt;</span><br><span class="line">                        详情</span><br><span class="line">                    &lt;/el-button&gt;</span><br><span class="line">                    &lt;el-button type=&quot;danger&quot; size=&quot;small&quot;&gt;</span><br><span class="line">                        删除</span><br><span class="line">                    &lt;/el-button&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">        &lt;el-pagination class=&quot;fr mt mb&quot; v-model:current-page=&quot;pageInfo.page&quot; v-model:page-size=&quot;pageInfo.pageSize&quot;</span><br><span class="line">            :page-sizes=&quot;[10, 20, 30, 40]&quot; :background=&quot;true&quot; layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">            :total=&quot;totals&quot; @size-change=&quot;handleSizeChange&quot; @current-change=&quot;handleCurrentChange&quot; /&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  ref &#125; from &quot;vue&quot;</span><br><span class="line">import &#123; useHttp &#125; from &quot;@/hooks/useHttp&quot;;</span><br><span class="line">import &#123; batchDeleteApi &#125; from &quot;@/api/operations&quot;</span><br><span class="line">import &#123; ElMessage &#125; from &#x27;element-plus&#x27;</span><br><span class="line">interface SearchType&#123;</span><br><span class="line">    orderNo: string,</span><br><span class="line">    status: number,</span><br><span class="line">    no: string,</span><br><span class="line">    startDate: string,</span><br><span class="line">    endDate: string,</span><br><span class="line">    name: string</span><br><span class="line">&#125;</span><br><span class="line">interface SelectionListType&#123;</span><br><span class="line">    orderNo:string,</span><br><span class="line">    equipmentNo:string,</span><br><span class="line">    date:string,</span><br><span class="line">    startTime:string,</span><br><span class="line">    endTime:string,</span><br><span class="line">    money:string,</span><br><span class="line">    pay:string,</span><br><span class="line">    status:number</span><br><span class="line">&#125;</span><br><span class="line">const date = ref([&quot;&quot;, &quot;&quot;])</span><br><span class="line">const searchParams = ref&lt;SearchType&gt;(&#123;</span><br><span class="line">    orderNo: &quot;&quot;,</span><br><span class="line">    status: 1,</span><br><span class="line">    no: &quot;&quot;,</span><br><span class="line">    startDate: &quot;&quot;,</span><br><span class="line">    endDate: &quot;&quot;, //不能写成date.value[0]</span><br><span class="line">    name: &quot;&quot;</span><br><span class="line">&#125;)</span><br><span class="line">const &#123; dataList, loading,  resetPagination, loadData, totals, pageInfo, handleSizeChange, handleCurrentChange &#125; = useHttp&lt;SelectionListType&gt;(&quot;/orderList&quot;, searchParams);</span><br><span class="line">const handleChange = (val:string[]) =&gt; &#123;</span><br><span class="line">    searchParams.value.startDate = val[0]</span><br><span class="line">    searchParams.value.endDate = val[1]</span><br><span class="line">&#125;</span><br><span class="line">const handleReset = () =&gt; &#123;</span><br><span class="line">    date.value = [&quot;&quot;, &quot;&quot;]</span><br><span class="line">    searchParams.value = &#123;</span><br><span class="line">        orderNo: &quot;&quot;,</span><br><span class="line">        status: 1,</span><br><span class="line">        no: &quot;&quot;,</span><br><span class="line">        startDate: &quot;&quot;,</span><br><span class="line">        endDate: &quot;&quot;,</span><br><span class="line"></span><br><span class="line">        name: &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    resetPagination()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">const selectionList = ref&lt;SelectionListType[]&gt;([])</span><br><span class="line">const handleSelectionChange = (selection:any) =&gt; &#123;</span><br><span class="line">    selectionList.value = selection</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const handleBatchDelete = async () =&gt; &#123;</span><br><span class="line">    const res = await batchDeleteApi(selectionList.value.map((item:SelectionListType) =&gt; item.orderNo))</span><br><span class="line">    if (res.code == 200) &#123;</span><br><span class="line">        ElMessage(&#123;</span><br><span class="line">            message: res.data,</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">        &#125;);</span><br><span class="line">        loadData()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="5-表格添加多选功能"><a href="#5-表格添加多选功能" class="headerlink" title="5.表格添加多选功能"></a>5.表格添加多选功能</h2><p><img src="D:/Software/Typora/images/image-20241028180750829.png" alt="image-20241028180750829"></p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> selectionList = <span class="title function_">ref</span>([])</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleSelectionChange</span> = (<span class="params">selection</span>) =&gt; &#123;</span><br><span class="line">    selectionList.<span class="property">value</span> = selection</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-设置两个按钮的禁用状态"><a href="#6-设置两个按钮的禁用状态" class="headerlink" title="6.设置两个按钮的禁用状态"></a>6.设置两个按钮的禁用状态</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;danger&quot; :disabled=&quot;!selectionList.length&quot; @click=&quot;handleBatchDelete&quot;&gt;批量删除&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; :disabled=&quot;!selectionList.length&quot; :icon=&quot;Download&quot;</span><br><span class="line">            @click=&quot;exportToExcel&quot;&gt;导出订单数据到Excel&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><h2 id="7-批量删除功能"><a href="#7-批量删除功能" class="headerlink" title="7.批量删除功能"></a>7.批量删除功能</h2><p>批量删除接口</p><p>&#x3D;&#x3D;mock-index.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//订单管理-批量删除接口</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&#x27;https://www.demo.com/batchDelete&#x27;</span>, <span class="string">&quot;post&quot;</span>, <span class="function">(<span class="params">options: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; order &#125; = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(options.<span class="property">body</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(order))</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="string">&quot;操作成功&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;api-operations.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">  <span class="title class_">BatchDelete</span>=<span class="string">&#x27;/batchDelete&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">batchDeleteApi</span>(<span class="params">order:[]</span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">BatchDelete</span>,&#123;order&#125;)</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">export</span> &#123;batchDeleteApi&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; batchDeleteApi &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/operations&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleBatchDelete</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">batchDeleteApi</span>(selectionList.<span class="property">value</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">item:SelectionListType</span>) =&gt;</span> item.<span class="property">orderNo</span>))</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> == <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">            <span class="attr">message</span>: res.<span class="property">data</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="title function_">loadData</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-订单详情页面"><a href="#8-订单详情页面" class="headerlink" title="8.订单详情页面"></a>8.订单详情页面</h2><p>&#x3D;&#x3D;Detail.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-descriptions :title=&quot;`订单编号:$&#123;$route.query.orderNo&#125;`&quot;&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;订单编号&quot;&gt;&#123;&#123;$route.query.orderNo&#125;&#125;&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;设备编号&quot;&gt;C2274&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;订单日期&quot;&gt;2024-10-01&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;站点名称&quot;&gt;</span><br><span class="line">                &lt;el-tag size=&quot;small&quot;&gt;北京西单充电站&lt;/el-tag&gt;</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;开始时间&quot;&gt;</span><br><span class="line">               08:00:23</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;结束时间&quot;&gt;09:10:11&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;订单金额(元)&quot;&gt;66.5&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;支付方式&quot;&gt;支付宝&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;所属城市&quot;&gt;北京&lt;/el-descriptions-item&gt;</span><br><span class="line"></span><br><span class="line">            &lt;el-descriptions-item label=&quot;充电量(度)&quot;&gt;86&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;充电设备&quot;&gt;充电桩(快充)&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;充电总时长(小时)&quot;&gt;2&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;负责人姓名&quot;&gt;王科&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;负责人电话&quot;&gt;18888888888&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;维保人员姓名&quot;&gt;刘来&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;维保人员电话&quot;&gt;17777777777&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;订单状态&quot;&gt;已完成&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;服务费(元)&quot;&gt;8.0&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;停车费(元)&quot;&gt;4.0&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;电费(元)&quot;&gt;54.0&lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;收费信息&quot;&gt;</span><br><span class="line">                电费+服务费+停车费，高峰时段费用位2.3元1度，停车费2元/小时，服务费5元/次</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;备注&quot;&gt;暂无&lt;/el-descriptions-item&gt;</span><br><span class="line">        &lt;/el-descriptions&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="9-跳转至订单详情功能"><a href="#9-跳转至订单详情功能" class="headerlink" title="9.跳转至订单详情功能"></a>9.跳转至订单详情功能</h2><p>&#x3D;&#x3D;Orders.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; size=&quot;small&quot; @click=&quot;handleDetail(scope.row.orderNo)&quot;&gt;</span><br><span class="line">                       详情</span><br><span class="line">                   &lt;/el-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useTabsStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/tabs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter, useRoute &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"><span class="keyword">const</span> tabsStore = <span class="title function_">useTabsStore</span>();</span><br><span class="line"><span class="keyword">const</span> &#123; addTab, setCurrentTab &#125; = tabsStore;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleDetail</span> = (<span class="params">orderNo</span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">addTab</span>(<span class="string">&quot;订单详情&quot;</span>, <span class="string">&quot;/operations/detail&quot;</span>, <span class="string">&quot;Share&quot;</span>)</span><br><span class="line">    <span class="title function_">setCurrentTab</span>(<span class="string">&quot;订单详情&quot;</span>, <span class="string">&quot;/operations/detail&quot;</span>,)</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">&quot;/operations/detail?orderNo=&quot;</span> + orderNo)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-解决详情页返回缓存问题"><a href="#10-解决详情页返回缓存问题" class="headerlink" title="10.解决详情页返回缓存问题"></a>10.解决详情页返回缓存问题</h2><p>&#x3D;&#x3D;layouts-TabsLayout.vue&#x3D;&#x3D;</p><p>添加缓存，取代掉原本的<RouterView/></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- &lt;RouterView /&gt; --&gt;</span><br><span class="line">   &lt;RouterView v-slot=&quot;&#123; Component &#125;&quot;&gt;</span><br><span class="line">       &lt;KeepAlive&gt;</span><br><span class="line">           &lt;component :is=&quot;Component&quot; :key=&quot;$route.name&quot; v-if=&quot;$route.meta.keepAlive&quot; /&gt;</span><br><span class="line">       &lt;/KeepAlive&gt;</span><br><span class="line">       &lt;component :is=&quot;Component&quot; :key=&quot;$route.name&quot; v-if=&quot;!$route.meta.keepAlive&quot; /&gt;</span><br><span class="line">   &lt;/RouterView&gt;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;router-basicRouterMap.ts&#x3D;&#x3D;</p><p>给订单页面添加需要缓存标记</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">               <span class="attr">path</span>: <span class="string">&quot;/operations/orders&quot;</span>,</span><br><span class="line">               <span class="attr">name</span>: <span class="string">&quot;orders&quot;</span>,</span><br><span class="line">               <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;@/views/operations/Orders.vue&quot;</span>),</span><br><span class="line">               <span class="attr">meta</span>: &#123;</span><br><span class="line">                   <span class="attr">keepAlive</span>: <span class="literal">true</span></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">           &#125;,</span><br></pre></td></tr></table></figure><blockquote><p>如果从别的页面返回而不是从详情页返回，那么应该重新加载数据</p></blockquote><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="title function_">watch</span>(<span class="function">() =&gt;</span> route.<span class="property">name</span>, <span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(to,<span class="keyword">from</span>)</span><br><span class="line">    <span class="keyword">if</span> (to == <span class="string">&quot;orders&quot;</span> &amp;&amp; <span class="keyword">from</span> != <span class="string">&quot;detail&quot;</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">222</span>)</span><br><span class="line">        <span class="title function_">loadData</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="11-导出订单数据到excel"><a href="#11-导出订单数据到excel" class="headerlink" title="11.导出订单数据到excel"></a>11.导出订单数据到excel</h2><p>1.安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install xlsx file-saver</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">&lt;el-button type=&quot;primary&quot; :disabled=&quot;!selectionList.length&quot; :icon=&quot;Download&quot;</span><br><span class="line">            @click=&quot;exportToExcel&quot;&gt;导出订单数据到Excel&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入所需的库</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">XLSX</span> <span class="keyword">from</span> <span class="string">&#x27;xlsx&#x27;</span>; <span class="comment">// 导入 xlsx 库，用于处理 Excel 文件</span></span><br><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&#x27;file-saver&#x27;</span>; <span class="comment">// 导入 file-saver 库，用于保存文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义导出到 Excel 的函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">exportToExcel</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 将选择的数据（selectionList.value）转换为工作表格式</span></span><br><span class="line">    <span class="keyword">const</span> ws = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">json_to_sheet</span>(selectionList.<span class="property">value</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个新的工作簿（Workbook）</span></span><br><span class="line">    <span class="keyword">const</span> wb = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将工作表（ws）追加到工作簿（wb）中，并命名为 &#x27;Sheet1&#x27;</span></span><br><span class="line">    <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_append_sheet</span>(wb, ws, <span class="string">&#x27;Sheet1&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将工作簿（wb）写入输出格式，这里选择了 &#x27;xlsx&#x27; 格式，并以 &#x27;array&#x27; 类型输出</span></span><br><span class="line">    <span class="keyword">const</span> wbout = <span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, &#123; <span class="attr">bookType</span>: <span class="string">&#x27;xlsx&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;array&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个新的 Blob 对象，并将输出数据放入其中，设置 MIME 类型为 &#x27;application/octet-stream&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([wbout], &#123; <span class="attr">type</span>: <span class="string">&#x27;application/octet-stream&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 file-saver 库的 saveAs 函数，导出并下载 Excel 文件，指定文件名为 &#x27;导出数据.xlsx&#x27;</span></span><br><span class="line">    <span class="title function_">saveAs</span>(blob, <span class="string">&#x27;导出数据.xlsx&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="22-计费管理页面开发"><a href="#22-计费管理页面开发" class="headerlink" title="22.计费管理页面开发"></a>22.计费管理页面开发</h1><h2 id="1-基本搜索框开发"><a href="#1-基本搜索框开发" class="headerlink" title="1.基本搜索框开发"></a>1.基本搜索框开发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">        &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;el-card&gt;</span><br><span class="line">                &lt;el-input style=&quot;width:80%&quot; placeholder=&quot;请输入关键词&quot; v-model=&quot;filterText&quot;&gt;</span><br><span class="line">                    &lt;template #append&gt;</span><br><span class="line">                        &lt;el-button icon=&quot;Search&quot; /&gt;</span><br><span class="line">                    &lt;/template&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-card&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">        &lt;el-col :span=&quot;18&quot;&gt;&lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;ref&#125; from &quot;vue&quot;</span><br><span class="line">const filterText = ref(&#x27;&#x27;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="2-设置接口数据"><a href="#2-设置接口数据" class="headerlink" title="2.设置接口数据"></a>2.设置接口数据</h2><p>mock接口：见源文件</p><blockquote><p>api</p></blockquote><p>&#x3D;&#x3D;api-operation.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post,get &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    <span class="title class_">CityList</span>=<span class="string">&#x27;/cityList&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">cityListApi</span>(<span class="params"></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="title class_">Api</span>.<span class="property">CityList</span>)</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">export</span> &#123;listApi,batchDeleteApi,cityListApi&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;views-operation-Total.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">        &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;el-card&gt;</span><br><span class="line">                &lt;el-input style=&quot;width:80%&quot; placeholder=&quot;请输入关键词&quot; v-model=&quot;filterText&quot;&gt;</span><br><span class="line">                    &lt;template #append&gt;</span><br><span class="line">                        &lt;el-button icon=&quot;Search&quot; /&gt;</span><br><span class="line">                    &lt;/template&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">                &lt;el-tree style=&quot;max-width: 600px&quot; :data=&quot;treeData&quot; :props=&quot;defaultProps&quot;</span><br><span class="line">                    show-checkbox ref=&quot;treeRef&quot; class=&quot;mt&quot; /&gt;</span><br><span class="line">            &lt;/el-card&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">        &lt;el-col :span=&quot;18&quot;&gt;&lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;ref,onMounted&#125; from &quot;vue&quot;</span><br><span class="line">import &#123; cityListApi &#125; from &#x27;@/api/operations&#x27;;</span><br><span class="line">interface Tree &#123;</span><br><span class="line">    label: string</span><br><span class="line">    children?: Tree[]</span><br><span class="line">&#125;</span><br><span class="line">const defaultProps = &#123;</span><br><span class="line">    children: &#x27;children&#x27;,</span><br><span class="line">    label: &#x27;label&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">const filterText = ref(&#x27;&#x27;)</span><br><span class="line">const treeData = ref&lt;Tree[]&gt;([])</span><br><span class="line">onMounted(async () =&gt; &#123;</span><br><span class="line">    const &#123; data &#125; = await cityListApi()</span><br><span class="line">    treeData.value = data</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-tree组件过滤功能"><a href="#3-tree组件过滤功能" class="headerlink" title="3.tree组件过滤功能"></a>3.tree组件过滤功能</h2><blockquote><p><code>InstanceType</code> 是 TypeScript 的一个内置类型，它用来获取构造函数类型的实例类型。在你的代码 <code>const treeRef = ref&lt;InstanceType&lt;typeof ElTree&gt;&gt;()</code> 中，<code>ElTree</code> 是一个 Vue 组件（通常是一个类或函数），<code>typeof ElTree</code> 表达式返回这个组件的类型。</p></blockquote><p><img src="D:/Software/Typora/images/image-20241029194335424.png" alt="image-20241029194335424"></p><p><img src="D:/Software/Typora/images/image-20241029194356193.png" alt="image-20241029194356193"></p><p>data表示的是每一条数据，返回false则节点会隐藏</p><h2 id="4-计费模板开发"><a href="#4-计费模板开发" class="headerlink" title="4.计费模板开发"></a>4.计费模板开发</h2><blockquote><p>基础结构</p></blockquote><blockquote><p>关于:prop&#x3D;”‘date.’ + index + ‘.date1’” 拼接问题</p></blockquote><p><code>&#39;date.&#39; + index + &#39;.date1&#39;</code> 的作用是动态生成表单项的 <code>prop</code> 属性，以便与 Element Plus 的表单校验机制相连。下面是详细解释：</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ol><li>**动态生成 <code>prop</code>**：<code>prop</code> 属性用于链接表单项和其在 <code>ruleForm</code> 对象中的字段。通过拼接字符串，可以为每个动态生成的时间区间创建一个唯一的标识。例如：<ul><li>当 <code>index</code> 是 0 时，<code>prop</code> 变为 <code>&#39;date.0.date1&#39;</code>，指向 <code>ruleForm.date[0].date1</code>。</li><li>当 <code>index</code> 是 1 时，<code>prop</code> 变为 <code>&#39;date.1.date1&#39;</code>，指向 <code>ruleForm.date[1].date1</code>。</li></ul></li><li><strong>与校验规则关联</strong>：Element Plus 会使用这个 <code>prop</code> 来查找对应的字段，并基于 <code>rules</code> 中的定义来进行校验。</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">            &lt;el-card&gt;</span><br><span class="line">                &lt;template #header&gt;</span><br><span class="line">                    &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                        &lt;span&gt;&#123;&#123;title&#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">                &lt;el-form ref=&quot;ruleFormRef&quot; :model=&quot;ruleForm&quot; :rules=&quot;rules&quot; label-width=&quot;auto&quot; class=&quot;demo-ruleForm&quot;</span><br><span class="line">                    status-icon&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;模版名称&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.name&quot; style=&quot;max-width: 200px&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;div v-for=&quot;(timeSlot, index) in ruleForm.date&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                        &lt;el-form-item :label=&quot;&#x27;时间区间&#x27; + (index + 1) + &#x27;:&#x27;&quot; required&gt;</span><br><span class="line">                            &lt;el-col :span=&quot;8&quot;&gt;</span><br><span class="line">                                &lt;el-form-item :prop=&quot;&#x27;date.&#x27; + index + &#x27;.date1&#x27;&quot;&gt;</span><br><span class="line">                                    &lt;el-time-picker v-model=&quot;timeSlot.date1&quot; type=&quot;date&quot; aria-label=&quot;开始时间&quot;</span><br><span class="line">                                        placeholder=&quot;开始时间&quot; style=&quot;width: 100%&quot; /&gt;</span><br><span class="line">                                &lt;/el-form-item&gt;</span><br><span class="line">                            &lt;/el-col&gt;</span><br><span class="line">                            &lt;el-col class=&quot;text-center&quot; :span=&quot;1&quot;&gt;</span><br><span class="line">                                &lt;span class=&quot;text-gray-500&quot;&gt;-&lt;/span&gt;</span><br><span class="line">                            &lt;/el-col&gt;</span><br><span class="line">                            &lt;el-col :span=&quot;8&quot;&gt;</span><br><span class="line">                                &lt;el-form-item :prop=&quot;&#x27;date.&#x27; + index + &#x27;.date2&#x27;&quot;&gt;</span><br><span class="line">                                    &lt;el-time-picker v-model=&quot;timeSlot.date2&quot; aria-label=&quot;结束时间&quot; placeholder=&quot;结束时间&quot;</span><br><span class="line">                                        style=&quot;width: 100%&quot; /&gt;</span><br><span class="line">                                &lt;/el-form-item&gt;</span><br><span class="line">                            &lt;/el-col&gt;</span><br><span class="line">                            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                                &lt;el-form-item label=&quot;电费：&quot; :prop=&quot;&#x27;electricity.&#x27; + index&quot;&gt;</span><br><span class="line">                                    &lt;el-input v-model=&quot;timeSlot.electricity&quot; style=&quot;width: 100%&quot; /&gt;</span><br><span class="line">                                &lt;/el-form-item&gt;</span><br><span class="line">                            &lt;/el-col&gt;</span><br><span class="line">                        &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;el-button type=&quot;primary&quot; class=&quot;mb&quot; @click=&quot;addTimeSlot&quot;&gt;添加时间区间&lt;/el-button&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;服务费&quot; prop=&quot;service&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.service&quot; style=&quot;max-width: 200px&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;停车费&quot; prop=&quot;parking&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.parking&quot; style=&quot;max-width: 200px&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;特殊备注&quot; prop=&quot;remarks&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;ruleForm.remarks&quot; type=&quot;textarea&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item&gt;</span><br><span class="line">                        &lt;el-button type=&quot;primary&quot; @click=&quot;submitForm(ruleFormRef)&quot;&gt;</span><br><span class="line">                            创建</span><br><span class="line">                        &lt;/el-button&gt;</span><br><span class="line">                        &lt;el-button @click=&quot;resetForm&quot;&gt;重置&lt;/el-button&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                &lt;/el-form&gt;</span><br><span class="line">            &lt;/el-card&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;ref,onMounted,watch,reactive&#125; from &quot;vue&quot;</span><br><span class="line">import &#123; cityListApi &#125; from &#x27;@/api/operations&#x27;;</span><br><span class="line">import &#123; ElTree &#125; from &#x27;element-plus&#x27;</span><br><span class="line">import type &#123; FormInstance, FormRules &#125; from &#x27;element-plus&#x27;</span><br><span class="line">/*计费模板开发*/</span><br><span class="line">const title=ref(&quot;计费模板&quot;)</span><br><span class="line">interface RuleForm &#123;</span><br><span class="line">    date:  Array&lt;&#123; date1: string; date2: string; electricity: string &#125;&gt;,</span><br><span class="line">    name: string,</span><br><span class="line">    service: string,</span><br><span class="line">    parking: string,</span><br><span class="line">    remarks: string</span><br><span class="line">&#125;</span><br><span class="line">const ruleFormRef = ref&lt;FormInstance&gt;()</span><br><span class="line">const ruleForm = ref&lt;RuleForm&gt;(&#123;</span><br><span class="line">    date: [&#123; date1: &#x27;&#x27;, date2: &#x27;&#x27;, electricity: &#x27;&#x27; &#125;],</span><br><span class="line">    name: &#x27;&#x27;,</span><br><span class="line">    service: &quot;&quot;,</span><br><span class="line">    parking: &quot;&quot;,</span><br><span class="line">    remarks: &quot;&quot;</span><br><span class="line">&#125;)</span><br><span class="line">const rules = reactive&lt;FormRules&lt;RuleForm&gt;&gt;(&#123;</span><br><span class="line">    name: [</span><br><span class="line">        &#123; required: true, message: &#x27;请输入模板名称&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    service:[</span><br><span class="line">        &#123; required: true, message: &#x27;请输入服务费&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    parking:[</span><br><span class="line">        &#123; required: true, message: &#x27;请输入停车费&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    remarks:[</span><br><span class="line">        &#123; required: true, message: &#x27;请输入备注&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">    ],</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const addTimeSlot = () =&gt; &#123;</span><br><span class="line">    ruleForm.value.date.push(&#123; date1: &#x27;&#x27;, date2: &#x27;&#x27;, electricity: &#x27;&#x27; &#125;)</span><br><span class="line">&#125;</span><br><span class="line">const submitForm = async (formEl: FormInstance | undefined) =&gt; &#123;</span><br><span class="line">    if (!formEl) return</span><br><span class="line">    await formEl.validate((valid, fields) =&gt; &#123;</span><br><span class="line">        if (valid) &#123;</span><br><span class="line">            console.log(8787, ruleForm)</span><br><span class="line">            console.log(&#x27;submit!&#x27;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            console.log(&#x27;error submit!&#x27;, fields)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const resetForm = () =&gt; &#123;</span><br><span class="line">    ruleForm.value = &#123;</span><br><span class="line">        date: [&#123; date1: &#x27;&#x27;, date2: &#x27;&#x27;, electricity: &#x27;&#x27; &#125;],</span><br><span class="line">        name: &#x27;Hello&#x27;,</span><br><span class="line">        service: &quot;&quot;,</span><br><span class="line">        parking: &quot;&quot;,</span><br><span class="line">        remarks: &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="5-实现动态规则验证"><a href="#5-实现动态规则验证" class="headerlink" title="5.实现动态规则验证"></a>5.实现动态规则验证</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div v-for=&quot;(timeSlot, index) in ruleForm.date&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                        &lt;el-form-item :label=&quot;&#x27;时间区间&#x27; + (index + 1) + &#x27;:&#x27;&quot; required&gt;</span><br><span class="line">                            &lt;el-col :span=&quot;8&quot;&gt;</span><br><span class="line">                                &lt;el-form-item :prop=&quot;&#x27;date.&#x27; + index + &#x27;.date1&#x27;&quot; :rules=&quot;&#123;required: true,message: &#x27;时间不能为空&#x27;,trigger: &#x27;blur&#x27;&#125;&quot;&gt;</span><br><span class="line">                                    &lt;el-time-picker v-model=&quot;timeSlot.date1&quot; type=&quot;date&quot; aria-label=&quot;开始时间&quot;</span><br><span class="line">                                        placeholder=&quot;开始时间&quot; style=&quot;width: 100%&quot; /&gt;</span><br><span class="line">                                &lt;/el-form-item&gt;</span><br><span class="line">                            &lt;/el-col&gt;</span><br><span class="line">                            &lt;el-col class=&quot;text-center&quot; :span=&quot;1&quot;&gt;</span><br><span class="line">                                &lt;span class=&quot;text-gray-500&quot;&gt;-&lt;/span&gt;</span><br><span class="line">                            &lt;/el-col&gt;</span><br><span class="line">                            &lt;el-col :span=&quot;8&quot;&gt;</span><br><span class="line">                                &lt;el-form-item :prop=&quot;&#x27;date.&#x27; + index + &#x27;.date2&#x27;&quot; :rules=&quot;&#123;required: true,message: &#x27;时间不能为空&#x27;,trigger: &#x27;blur&#x27;&#125;&quot;&gt;</span><br><span class="line">                                    &lt;el-time-picker v-model=&quot;timeSlot.date2&quot; aria-label=&quot;结束时间&quot; placeholder=&quot;结束时间&quot;</span><br><span class="line">                                        style=&quot;width: 100%&quot; /&gt;</span><br><span class="line">                                &lt;/el-form-item&gt;</span><br><span class="line">                            &lt;/el-col&gt;</span><br><span class="line">                            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                                &lt;el-form-item label=&quot;电费：&quot; :prop=&quot;&#x27;electricity.&#x27; + index&quot; :rules=&quot;&#123;required: true,message: &#x27;时间不能为空&#x27;,trigger: &#x27;blur&#x27;&#125;&quot;&gt;</span><br><span class="line">                                    &lt;el-input v-model=&quot;timeSlot.electricity&quot; style=&quot;width: 100%&quot; /&gt;</span><br><span class="line">                                &lt;/el-form-item&gt;</span><br><span class="line">                            &lt;/el-col&gt;</span><br><span class="line">                        &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="6-树状图和右边联动"><a href="#6-树状图和右边联动" class="headerlink" title="6.树状图和右边联动"></a>6.树状图和右边联动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-tree style=&quot;max-width: 600px&quot; :data=&quot;treeData&quot; :props=&quot;defaultProps&quot; @node-click=&quot;handleNodeClick&quot;</span><br><span class="line">                   show-checkbox ref=&quot;treeRef&quot; :filter-node-method=&quot;filterNode&quot; class=&quot;mt&quot; /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleNodeClick</span> = (<span class="params">data: Tree</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(!data.<span class="property">children</span>)&#123;</span><br><span class="line">        title.<span class="property">value</span>=data.<span class="property">label</span></span><br><span class="line">        <span class="title function_">resetForm</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="23-报警管理页面开发"><a href="#23-报警管理页面开发" class="headerlink" title="23.报警管理页面开发"></a>23.报警管理页面开发</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">     &lt;el-card&gt;</span><br><span class="line">        &lt;el-radio-group v-model=&quot;radio1&quot; size=&quot;large&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;严重告警&quot; :value=&quot;1&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;紧急告警&quot; :value=&quot;2&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;重要告警&quot; :value=&quot;3&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;一般告警&quot; :value=&quot;4&quot; /&gt;</span><br><span class="line">        &lt;/el-radio-group&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref&#125; from &#x27;vue&#x27;</span><br><span class="line">const radio1 = ref&lt;number&gt;(1)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="1-接口开发"><a href="#1-接口开发" class="headerlink" title="1.接口开发"></a>1.接口开发</h2><p>&#x3D;&#x3D;api-alarm.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;get &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    alarmList=<span class="string">&quot;/alarmList&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">alarmListApi</span>(<span class="params"></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="title class_">Api</span>.<span class="property">alarmList</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span>&#123; alarmListApi &#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;views-alarm-Alarm.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">     &lt;el-card&gt;</span><br><span class="line">        &lt;el-radio-group v-model=&quot;radio1&quot; size=&quot;large&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;严重告警&quot; :value=&quot;1&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;紧急告警&quot; :value=&quot;2&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;重要告警&quot; :value=&quot;3&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;一般告警&quot; :value=&quot;4&quot; /&gt;</span><br><span class="line">        &lt;/el-radio-group&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-card class=&quot;mt&quot; v-for=&quot;item in alarmList&quot; :key=&quot;item.equNo&quot;&gt;</span><br><span class="line">        &lt;el-alert :title=&quot;`$&#123;item.address&#125;充电站充电异常！`&quot; type=&quot;warning&quot; show-icon class=&quot;mb&quot;&gt;</span><br><span class="line">        &lt;/el-alert&gt;</span><br><span class="line">        &lt;el-descriptions direction=&quot;vertical&quot; :column=&quot;4&quot; border&gt;</span><br><span class="line">            &lt;el-descriptions-item v-for=&quot;(val, key) in item&quot; :label=&quot;getLabel(key)&quot;&gt;</span><br><span class="line">                &lt;el-tag :type=&quot;val == 1 ? &#x27;danger&#x27; : (val == 2 ? &#x27;warning&#x27; : &#x27;info&#x27;)&quot; v-if=&quot;key == &#x27;level&#x27;&quot;&gt;</span><br><span class="line">                    &#123;&#123; val == 1 ? &#x27;严重&#x27; : (val == 2 ? &#x27;紧急&#x27; : &#x27;一般&#x27;) &#125;&#125;</span><br><span class="line">                &lt;/el-tag&gt;</span><br><span class="line">                &lt;el-link type=&quot;danger&quot; v-else-if=&quot;key == &#x27;status&#x27;&quot;&gt;</span><br><span class="line">                    &#123;&#123; val == 1 ? &quot;待指派&quot; : &quot;处理中&quot; &#125;&#125;</span><br><span class="line">                &lt;/el-link&gt;</span><br><span class="line">                &lt;span v-else&gt;</span><br><span class="line">                    &#123;&#123; val &#125;&#125;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;操作&quot; v-if=&quot;item.status == 1&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;handleOpen&quot;&gt;指派&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;操作&quot; v-else-if=&quot;item.status == 2&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;warning&quot; @click=&quot;handleOpen&quot;&gt;催办&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;操作&quot; v-else&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;handleOpen&quot;&gt;查看&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">        &lt;/el-descriptions&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref,onMounted&#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; alarmListApi &#125; from &#x27;@/api/alarm&#x27;;</span><br><span class="line">import &#123; getLabel &#125; from &#x27;./fieldLabelMap&#x27;;</span><br><span class="line">interface AlarmListType&#123;</span><br><span class="line">    description: string,</span><br><span class="line">    address: string,</span><br><span class="line">    equNo: string,</span><br><span class="line">    level: number,</span><br><span class="line">    time: string,</span><br><span class="line">    code: number,</span><br><span class="line">    status: number,</span><br><span class="line">&#125;</span><br><span class="line">const alarmList = ref&lt;AlarmListType[]&gt;([]);</span><br><span class="line">onMounted(async () =&gt; &#123;</span><br><span class="line">    const &#123; data &#125; = await alarmListApi();</span><br><span class="line">    alarmList.value = data</span><br><span class="line">&#125;)</span><br><span class="line">const radio1 = ref&lt;number&gt;(1)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>因为后端返回的字段都是英文名称，但是显示要显示为对应的中文，所以创建映射表</p><p>&#x3D;&#x3D;views-alarm-fieldLabelMap.ts&#x3D;&#x3D;</p><blockquote><p><strong>Tips:</strong></p><p><code>Record&lt;string, string&gt;</code> 是一个工具类型，用于定义一个对象类型，其中的键是字符串，值也是字符串</p></blockquote><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">fieldLabelMap</span>: <span class="title class_">Record</span>&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; = &#123;</span><br><span class="line">    <span class="attr">description</span>: <span class="string">&#x27;故障描述&#x27;</span>,</span><br><span class="line">    <span class="attr">address</span>: <span class="string">&#x27;设备地址&#x27;</span>,</span><br><span class="line">    <span class="attr">equNo</span>: <span class="string">&#x27;设备号&#x27;</span>,</span><br><span class="line">    <span class="attr">status</span>: <span class="string">&#x27;当前状态&#x27;</span>,</span><br><span class="line">    <span class="attr">time</span>: <span class="string">&#x27;故障时间&#x27;</span>,</span><br><span class="line">    <span class="attr">level</span>: <span class="string">&#x27;告警级别&#x27;</span>,</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;故障代码&#x27;</span>,</span><br><span class="line">    <span class="comment">// 其他字段映射</span></span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> getLabel = (<span class="attr">key</span>: <span class="built_in">string</span>): <span class="function"><span class="params">string</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> fieldLabelMap[key] || key; <span class="comment">// 返回映射的中文标签或默认字段名</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">export</span> &#123;getLabel&#125;</span><br></pre></td></tr></table></figure><h2 id="2-二次封装elementplus组件，实现分部组件"><a href="#2-二次封装elementplus组件，实现分部组件" class="headerlink" title="2.二次封装elementplus组件，实现分部组件"></a>2.二次封装elementplus组件，实现分部组件</h2><blockquote><p>核心逻辑</p></blockquote><p>1.通过插槽让用户传入若干form,至少两个，至多三个</p><p>2.点击下一步需要校验表单，需要通过父组件传入表单实例，调用表单validate方法进行校验，</p><p>3.提交数据，需要子组件触发父组件的函数，调用提交表单数据方法，通过emit实现</p><p>&#x3D;&#x3D;components-StepForm.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div style=&quot;max-width: 600px;&quot;&gt;</span><br><span class="line">        &lt;el-steps :active=&quot;currentStep&quot; align-center finish-status=&quot;success&quot;&gt;</span><br><span class="line">            &lt;el-step v-for=&quot;(step, index) in steps&quot; :key=&quot;index&quot; :title=&quot;step.title&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">        &lt;/el-steps&gt;</span><br><span class="line">        &lt;div v-if=&quot;currentStep === 0&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;slot name=&quot;step-1&quot;&gt;&lt;/slot&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-if=&quot;currentStep === 1&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;slot name=&quot;step-2&quot;&gt;&lt;/slot&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-if=&quot;currentStep === 2&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;slot name=&quot;step-3&quot;&gt;&lt;/slot&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;step-buttons&quot;&gt;</span><br><span class="line">            &lt;el-button @click=&quot;prevStep&quot; v-if=&quot;currentStep &gt; 0&quot;&gt;上一步&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;nextStep&quot;&gt;</span><br><span class="line">                &#123;&#123; currentStep === steps.length - 1 ? &#x27;提交&#x27; : &#x27;下一步&#x27; &#125;&#125;</span><br><span class="line">            &lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">const props = defineProps([&quot;steps&quot;, &quot;form1&quot;, &quot;form2&quot;, &quot;form3&quot;])</span><br><span class="line">const emit = defineEmits([&quot;handleSubmit&quot;])</span><br><span class="line">const currentStep = ref(0);</span><br><span class="line">const nextStep = async () =&gt; &#123;</span><br><span class="line">    if (currentStep.value == 0) &#123;</span><br><span class="line">        props.form1.validate((valid: boolean) =&gt; &#123;</span><br><span class="line">            if (valid) &#123;</span><br><span class="line">                if (currentStep.value &lt; props.steps.length - 1) &#123;</span><br><span class="line">                    currentStep.value++;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    // 提交逻辑</span><br><span class="line">                   emit(&quot;handleSubmit&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; else if (currentStep.value == 1) &#123;</span><br><span class="line">        props.form2?.validate((valid: boolean) =&gt; &#123;</span><br><span class="line">            if (valid) &#123;</span><br><span class="line">                if (currentStep.value &lt; props.steps.length - 1) &#123;</span><br><span class="line">                    currentStep.value++;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    // 提交逻辑</span><br><span class="line">                    emit(&quot;handleSubmit&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (props.form3) &#123;</span><br><span class="line">            props.form3.validate((valid: boolean) =&gt; &#123;</span><br><span class="line">                if (valid) &#123;</span><br><span class="line">                    if (currentStep.value &lt; props.steps.length - 1) &#123;</span><br><span class="line">                        currentStep.value++;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        // 提交逻辑</span><br><span class="line">                        emit(&quot;handleSubmit&quot;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            emit(&quot;handleSubmit&quot;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">const prevStep = () =&gt; &#123;</span><br><span class="line">    if (currentStep.value &gt; 0) &#123;</span><br><span class="line">        currentStep.value--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.step-buttons &#123;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;views-alarm-Alarm.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card&gt;</span><br><span class="line">        &lt;el-radio-group v-model=&quot;radio1&quot; size=&quot;large&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;严重告警&quot; :value=&quot;1&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;紧急告警&quot; :value=&quot;2&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;重要告警&quot; :value=&quot;3&quot; /&gt;</span><br><span class="line">            &lt;el-radio-button label=&quot;一般告警&quot; :value=&quot;4&quot; /&gt;</span><br><span class="line">        &lt;/el-radio-group&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-card class=&quot;mt&quot; v-for=&quot;item in alarmList&quot; :key=&quot;item.equNo&quot;&gt;</span><br><span class="line">        &lt;el-alert :title=&quot;`$&#123;item.address&#125;充电站充电异常！`&quot; type=&quot;warning&quot; show-icon class=&quot;mb&quot;&gt;</span><br><span class="line">        &lt;/el-alert&gt;</span><br><span class="line">        &lt;el-descriptions direction=&quot;vertical&quot; :column=&quot;4&quot; border&gt;</span><br><span class="line">            &lt;el-descriptions-item v-for=&quot;(val, key) in item&quot; :label=&quot;getLabel(key)&quot;&gt;</span><br><span class="line">                &lt;el-tag :type=&quot;val == 1 ? &#x27;danger&#x27; : (val == 2 ? &#x27;warning&#x27; : &#x27;info&#x27;)&quot; v-if=&quot;key == &#x27;level&#x27;&quot;&gt;</span><br><span class="line">                    &#123;&#123; val == 1 ? &#x27;严重&#x27; : (val == 2 ? &#x27;紧急&#x27; : &#x27;一般&#x27;) &#125;&#125;</span><br><span class="line">                &lt;/el-tag&gt;</span><br><span class="line">                &lt;el-link type=&quot;danger&quot; v-else-if=&quot;key == &#x27;status&#x27;&quot;&gt;</span><br><span class="line">                    &#123;&#123; val == 1 ? &quot;待指派&quot; : &quot;处理中&quot; &#125;&#125;</span><br><span class="line">                &lt;/el-link&gt;</span><br><span class="line">                &lt;span v-else&gt;</span><br><span class="line">                    &#123;&#123; val &#125;&#125;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;操作&quot; v-if=&quot;item.status == 1&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;drawer = true&quot;&gt;指派&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;操作&quot; v-else-if=&quot;item.status == 2&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;warning&quot; @click=&quot;drawer = true&quot;&gt;催办&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">            &lt;el-descriptions-item label=&quot;操作&quot; v-else&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;drawer = true&quot;&gt;查看&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-descriptions-item&gt;</span><br><span class="line">        &lt;/el-descriptions&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-drawer v-model=&quot;drawer&quot; title=&quot;报警任务指派&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;StepForm :steps=&quot;steps&quot; :form1=&quot;form1&quot; :form2=&quot;form2&quot; :form3=&quot;form3&quot; @handle-submit=&quot;handleSubmit&quot;&gt;</span><br><span class="line">            &lt;template #step-1&gt;</span><br><span class="line">                &lt;el-form :model=&quot;formData.basicInfo&quot; :rules=&quot;basicInfoRules&quot; ref=&quot;form1&quot;&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;姓名&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;formData.basicInfo.name&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;电话&quot; prop=&quot;tel&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;formData.basicInfo.tel&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;邮箱&quot; prop=&quot;email&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;formData.basicInfo.email&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;工号&quot; prop=&quot;no&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;formData.basicInfo.no&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;是否加急：&quot;&gt;</span><br><span class="line">                        &lt;el-switch v-model=&quot;formData.basicInfo.urgent&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;其他选项：&quot;&gt;</span><br><span class="line">                        &lt;el-checkbox-group v-model=&quot;formData.basicInfo.other&quot;&gt;</span><br><span class="line">                            &lt;el-checkbox value=&quot;换设备&quot; name=&quot;equ&quot;&gt;</span><br><span class="line">                                更换设备</span><br><span class="line">                            &lt;/el-checkbox&gt;</span><br><span class="line">                            &lt;el-checkbox value=&quot;仅维修&quot; name=&quot;repiar&quot;&gt;</span><br><span class="line">                                仅维修</span><br><span class="line">                            &lt;/el-checkbox&gt;</span><br><span class="line">                            &lt;el-checkbox value=&quot;需拍照片&quot; name=&quot;photo&quot;&gt;</span><br><span class="line">                                需拍照片</span><br><span class="line">                            &lt;/el-checkbox&gt;</span><br><span class="line">                            &lt;el-checkbox value=&quot;Simple brand exposure&quot; name=&quot;doc&quot;&gt;</span><br><span class="line">                                需报备</span><br><span class="line">                            &lt;/el-checkbox&gt;</span><br><span class="line">                        &lt;/el-checkbox-group&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;其他备注信息&quot;&gt;</span><br><span class="line">                        &lt;el-input type=&quot;textarea&quot; /&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                &lt;/el-form&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;template #step-2&gt;</span><br><span class="line">                &lt;el-form :model=&quot;formData.shenpi&quot; :rules=&quot;addressRules&quot; ref=&quot;form2&quot;&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;审批部门&quot; prop=&quot;a&quot;&gt;</span><br><span class="line">                        &lt;el-select placeholder=&quot;请选择审批部门&quot; v-model=&quot;formData.shenpi.a&quot;&gt;</span><br><span class="line">                            &lt;el-option label=&quot;总裁办&quot; value=&quot;1&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option label=&quot;运营部&quot; value=&quot;2&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option label=&quot;维修部&quot; value=&quot;3&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option label=&quot;市场部&quot; value=&quot;4&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option label=&quot;财务部&quot; value=&quot;5&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                        &lt;/el-select&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;抄送部门&quot; prop=&quot;b&quot; &gt;</span><br><span class="line">                        &lt;el-select placeholder=&quot;请选择抄送部门&quot;  v-model=&quot;formData.shenpi.b&quot;&gt;</span><br><span class="line">                            &lt;el-option label=&quot;总裁办&quot; value=&quot;1&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option label=&quot;运营部&quot; value=&quot;2&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option label=&quot;维修部&quot; value=&quot;3&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option label=&quot;市场部&quot; value=&quot;4&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                            &lt;el-option label=&quot;财务部&quot; value=&quot;5&quot;&gt; &lt;/el-option&gt;</span><br><span class="line">                        &lt;/el-select&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                &lt;/el-form&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;template #step-3&gt;</span><br><span class="line">                &lt;el-form :model=&quot;formData.address&quot; :rules=&quot;addressRules2&quot; ref=&quot;form3&quot;&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;负责人姓名&quot; prop=&quot;person&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;formData.address.person&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label=&quot;负责人电话&quot; prop=&quot;tel&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model=&quot;formData.address.tel&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">                    &lt;/el-form-item&gt;</span><br><span class="line">                &lt;/el-form&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/StepForm&gt;</span><br><span class="line">        &lt;el-result icon=&quot;warning&quot; title=&quot;设备编号：CD1001&quot; sub-title=&quot;该任务已催促2次，请抓紧处理&quot;&gt;</span><br><span class="line">            &lt;template #extra&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot;&gt;我已知晓&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/el-result&gt;</span><br><span class="line">    &lt;/el-drawer&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, onMounted &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; alarmListApi &#125; from &#x27;@/api/alarm&#x27;;</span><br><span class="line">import &#123; getLabel &#125; from &#x27;./fieldLabelMap&#x27;;</span><br><span class="line">import StepForm from &quot;@/components/StepForm/StepForm.vue&quot;</span><br><span class="line">import &#123; FormInstance &#125; from &#x27;element-plus&#x27;;</span><br><span class="line">interface AlarmListType &#123;</span><br><span class="line">    description: string,</span><br><span class="line">    address: string,</span><br><span class="line">    equNo: string,</span><br><span class="line">    level: number,</span><br><span class="line">    time: string,</span><br><span class="line">    code: number,</span><br><span class="line">    status: number,</span><br><span class="line">&#125;</span><br><span class="line">const alarmList = ref&lt;AlarmListType[]&gt;([]);</span><br><span class="line">onMounted(async () =&gt; &#123;</span><br><span class="line">    const &#123; data &#125; = await alarmListApi();</span><br><span class="line">    alarmList.value = data</span><br><span class="line">&#125;)</span><br><span class="line">const radio1 = ref&lt;number&gt;(1)</span><br><span class="line">const drawer = ref(false);</span><br><span class="line">const form1=ref&lt;FormInstance&gt;()</span><br><span class="line">const form2=ref&lt;FormInstance&gt;()</span><br><span class="line">const form3=ref&lt;FormInstance&gt;()</span><br><span class="line">const steps = [</span><br><span class="line">    &#123; title: &#x27;基本信息&#x27; &#125;,</span><br><span class="line">    &#123; title: &#x27;审批信息&#x27; &#125;,</span><br><span class="line">    &#123; title: &#x27;日期信息&#x27; &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">const formData = ref(&#123;</span><br><span class="line">    basicInfo: &#123;</span><br><span class="line">        name: &#x27;&#x27;,</span><br><span class="line">        email: &#x27;&#x27;,</span><br><span class="line">        tel: &#x27;&#x27;,</span><br><span class="line">        no: &#x27;&#x27;,</span><br><span class="line">        other: [],</span><br><span class="line">        urgent: true</span><br><span class="line">    &#125;,</span><br><span class="line">    shenpi: &#123;</span><br><span class="line">        a: &#x27;&#x27;,</span><br><span class="line">        b: &#x27;&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    address:&#123;</span><br><span class="line">        person:&quot;&quot;,</span><br><span class="line">        tel:&quot;&quot;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">const basicInfoRules = &#123;</span><br><span class="line">    name: [&#123; required: true, message: &#x27;请输入姓名&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">    email: [&#123; required: true, message: &#x27;请输入邮箱&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">    no: [&#123; required: true, message: &#x27;请输入工号&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">    tel: [&#123; required: true, message: &#x27;请输入电话&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">&#125;;</span><br><span class="line">const addressRules = &#123;</span><br><span class="line">    a: [&#123; required: true, message: &#x27;不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">    b: [&#123; required: true, message: &#x27;不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;]</span><br><span class="line">&#125;;</span><br><span class="line">const addressRules2 = &#123;</span><br><span class="line">    person: [&#123; required: true, message: &#x27;不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">    tel: [&#123; required: true, message: &#x27;不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleSubmit=()=&gt;&#123;</span><br><span class="line">    console.log(formData.value)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>优化写法</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;script lang=<span class="string">&quot;ts&quot;</span> setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">const</span> currentStep = ref&lt;<span class="built_in">number</span>&gt;(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>([<span class="string">&quot;steps&quot;</span>, <span class="string">&quot;form1&quot;</span>, <span class="string">&quot;form2&quot;</span>, <span class="string">&quot;form3&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> forms = [props.<span class="property">form1</span>, props.<span class="property">form2</span>, props.<span class="property">form3</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">prevStep</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (currentStep.<span class="property">value</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        currentStep.<span class="property">value</span>--</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">nextStep</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> currentForm = forms[currentStep.<span class="property">value</span>];</span><br><span class="line"></span><br><span class="line">    currentForm.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid: <span class="built_in">boolean</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">            <span class="keyword">if</span> (currentStep.<span class="property">value</span> &lt; props.<span class="property">steps</span>.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">                currentStep.<span class="property">value</span>++</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;提交表单&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="24-会员卡管理"><a href="#24-会员卡管理" class="headerlink" title="24.会员卡管理"></a>24.会员卡管理</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card  &gt;</span><br><span class="line">        &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.no&quot; placeholder=&quot;请输入会员卡号&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.tel&quot; placeholder=&quot;请输入手机号&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.name&quot; placeholder=&quot;请输入姓名&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;loadData&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button @click=&quot;handleReset&quot;&gt;重置&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-card class=&quot;mt&quot; &gt;</span><br><span class="line">        &lt;el-table :data=&quot;dataList&quot; v-loading=&quot;loading&quot;&gt;</span><br><span class="line">            &lt;el-table-column type=&quot;index&quot; label=&quot;序号&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;memberCardNumber&quot; label=&quot;会员卡号&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;cardType&quot; label=&quot;卡类型&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;issueDate&quot; label=&quot;开卡日期&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;holderName&quot; label=&quot;持有人姓名&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;holderPhone&quot; label=&quot;持有人电话&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;cardBalance&quot; label=&quot;卡余额&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;transactionRecords&quot; label=&quot;消费记录&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-popover placement=&quot;top-start&quot; title=&quot;消费记录&quot; :width=&quot;260&quot; trigger=&quot;hover&quot;</span><br><span class="line">                        content=&quot;this is content, this is content, this is content&quot;&gt;</span><br><span class="line">                        &lt;template #reference&gt;</span><br><span class="line">                            &lt;el-button class=&quot;m-2&quot;&gt;&#123;&#123; scope.row.transactionDate &#125;&#125;日消费&lt;/el-button&gt;</span><br><span class="line">                        &lt;/template&gt;</span><br><span class="line">                        &lt;el-timeline style=&quot;max-width: 600px&quot;&gt;</span><br><span class="line">                            &lt;el-timeline-item v-for=&quot;(item, index) in scope.row.transactionRecords&quot; :key=&quot;index&quot; color=&quot;#0bbd87&quot;</span><br><span class="line">                                :timestamp=&quot;item.transactionDate&quot;&gt;</span><br><span class="line">                              &lt;p&gt; 消费金额：&#123;&#123;item.transactionAmount &#125;&#125; &lt;/p&gt;</span><br><span class="line">                              &lt;p&gt;消费类型：&#123;&#123; item.transactionType &#125;&#125;&lt;/p&gt;</span><br><span class="line">                            &lt;/el-timeline-item&gt;</span><br><span class="line">                        &lt;/el-timeline&gt;</span><br><span class="line">                    &lt;/el-popover&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;validUntil&quot; label=&quot;有效期至&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">        &lt;el-pagination class=&quot;fr mt mb&quot; v-model:current-page=&quot;pageInfo.page&quot; v-model:page-size=&quot;pageInfo.pageSize&quot;</span><br><span class="line">            :page-sizes=&quot;[10, 20, 30, 40]&quot; :background=&quot;true&quot; layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">            :total=&quot;totals&quot; @size-change=&quot;handleSizeChange&quot; @current-change=&quot;handleCurrentChange&quot; /&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; useHttp &#125; from &#x27;@/hooks/useHttp&#x27;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref(&#123;</span><br><span class="line">    no: &quot;&quot;,</span><br><span class="line">    tel: &quot;&quot;,</span><br><span class="line">    name: &quot;&quot;</span><br><span class="line">&#125;)</span><br><span class="line">const &#123; dataList, loading, resetPagination, loadData, totals, pageInfo, handleSizeChange, handleCurrentChange &#125; = useHttp(&quot;/member&quot;, searchParams);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="25-招商管理"><a href="#25-招商管理" class="headerlink" title="25.招商管理"></a>25.招商管理</h1><p>mock接口</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//招商管理分类列表接口</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&#x27;https://www.demo.com/document&#x27;</span>,<span class="string">&quot;get&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>:<span class="number">200</span>,</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&quot;操作成功&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">      <span class="attr">type</span>:[<span class="string">&quot;招商类&quot;</span>,<span class="string">&quot;广告类&quot;</span>,<span class="string">&quot;公告类&quot;</span>,<span class="string">&quot;提示类&quot;</span>,<span class="string">&quot;日常类&quot;</span>,<span class="string">&quot;告警类&quot;</span>,<span class="string">&quot;其他&quot;</span>],<span class="comment">//文章类型</span></span><br><span class="line">      <span class="attr">important</span>:[<span class="string">&quot;一级&quot;</span>,<span class="string">&quot;二级&quot;</span>,<span class="string">&quot;三级&quot;</span>,<span class="string">&quot;四级&quot;</span>],<span class="comment">//重要程度</span></span><br><span class="line">      <span class="attr">publish</span>:[<span class="string">&quot;站内信&quot;</span>,<span class="string">&quot;公众号&quot;</span>,<span class="string">&quot;小程序&quot;</span>,<span class="string">&quot;H5&quot;</span>,<span class="string">&quot;官网&quot;</span>]<span class="comment">//发布渠道</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>api文件</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; get &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span>&#123;</span><br><span class="line">    <span class="title class_">TypeList</span>=<span class="string">&quot;/document&quot;</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">typeListApi</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="title class_">Api</span>.<span class="property">TypeList</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span>&#123;typeListApi&#125;</span><br></pre></td></tr></table></figure><p>静态结构开发</p><p>&#x3D;&#x3D;document.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;文章类型:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag type=&quot;primary&quot; class=&quot;mr&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag type=&quot;info&quot; class=&quot;mr&quot; v-for=&quot;item in typeList.type&quot; :key=&quot;item&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;重要程度:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag type=&quot;primary&quot; class=&quot;mr&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag type=&quot;info&quot; class=&quot;mr&quot; v-for=&quot;item in typeList.important&quot; :key=&quot;item&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;发布渠道:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag type=&quot;primary&quot; class=&quot;mr&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag type=&quot;info&quot; class=&quot;mr&quot; v-for=&quot;item in typeList.publish&quot; :key=&quot;item&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;el-divider /&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;已选:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag type=&quot;success&quot; class=&quot;mr&quot; closable&gt;全部&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; typeListApi &#125; from &quot;@/api/document&quot;;</span><br><span class="line"></span><br><span class="line">import &#123; onMounted, ref &#125; from &quot;vue&quot;;</span><br><span class="line">interface ListType &#123;</span><br><span class="line">    type: string[],</span><br><span class="line">    important: string[],</span><br><span class="line">    publish: string[]</span><br><span class="line">&#125;</span><br><span class="line">const typeList = ref&lt;ListType&gt;(&#123; type: [], important: [], publish: [] &#125;)</span><br><span class="line"></span><br><span class="line">onMounted(async () =&gt; &#123;</span><br><span class="line">    const &#123; data &#125; = await typeListApi();</span><br><span class="line">    typeList.value = data</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.title &#123;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    width: 80px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="2-点击高亮功能实现"><a href="#2-点击高亮功能实现" class="headerlink" title="2.点击高亮功能实现"></a>2.点击高亮功能实现</h2><blockquote><p><strong>高亮实现思路：</strong></p><p>如果只是一个列表，要想实现高亮，我们会设置一个currentIndex值，每次点击的时候更新这个currentIndex值,</p><p>然后在元素中只需要判断他们的index和currentIndex相等，那就说明是当前点击的元素，就让他高亮</p><p>现在我们有三个类别，所以需要三个currentIndex，所以我们设置一个数组，直接存三个currentIndex</p></blockquote><blockquote><p>点击的时候我们规定两个参数，第一个参数就是index，因为从0开始，但是我们默认要让 全部 这两个字高亮，所以可以设置-1就是全部两个字高亮，</p><p>第二个参数是类别号，第一个类别就是0，第二个类别就是1，使用0 1 2当类别标记的好处是我们可以直接用他当作角标，能够在currentIndex数组中修改</p><p>对应的标记</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;文章类型:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[0]==-1?&#x27;primary&#x27;:&#x27;info&#x27;&quot;  class=&quot;mr&quot; @click=&quot;handleSelect(-1,0)&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[0]==index?&#x27;primary&#x27;:&#x27;info&#x27;&quot; class=&quot;mr&quot; v-for=&quot;(item,index) in typeList.type&quot; :key=&quot;item&quot; @click=&quot;handleSelect(index,0)&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;重要程度:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[1]==-1?&#x27;primary&#x27;:&#x27;info&#x27;&quot;  class=&quot;mr&quot; @click=&quot;handleSelect(-1,1)&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[1]==index?&#x27;primary&#x27;:&#x27;info&#x27;&quot; class=&quot;mr&quot; v-for=&quot;(item,index) in typeList.important&quot; :key=&quot;item&quot; @click=&quot;handleSelect(index,1)&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;发布渠道:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[2]==-1?&#x27;primary&#x27;:&#x27;info&#x27;&quot;  class=&quot;mr&quot; @click=&quot;handleSelect(-1,2)&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[2]==index?&#x27;primary&#x27;:&#x27;info&#x27;&quot; class=&quot;mr&quot; v-for=&quot;(item,index) in typeList.publish&quot; :key=&quot;item&quot; @click=&quot;handleSelect(index,2)&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;el-divider /&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;已选:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag type=&quot;success&quot; class=&quot;mr&quot; closable&gt;全部&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; typeListApi &#125; from &quot;@/api/document&quot;;</span><br><span class="line"></span><br><span class="line">import &#123; onMounted, ref &#125; from &quot;vue&quot;;</span><br><span class="line">interface ListType &#123;</span><br><span class="line">    type: string[],</span><br><span class="line">    important: string[],</span><br><span class="line">    publish: string[]</span><br><span class="line">&#125;</span><br><span class="line">const typeList = ref&lt;ListType&gt;(&#123; type: [], important: [], publish: [] &#125;)</span><br><span class="line"></span><br><span class="line">onMounted(async () =&gt; &#123;</span><br><span class="line">    const &#123; data &#125; = await typeListApi();</span><br><span class="line">    typeList.value = data</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const currentIndex=ref([-1,-1,-1])</span><br><span class="line"></span><br><span class="line">const handleSelect=(index:number,num:number)=&gt;&#123;</span><br><span class="line">    console.log(index)</span><br><span class="line">    currentIndex.value[num]=index</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.title &#123;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    width: 80px;</span><br><span class="line">&#125;</span><br><span class="line">.el-tag&#123;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="3-完整功能实现"><a href="#3-完整功能实现" class="headerlink" title="3.完整功能实现"></a>3.完整功能实现</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;文章类型:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[0] == -1 ? &#x27;primary&#x27; : &#x27;info&#x27;&quot; class=&quot;mr&quot;</span><br><span class="line">                @click=&quot;handleSelect(-1, 0, &#x27;&#x27;)&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[0] == index ? &#x27;primary&#x27; : &#x27;info&#x27;&quot; class=&quot;mr&quot;</span><br><span class="line">                v-for=&quot;(item, index) in typeList.type&quot; :key=&quot;item&quot; @click=&quot;handleSelect(index, 0, item)&quot;&gt;&#123;&#123; item</span><br><span class="line">                &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;重要程度:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[1] == -1 ? &#x27;primary&#x27; : &#x27;info&#x27;&quot; class=&quot;mr&quot;</span><br><span class="line">                @click=&quot;handleSelect(-1, 1, &#x27;&#x27;)&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[1] == index ? &#x27;primary&#x27; : &#x27;info&#x27;&quot; class=&quot;mr&quot;</span><br><span class="line">                v-for=&quot;(item, index) in typeList.important&quot; :key=&quot;item&quot; @click=&quot;handleSelect(index, 1, item)&quot;&gt;&#123;&#123; item</span><br><span class="line">                &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;发布渠道:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[2] == -1 ? &#x27;primary&#x27; : &#x27;info&#x27;&quot; class=&quot;mr&quot;</span><br><span class="line">                @click=&quot;handleSelect(-1, 2, &#x27;&#x27;)&quot;&gt;全部&lt;/el-tag&gt;</span><br><span class="line">            &lt;el-tag :type=&quot;currentIndex[2] == index ? &#x27;primary&#x27; : &#x27;info&#x27;&quot; class=&quot;mr&quot;</span><br><span class="line">                v-for=&quot;(item, index) in typeList.publish&quot; :key=&quot;item&quot; @click=&quot;handleSelect(index, 2, item)&quot;&gt;&#123;&#123; item</span><br><span class="line">                &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;el-divider /&gt;</span><br><span class="line">        &lt;div class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;title&quot;&gt;已选:&lt;/span&gt;</span><br><span class="line">            &lt;el-tag </span><br><span class="line">                disable-transitions </span><br><span class="line">                type=&quot;success&quot; </span><br><span class="line">                class=&quot;mr&quot;</span><br><span class="line">                 v-for=&quot;item in selectedList&quot; </span><br><span class="line">                 :key=&quot;item.name&quot;</span><br><span class="line">                 @close=&quot;handleClose(item.num)&quot;</span><br><span class="line">                closable&gt;&#123;&#123; item.name &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; typeListApi &#125; from &quot;@/api/document&quot;;</span><br><span class="line"></span><br><span class="line">import &#123; onMounted, ref &#125; from &quot;vue&quot;;</span><br><span class="line">interface ListType &#123;</span><br><span class="line">    type: string[],</span><br><span class="line">    important: string[],</span><br><span class="line">    publish: string[]</span><br><span class="line">&#125;</span><br><span class="line">const typeList = ref&lt;ListType&gt;(&#123; type: [], important: [], publish: [] &#125;)</span><br><span class="line">const selectedList = ref&lt;any&gt;([]);//要求格式为 &#123;num:1,name:&quot;招商类&quot;&#125;</span><br><span class="line">onMounted(async () =&gt; &#123;</span><br><span class="line">    const &#123; data &#125; = await typeListApi();</span><br><span class="line">    typeList.value = data</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const currentIndex = ref([-1, -1, -1])</span><br><span class="line">//index表示点击的tag的序号 num表示第几个品类，name表示点击的tag的内容</span><br><span class="line">const handleSelect = (index: number, num: number, name: string) =&gt; &#123;</span><br><span class="line">    // 查找数组中与 newObj.num 相等的对象的索引</span><br><span class="line">    const ind: number = selectedList.value.findIndex((item: any) =&gt; item.num === num);</span><br><span class="line"></span><br><span class="line">    if (!name) &#123;</span><br><span class="line">        //如果点的是全部,删掉对应的那项，也就是筛选出留下 除了点全部那一品类的数据</span><br><span class="line">        selectedList.value = selectedList.value.filter((item: any) =&gt; item.num != num)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (ind == -1) &#123;//找不到相同num的，证明同品类没有，就添加</span><br><span class="line">            selectedList.value.push(&#123; num, name &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            selectedList.value[ind] = &#123; num, name &#125;//否则直接替换</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    currentIndex.value[num] = index;//应该让第几个高亮</span><br><span class="line">&#125;</span><br><span class="line">const handleClose=(num:number)=&gt;&#123;</span><br><span class="line">    selectedList.value = selectedList.value.filter((item: any) =&gt; item.num != num);</span><br><span class="line">    currentIndex.value[num]=-1 //让对应的品类回到全部 高亮</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.title &#123;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    width: 80px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-tag &#123;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="4-富文本编辑器"><a href="#4-富文本编辑器" class="headerlink" title="4.富文本编辑器"></a>4.富文本编辑器</h2><p>Vue3中常见的富文本编辑器：</p><ul><li>TinyMCE </li><li>Quill</li><li>CKEditor  </li><li>wangeditor5</li></ul><p>TinyMCE的官网</p><p><a href="https://www.tiny.cloud/docs/tinymce/latest/">https://www.tiny.cloud/docs/tinymce/latest/</a></p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install <span class="literal">--save</span> <span class="string">&quot;@tinymce/tinymce-vue@^5&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2-详细配置"><a href="#2-详细配置" class="headerlink" title="2.详细配置"></a>2.详细配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;Editor   ref=&quot;editorRef&quot; v-model=&quot;EditorContent&quot; api-key=&quot;xvbamfm2vokka8qoim9r801qtdlldskjschd51yha7zhuusp&quot; :init=&quot;&#123;language:&#x27;zh_CN&#x27;&#125;&quot; /&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Editor from &#x27;@tinymce/tinymce-vue&#x27;</span><br><span class="line">const editorRef = ref(null); // 定义一个 ref 来引用编辑器实例</span><br><span class="line">const EditorContent = ref(&#x27;&#x27;)</span><br><span class="line">const getEditorContent = () =&gt; &#123;</span><br><span class="line">  console.log(897,EditorContent.value)</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>常见配置项</p></blockquote><ol><li><strong>初始化设置</strong>:<ul><li><code>language</code>：设置编辑器的语言，如 <code>zh_CN</code>。</li><li><code>height</code>：设置编辑器的高度。</li><li><code>width</code>：设置编辑器的宽度。</li><li><code>selector</code>：选择要初始化的编辑器元素。</li></ul></li><li><strong>工具栏配置</strong>:<ul><li><code>toolbar</code>：定义显示在工具栏上的按钮，如 <code>undo redo | styleselect | bold italic | link image</code>。</li></ul></li><li><strong>菜单配置</strong>:<ul><li><code>menubar</code>：控制菜单栏的显示，值可以是 <code>false</code>（不显示）或菜单名称的组合，如 <code>file edit view insert format tools table</code>。</li></ul></li><li><strong>插件配置</strong>:<ul><li><code>plugins</code>：启用需要的插件，例如 <code>lists link image code</code>。插件提供额外的功能。</li></ul></li><li><strong>内容样式</strong>:<ul><li><code>content_css</code>：指定内容区域的 CSS 文件，可以自定义编辑器内显示的样式。</li></ul></li><li><strong>格式化选项</strong>:<ul><li><code>formats</code>：定义自定义格式，例如指定某些 HTML 标签的样式。</li></ul></li><li><strong>事件监听</strong>:<ul><li>可以在 <code>init</code> 中添加事件监听，例如 <code>setup</code> 中定义 <code>editor.on(&#39;change&#39;, ...)</code> 来处理内容变化。</li></ul></li><li><strong>图像和文件上传</strong>:<ul><li>通过设置 <code>images_upload_url</code> 和相关处理，允许用户上传图像。</li></ul></li><li><strong>自定义键盘快捷键</strong>:<ul><li>可以通过 <code>setup</code> 方法自定义键盘快捷键，例如：<code>editor.addShortcut(&#39;Ctrl+Z&#39;, &#39;Undo&#39;, function () &#123; console.log(&#39;Undo action&#39;); &#125;);</code>。</li></ul></li><li><strong>代码视图</strong>:<ul><li>可以启用代码编辑功能，设置 <code>code</code> 插件，并添加到工具栏。</li></ul></li></ol><p>示例配置：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Editor</span><br><span class="line">  ref=&quot;editorRef&quot;</span><br><span class="line">  v-model=&quot;EditorContent&quot;</span><br><span class="line">  api-key=&quot;xvbamfm2vokka8qoim9r801qtdlldskjschd51yha7zhuusp&quot;</span><br><span class="line">  :init=&quot;&#123;</span><br><span class="line">    language: &#x27;zh_CN&#x27;,</span><br><span class="line">    height: 500,</span><br><span class="line">    menubar: false,</span><br><span class="line">    toolbar: &#x27;undo redo | styleselect | bold italic | alignleft aligncenter alignright | link image | code&#x27;,</span><br><span class="line">    plugins: &#x27;lists link image code&#x27;,</span><br><span class="line">    content_css: &#x27;/path/to/custom.css&#x27;,</span><br><span class="line">    setup: (editor) =&gt; &#123;</span><br><span class="line">      editor.on(&#x27;change&#x27;, () =&gt; &#123;</span><br><span class="line">        this.EditorContent = editor.getContent();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><h2 id="3-导出html功能"><a href="#3-导出html功能" class="headerlink" title="3.导出html功能"></a>3.导出html功能</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; class=&quot;mt&quot; @click=&quot;getEditorContent&quot;&gt;生成word文件&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><p>Blob 对象是前端 Web API 中的一种数据类型，用于表示二进制数据的大块内容。Blob 代表“Binary Large Object”，它可以存储各种格式的数据，比如图片、音频、视频等。</p><p>将用户生成的数据包装成一个 Blob，然后通过创建一个临时的链接并触发下载操作，让用户可以下载该数据为一个文件</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getEditorContent</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line"> <span class="comment">// 获取编辑器内容</span></span><br><span class="line">      <span class="comment">// 创建一个 Blob 对象</span></span><br><span class="line">      <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title class_">EditorContent</span>.<span class="property">value</span>], &#123; <span class="attr">type</span>: <span class="string">&#x27;text/html&#x27;</span> &#125;);</span><br><span class="line">      <span class="comment">// 创建一个链接元素</span></span><br><span class="line">      <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">      <span class="comment">// 将 Blob 对象的 URL 设置为链接地址</span></span><br><span class="line">      link.<span class="property">href</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">      <span class="comment">// 设置下载文件的名称</span></span><br><span class="line">      link.<span class="property">download</span> = <span class="string">&#x27;document.html&#x27;</span>;</span><br><span class="line">      <span class="comment">// 触发点击事件以下载文件</span></span><br><span class="line">      link.<span class="title function_">click</span>();</span><br><span class="line">      <span class="comment">// 释放 URL 对象</span></span><br><span class="line">      <span class="variable constant_">URL</span>.<span class="title function_">revokeObjectURL</span>(link.<span class="property">href</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="26-系统设置页面"><a href="#26-系统设置页面" class="headerlink" title="26.系统设置页面"></a>26.系统设置页面</h1><p>基本结构开发</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-card&gt;</span><br><span class="line">        &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;searchParams.name&quot; placeholder=&quot;请输入姓名&quot;&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-select placeholder=&quot;请选择部门&quot; v-model=&quot;searchParams.department&quot;&gt;</span><br><span class="line">                    &lt;el-option label=&quot;全部&quot; value=&quot;&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option label=&quot;总裁办&quot; value=&quot;总裁办&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option label=&quot;技术部&quot; value=&quot;技术部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option label=&quot;市场部&quot; value=&quot;市场部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option label=&quot;维修部&quot; value=&quot;维修部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option label=&quot;运营部&quot; value=&quot;运营部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                    &lt;el-option label=&quot;客服部&quot; value=&quot;客服部&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                &lt;/el-select&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;loadData&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button&gt;重置&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    &lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">        &lt;el-table :data=&quot;dataList&quot; v-loading=&quot;loading&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">            &lt;el-table-column type=&quot;index&quot; label=&quot;序号&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;account&quot; label=&quot;账号&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;phone&quot; label=&quot;电话&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;idNo&quot; label=&quot;身份证号&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;position&quot; label=&quot;职位&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-tag&gt;&#123;&#123; scope.row.position &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;department&quot; label=&quot;部门&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;pageAuthority&quot; label=&quot;页面权限&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-tag type=&quot;success&quot;&gt;&#123;&#123; scope.row.pageAuthority &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">            &lt;el-table-column prop=&quot;btnAuthority&quot; label=&quot;按钮权限&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-tag type=&quot;info&quot;&gt;&#123;&#123; scope.row.btnAuthority &#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line"></span><br><span class="line">            &lt;el-table-column prop=&quot;opera&quot; label=&quot;操作&quot; width=&quot;280&quot;&gt;</span><br><span class="line">                &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">                    &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; &gt;</span><br><span class="line">                        权限设置</span><br><span class="line">                    &lt;/el-button&gt;</span><br><span class="line">                    &lt;el-button type=&quot;danger&quot; size=&quot;small&quot;&gt;</span><br><span class="line">                        删除</span><br><span class="line">                    &lt;/el-button&gt;</span><br><span class="line">                    &lt;el-button type=&quot;danger&quot; size=&quot;small&quot;&gt;</span><br><span class="line">                        禁用</span><br><span class="line">                    &lt;/el-button&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">&lt;el-pagination class=&quot;fr mt mb&quot; v-model:current-page=&quot;pageInfo.page&quot; v-model:page-size=&quot;pageInfo.pageSize&quot;</span><br><span class="line">        :page-sizes=&quot;[10, 20, 30, 40]&quot; :background=&quot;true&quot; layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">        :total=&quot;totals&quot; @size-change=&quot;handleSizeChange&quot; @current-change=&quot;handleCurrentChange&quot; /&gt;</span><br><span class="line">    &lt;/el-card&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; useHttp &#125; from &#x27;@/hooks/useHttp&#x27;;</span><br><span class="line">const searchParams = ref(&#123;</span><br><span class="line">    name: &quot;&quot;,</span><br><span class="line">    department: &quot;&quot;</span><br><span class="line">&#125;)</span><br><span class="line">const &#123; dataList, loading,  loadData, totals, pageInfo, handleSizeChange, handleCurrentChange &#125; = useHttp(&quot;/permissionList&quot;, searchParams);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="1-权限弹窗组件开发"><a href="#1-权限弹窗组件开发" class="headerlink" title="1.权限弹窗组件开发"></a>1.权限弹窗组件开发</h2><h3 id="1-定义基本结构"><a href="#1-定义基本结构" class="headerlink" title="1.定义基本结构"></a>1.定义基本结构</h3><p>&#x3D;&#x3D;system-AuthModal.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-dialog :model-value=&quot;visible&quot; title=&quot;权限设置&quot; width=&quot;600px&quot;&gt;</span><br><span class="line">        权限弹窗</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">    visible: Boolean,</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;system-System.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;AuthModal :visible=&quot;visible&quot;/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">AuthModal</span> <span class="keyword">from</span> <span class="string">&quot;./AuthModal.vue&quot;</span></span><br><span class="line"><span class="keyword">const</span> visible = <span class="title function_">ref</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h3 id="2-添加获取当前用户权限接口"><a href="#2-添加获取当前用户权限接口" class="headerlink" title="2.添加获取当前用户权限接口"></a>2.添加获取当前用户权限接口</h3><p>mock设置：</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> userMenulist = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;数据看板&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;/dashboard&quot;</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="string">&quot;DataLine&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;充电站管理&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;/chargingstation&quot;</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="string">&quot;Lightning&quot;</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;充电站监控&quot;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/chargingstation/monitor&quot;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&quot;VideoCamera&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;充电桩管理&quot;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/chargingstation/fault&quot;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&quot;Warning&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;电子地图&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;/map&quot;</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="string">&quot;MapLocation&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;报警管理&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;/alarm&quot;</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="string">&quot;Phone&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;会员卡管理&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;/equipment&quot;</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="string">&quot;Magnet&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;个人中心&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;/personal&quot;</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="string">&quot;User&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br><span class="line"><span class="comment">//获取当前用户权限</span></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;https://www.demo.com/userAuth&quot;</span>,<span class="string">&quot;post&quot;</span>,<span class="function">(<span class="params">req:<span class="built_in">any</span></span>)=&gt;</span>&#123;</span><br><span class="line"> <span class="comment">//console.log(234,req.body)</span></span><br><span class="line"> <span class="keyword">const</span> &#123;pageAuthority&#125;=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(req.<span class="property">body</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;后端收到当前权限&quot;</span>,pageAuthority)</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>:<span class="number">200</span>,</span><br><span class="line">    <span class="attr">message</span>:<span class="string">&quot;操作成功&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">      <span class="attr">list</span>:pageAuthority==<span class="string">&quot;user&quot;</span>? <span class="attr">userMenulist</span>:(pageAuthority==<span class="string">&quot;manager&quot;</span>?<span class="attr">menulist2</span>:menulist),</span><br><span class="line">      <span class="attr">btn</span>:pageAuthority==<span class="string">&quot;user&quot;</span>?[<span class="string">&#x27;add&#x27;</span>]:(pageAuthority==<span class="string">&quot;manager&quot;</span>?[<span class="string">&#x27;add&#x27;</span>,<span class="string">&quot;edit&quot;</span>]:[<span class="string">&#x27;add&#x27;</span>,<span class="string">&quot;edit&quot;</span>,<span class="string">&quot;all&quot;</span>,<span class="string">&quot;delete&quot;</span>])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>api设置</p><p>&#x3D;&#x3D;api-system.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    auth = <span class="string">&#x27;/userAuth&#x27;</span>, </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getAuthApi</span>(<span class="params">pageAuthority:<span class="built_in">string</span></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">auth</span>, &#123;pageAuthority&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;getAuthApi&#125;</span><br></pre></td></tr></table></figure><h3 id="3-获取权限数据"><a href="#3-获取权限数据" class="headerlink" title="3.获取权限数据"></a>3.获取权限数据</h3><p>&#x3D;&#x3D;System.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; size=&quot;small&quot;   @click=&quot;settingAuth(scope.row.pageAuthority)&quot;&gt;</span><br><span class="line">                        权限设置</span><br><span class="line">  &lt;/el-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">settingAuth</span> = <span class="keyword">async</span> (<span class="params">pageAuthority:<span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list, btn &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getAuthApi</span>(pageAuthority);</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(list,btn)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-在树图中先把所有的菜单渲染出来"><a href="#4-在树图中先把所有的菜单渲染出来" class="headerlink" title="4.在树图中先把所有的菜单渲染出来"></a>4.在树图中先把所有的菜单渲染出来</h3><p>&#x3D;&#x3D;AuthModal.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-dialog :model-value=&quot;visible&quot; title=&quot;权限设置&quot; width=&quot;600px&quot;&gt;</span><br><span class="line">        &lt;el-card&gt;</span><br><span class="line">            &lt;template #header&gt;</span><br><span class="line">                &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                    &lt;span&gt;页面权限&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-tree ref=&quot;treeRef&quot; style=&quot;max-width: 600px&quot; node-key=&quot;url&quot; show-checkbox :data=&quot;treeData&quot;</span><br><span class="line">                @check-change=&quot;handleCheckChange&quot; :check-on-click-node=&quot;true&quot; /&gt;</span><br><span class="line">        &lt;/el-card&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; storeToRefs &#125; from &quot;pinia&quot;</span><br><span class="line">import &#123; useUserStore &#125; from &quot;@/store/auth&quot;</span><br><span class="line">import &#123; transformData &#125; from &quot;@/utils/transformMenu&quot;</span><br><span class="line">import &#123;ref&#125; from &quot;vue&quot;</span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">    visible: Boolean,</span><br><span class="line">&#125;)</span><br><span class="line">const userStore=useUserStore()</span><br><span class="line">const &#123; menu &#125; = storeToRefs(userStore) ;</span><br><span class="line">const treeData = ref(transformData(menu.value));</span><br><span class="line">const treeRef = ref()</span><br><span class="line">const handleCheckChange = () =&gt; &#123;</span><br><span class="line">    console.log(&#x27;checked keys:&#x27;, treeRef.value.getCheckedKeys());</span><br><span class="line">  </span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure><blockquote><p>因为menu中的数据跟Tree组件要求的数组格式不一致，所以我们这里封装一个函数,处理menu数据，将其转为Tree组件需要的格式</p></blockquote><p>&#x3D;&#x3D;utils-transformMenu.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">transformData</span>(<span class="params">nodes:<span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> nodes.<span class="title function_">map</span>(<span class="function">(<span class="params">node:<span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="attr">newNode</span>:<span class="built_in">any</span> = &#123;</span><br><span class="line">            <span class="attr">label</span>: node.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">url</span>: node.<span class="property">url</span>, <span class="comment">//需要用到url是因为要作为tree组件的node-key来使用</span></span><br><span class="line">           <span class="comment">// icon: node.icon</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (node.<span class="property">children</span>) &#123;</span><br><span class="line">            newNode.<span class="property">children</span> = <span class="title function_">transformData</span>(node.<span class="property">children</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newNode;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;transformData&#125;</span><br></pre></td></tr></table></figure><h3 id="5-页面中获取当前权限的菜单数据"><a href="#5-页面中获取当前权限的菜单数据" class="headerlink" title="5.页面中获取当前权限的菜单数据"></a>5.页面中获取当前权限的菜单数据</h3><blockquote><p>同理，获取到的数据是一个嵌套的数组对象，我们要动态设置菜单的勾选，我们只需要一个一维的数组，这样就可以设置对应的节点勾选</p><p>因此也需要用到一个工具函数，将嵌套的二维或多维数组转成一维，即数组扁平化</p></blockquote><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; <span class="title class_">MenuItem</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types/user&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; transformData &#125; <span class="keyword">from</span> <span class="string">&quot;@/utils/transformMenu&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> checkedKeys = ref&lt;<span class="built_in">string</span>[]&gt;([])</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">collectUrls</span>(<span class="params">tree:MenuItem[]</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">urls</span>:<span class="built_in">string</span>[] = [];</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">traverse</span>(<span class="params">node:MenuItem</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">url</span>&amp;&amp;!node.<span class="property">children</span>) &#123;</span><br><span class="line">        urls.<span class="title function_">push</span>(node.<span class="property">url</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">children</span>) &#123;</span><br><span class="line">      node.<span class="property">children</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">child:MenuItem</span>) =&gt;</span> <span class="title function_">traverse</span>(child));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  tree.<span class="title function_">forEach</span>(<span class="function">(<span class="params">node:MenuItem</span>) =&gt;</span> <span class="title function_">traverse</span>(node));</span><br><span class="line">  <span class="keyword">return</span> urls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">settingAuth</span> = <span class="keyword">async</span> (<span class="params">pageAuthority:<span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list, btn &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getAuthApi</span>(pageAuthority);</span><br><span class="line">    checkedKeys.<span class="property">value</span> = <span class="title function_">collectUrls</span>(list)</span><br><span class="line">    visible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">99</span>,checkedKeys.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-将动态获取的权限传递给子组件"><a href="#6-将动态获取的权限传递给子组件" class="headerlink" title="6.将动态获取的权限传递给子组件"></a>6.将动态获取的权限传递给子组件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;AuthModal :visible=&quot;visible&quot; ref=&quot;authModal&quot; :checked-keys=&quot;checkedKeys&quot; /&gt;</span><br></pre></td></tr></table></figure><p>子组件接收</p><p>&#x3D;&#x3D;AuthModal.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-dialog :model-value=&quot;visible&quot; title=&quot;权限设置&quot; width=&quot;600px&quot; @open=&quot;handleOpen&quot;  @close=&quot;handleClose&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> treeRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleCheckChange</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;checked keys:&#x27;</span>, treeRef.<span class="property">value</span>.<span class="title function_">getCheckedKeys</span>());</span><br><span class="line">  </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleOpen</span> = (<span class="params"></span>) =&gt; &#123; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">555</span>,props.<span class="property">checkedKeys</span>)</span><br><span class="line">    treeRef.<span class="property">value</span>.<span class="title function_">setCheckedKeys</span>(props.<span class="property">checkedKeys</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleClose</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">emit</span>(<span class="string">&quot;close&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-按钮级权限"><a href="#7-按钮级权限" class="headerlink" title="7.按钮级权限"></a>7.按钮级权限</h3><p>&#x3D;&#x3D;System.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;AuthModal :visible=&quot;visible&quot; :checked-keys=&quot;checkedKeys&quot;   @close=&quot;visible = false&quot;  :btnAuth=&quot;btnAuth&quot;/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> btnAuth=ref&lt;<span class="built_in">string</span>[]&gt;([])</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">settingAuth</span> = <span class="keyword">async</span> (<span class="params">pageAuthority:<span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list, btn &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getAuthApi</span>(pageAuthority);</span><br><span class="line">    checkedKeys.<span class="property">value</span> = <span class="title function_">collectUrls</span>(list)</span><br><span class="line">    btnAuth.<span class="property">value</span>=btn</span><br><span class="line">    visible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;AuthModal.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-card class=&quot;mt&quot;&gt;</span><br><span class="line">           &lt;template #header&gt;</span><br><span class="line">               &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                   &lt;span&gt;按钮权限&lt;/span&gt;</span><br><span class="line">               &lt;/div&gt;</span><br><span class="line">           &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">           &lt;el-checkbox-group v-model=&quot;initBtnAuth&quot; class=&quot;mt&quot;&gt;</span><br><span class="line">               &lt;el-checkbox label=&quot;全部&quot; value=&quot;all&quot; /&gt;</span><br><span class="line">               &lt;el-checkbox label=&quot;添加&quot; value=&quot;add&quot; /&gt;</span><br><span class="line">               &lt;el-checkbox label=&quot;编辑&quot; value=&quot;edit&quot; /&gt;</span><br><span class="line">               &lt;el-checkbox label=&quot;删除&quot; value=&quot;delete&quot; /&gt;</span><br><span class="line">           &lt;/el-checkbox-group&gt;</span><br><span class="line">       &lt;/el-card&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">    <span class="attr">visible</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">checkedKeys</span>: <span class="title class_">Array</span>,</span><br><span class="line">    <span class="attr">btnAuth</span>:<span class="title class_">Array</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleOpen</span> = (<span class="params"></span>) =&gt; &#123; </span><br><span class="line">    treeRef.<span class="property">value</span>.<span class="title function_">setCheckedKeys</span>(props.<span class="property">checkedKeys</span>)</span><br><span class="line">    initBtnAuth.<span class="property">value</span>=props.<span class="property">btnAuth</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-提交数据"><a href="#8-提交数据" class="headerlink" title="8.提交数据"></a>8.提交数据</h3><p>&#x3D;&#x3D;AuthModal.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;setAuthApi&#125; <span class="keyword">from</span> <span class="string">&quot;@/api/system&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;close&#x27;</span>,<span class="string">&quot;reload&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleConfirm</span>=<span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">88</span>,treeRef.<span class="property">value</span>.<span class="title function_">getCheckedKeys</span>(),initBtnAuth.<span class="property">value</span>)  </span><br><span class="line">  <span class="keyword">const</span> res=<span class="keyword">await</span> <span class="title function_">setAuthApi</span>(treeRef.<span class="property">value</span>.<span class="title function_">getCheckedKeys</span>(),initBtnAuth.<span class="property">value</span>);</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">code</span> == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">        <span class="attr">message</span>: res.<span class="property">message</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="title function_">emit</span>(<span class="string">&quot;close&quot;</span>) <span class="comment">//关闭弹窗</span></span><br><span class="line">  <span class="title function_">emit</span>(<span class="string">&quot;reload&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>父组件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;AuthModal :visible=&quot;visible&quot; :checked-keys=&quot;checkedKeys&quot;   @close=&quot;visible = false&quot;  :btnAuth=&quot;btnAuth&quot; @reload=&quot;loadData&quot;/&gt;</span><br></pre></td></tr></table></figure><h3 id="9-传参的时候应该补充上账号名称"><a href="#9-传参的时候应该补充上账号名称" class="headerlink" title="9.传参的时候应该补充上账号名称"></a>9.传参的时候应该补充上账号名称</h3><p>&#x3D;&#x3D;System.vue&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; size=&quot;small&quot;   @click=&quot;settingAuth(scope.row.pageAuthority,scope.row.account)&quot;&gt;</span><br><span class="line">                        权限设置</span><br><span class="line">&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line"> &lt;AuthModal :visible=&quot;visible&quot; :checked-keys=&quot;checkedKeys&quot;   @close=&quot;visible = false&quot;  :btnAuth=&quot;btnAuth&quot; @reload=&quot;loadData&quot; :account=&quot;accoutNo&quot;/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">settingAuth</span> = <span class="keyword">async</span> (<span class="params">pageAuthority:<span class="built_in">string</span>,accout:<span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    accoutNo.<span class="property">value</span>=accout</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list, btn &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getAuthApi</span>(pageAuthority);</span><br><span class="line">    checkedKeys.<span class="property">value</span> = <span class="title function_">collectUrls</span>(list)</span><br><span class="line">    btnAuth.<span class="property">value</span>=btn</span><br><span class="line">    visible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;AuthModal.vue&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">    <span class="attr">account</span>:&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">visible</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">checkedKeys</span>: <span class="title class_">Array</span>,</span><br><span class="line">    <span class="attr">btnAuth</span>:&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="title class_">Array</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleConfirm</span>=<span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">88</span>,treeRef.<span class="property">value</span>.<span class="title function_">getCheckedKeys</span>(),initBtnAuth.<span class="property">value</span>)  </span><br><span class="line">  <span class="keyword">const</span> res=<span class="keyword">await</span> <span class="title function_">setAuthApi</span>(props.<span class="property">account</span>,treeRef.<span class="property">value</span>.<span class="title function_">getCheckedKeys</span>(),initBtnAuth.<span class="property">value</span>);</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">code</span> == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">        <span class="attr">message</span>: res.<span class="property">message</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="title function_">emit</span>(<span class="string">&quot;close&quot;</span>) <span class="comment">//关闭弹窗</span></span><br><span class="line">  <span class="title function_">emit</span>(<span class="string">&quot;reload&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;api-system.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&quot;../utils/http&quot;</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    auth = <span class="string">&#x27;/userAuth&#x27;</span>, </span><br><span class="line">    setAuth=<span class="string">&#x27;setAuth&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getAuthApi</span>(<span class="params">pageAuthority:<span class="built_in">string</span></span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">auth</span>, &#123;pageAuthority&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setAuthApi</span>(<span class="params">account:<span class="built_in">string</span>,btnList:<span class="built_in">string</span>[],pageList:<span class="built_in">string</span>[]</span>):<span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">post</span>(<span class="title class_">Api</span>.<span class="property">setAuth</span>,&#123;account,btnList,pageList&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;getAuthApi,setAuthApi&#125;</span><br></pre></td></tr></table></figure><h1 id="27-个人中心页面开发"><a href="#27-个人中心页面开发" class="headerlink" title="27.个人中心页面开发"></a>27.个人中心页面开发</h1><p>静态部分及分步表单不做详细介绍</p><h2 id="1-按钮级权限控制"><a href="#1-按钮级权限控制" class="headerlink" title="1.按钮级权限控制"></a>1.按钮级权限控制</h2><p>自定义指令的语法</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">directive</span>(<span class="string">&#x27;指令名&#x27;</span>, 配置项);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> myDirective = &#123;</span><br><span class="line">  <span class="comment">// 在绑定元素的 attribute 前</span></span><br><span class="line">  <span class="comment">// 或事件监听器应用前调用</span></span><br><span class="line">  <span class="title function_">created</span>(<span class="params">el, binding, vnode</span>) &#123;</span><br><span class="line">    <span class="comment">// 下面会介绍各个参数的细节</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 在元素被插入到 DOM 前调用</span></span><br><span class="line">  <span class="title function_">beforeMount</span>(<span class="params">el, binding, vnode</span>) &#123;&#125;,</span><br><span class="line">  <span class="comment">// 在绑定元素的父组件</span></span><br><span class="line">  <span class="comment">// 及他自己的所有子节点都挂载完成后调用</span></span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params">el, binding, vnode</span>) &#123;&#125;,</span><br><span class="line">  <span class="comment">// 绑定元素的父组件更新前调用</span></span><br><span class="line">  <span class="title function_">beforeUpdate</span>(<span class="params">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class="line">  <span class="comment">// 在绑定元素的父组件</span></span><br><span class="line">  <span class="comment">// 及他自己的所有子节点都更新后调用</span></span><br><span class="line">  <span class="title function_">updated</span>(<span class="params">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class="line">  <span class="comment">// 绑定元素的父组件卸载前调用</span></span><br><span class="line">  <span class="title function_">beforeUnmount</span>(<span class="params">el, binding, vnode</span>) &#123;&#125;,</span><br><span class="line">  <span class="comment">// 绑定元素的父组件卸载后调用</span></span><br><span class="line">  <span class="title function_">unmounted</span>(<span class="params">el, binding, vnode</span>) &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置项内容比较多，我们定义单独的文件存储</p><p>&#x3D;&#x3D;directives-permission.ts&#x3D;&#x3D;</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store/auth&quot;</span></span><br><span class="line"><span class="keyword">export</span>  <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">beforeMount</span>(<span class="params">el:<span class="built_in">any</span>,binding:<span class="built_in">any</span></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> userStore=<span class="title function_">useUserStore</span>();</span><br><span class="line">        <span class="keyword">const</span> &#123;roles&#125;=userStore;</span><br><span class="line">        <span class="keyword">const</span> requirePermission=binding.<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">if</span>(!roles.<span class="title function_">includes</span>(requirePermission))&#123;</span><br><span class="line">            el.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要拿到当前用户的角色和该按钮所需要的角色对比，判断当前用户拥有的角色中是否包含该按钮所需的角色，如果不包含，说明权限不够，则按钮隐藏</p><blockquote><p>使用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; size=&quot;small&quot; class=&quot;mr&quot; v-permission=&quot;&#x27;user&#x27;&quot;&gt;去处理&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><h1 id="28-环境变量的设置"><a href="#28-环境变量的设置" class="headerlink" title="28.环境变量的设置"></a>28.环境变量的设置</h1><h2 id="1-添加环境变量文件"><a href="#1-添加环境变量文件" class="headerlink" title="1.添加环境变量文件"></a>1.添加环境变量文件</h2><p>在你的项目根目录下，你可以创建不同的环境变量文件。Vite 支持以下类型的文件：</p><ul><li><code>.env</code>：用于所有环境</li><li><code>.env.local</code>：用于本地开发（忽略版本控制）</li><li><code>.env.development</code>：用于开发环境</li><li><code>.env.production</code>：用于生产环境</li></ul><h2 id="2-定义环境变量"><a href="#2-定义环境变量" class="headerlink" title="2.定义环境变量"></a>2.定义环境变量</h2><p>环境变量名必须以 <code>VITE_</code> 前缀开头，Vite 只会加载以此前缀开头的环境变量</p><p>如：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">VITE_API_URL</span>=<span class="attr">https</span>:<span class="comment">//www.demo.com</span></span><br></pre></td></tr></table></figure><h2 id="3-访问环境变量"><a href="#3-访问环境变量" class="headerlink" title="3.访问环境变量"></a>3.访问环境变量</h2><ul><li>可以在代码中直接使用 <code>import.meta.env</code> 访问这些变量。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_API_URL</span>);</span><br></pre></td></tr></table></figure><h2 id="4-获取不同环境变量的原理"><a href="#4-获取不同环境变量的原理" class="headerlink" title="4.获取不同环境变量的原理"></a>4.获取不同环境变量的原理</h2><p>Vite 默认有几个模式，你可以在运行命令时指定不同的模式：</p><ul><li><p><strong>开发模式</strong>（默认模式）: 使用 <code>vite</code> 或 <code>npm run dev</code> 启动开发服务器。它会使用 <code>.env.development</code> 和 <code>.env</code> 文件。</p></li><li><p><strong>生产模式</strong>: 使用 <code>vite build</code> 或 <code>npm run build</code> 进行生产构建。它会使用 <code>.env.production</code> 和 <code>.env</code> 文件。</p></li><li><p><strong>自定义模式</strong>: 你可以通过 Vite 的 <code>--mode</code> 参数指定其他模式。例如，如果你想在测试环境下运行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vite --mode testCopy</span><br></pre></td></tr></table></figure><p>这样 Vite 会加载 <code>.env.test</code> 和 <code>.env</code> 文件。</p></li></ul><h2 id="5-修改项目中的接口地址"><a href="#5-修改项目中的接口地址" class="headerlink" title="5.修改项目中的接口地址"></a>5.修改项目中的接口地址</h2><p>&#x3D;&#x3D;utils-axios.ts&#x3D;&#x3D;</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">service</span>: <span class="title class_">AxiosInstance</span> = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>:<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_API_URL</span>,</span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">5000</span> <span class="comment">// 请求超时时间</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="29-打包上线"><a href="#29-打包上线" class="headerlink" title="29.打包上线"></a>29.打包上线</h1><h2 id="1-打包"><a href="#1-打包" class="headerlink" title="1.打包"></a>1.打包</h2><p>1.运行npm run build</p><p>解决打包报错:</p><p><img src="D:/Software/Typora/images/image-20241104142504503.png" alt="image-20241104142504503"></p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">npm install --save-dev <span class="meta">@types</span>/file-saver</span><br></pre></td></tr></table></figure><p>打包后生成了dist文件夹，即我们的项目文件</p><h2 id="2-部署上线"><a href="#2-部署上线" class="headerlink" title="2.部署上线"></a>2.部署上线</h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> TypeScript </tag>
            
            <tag> pinia </tag>
            
            <tag> Vite </tag>
            
            <tag> Element-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript学习笔记 by小满zs</title>
      <link href="/post/31ecbc31.html"/>
      <url>/post/31ecbc31.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、基础类型"><a href="#一、基础类型" class="headerlink" title="一、基础类型"></a>一、基础类型</h3><p>TS是JS的超集，所有的JS都包含在内</p><p>起步安装 <code>npm install typescript -g</code></p><p>运行<code>tsc -w</code>将.ts 文件编译为.js 文件（先<code>tsc -init</code>初始化）</p><p>关闭严格模式：tsconfig.json -&gt; strict: false</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFn</span>(<span class="params"></span>):<span class="built_in">void</span> &#123;&#125; </span><br></pre></td></tr></table></figure><ol><li>number：数字，包括整数和浮点数</li><li>string：文本数据</li><li>boolean：布尔值，只有 true 或 false</li><li>null：空值</li><li>undefined：未定义的值</li><li>symbol：唯一的、不可变的值</li><li>bigint：大整数，超出 number 范围的整数</li></ol><p>tips: </p><ul><li>与 <code>void</code> 的区别是，<code>undefined</code> 和 <code>null</code> 是所有类型的子类型。</li><li>也就是说 <code>undefined</code> 类型的变量，可以赋值给 string 类型的变量;<code>void</code> 类型的用法，主要是用在我们<strong>不希望</strong>调用者关心函数返回值的情况下，比如通常的<strong>异步回调函数</strong></li><li>注意，使用构造函数 <code>Boolean</code> 创造的对象<strong>不是</strong>布尔值</li></ul><h3 id="二、任意类型"><a href="#二、任意类型" class="headerlink" title="二、任意类型"></a>二、任意类型</h3><p><code>npm i ts-node -g</code>：<code>ts-node 文件名.ts</code> 直接运行ts文件</p><p><code>npm i @types/node -D</code>：安装声明文件</p><h4 id="any-任意类型-和-unknown-不知道的类型"><a href="#any-任意类型-和-unknown-不知道的类型" class="headerlink" title="any 任意类型 和 unknown 不知道的类型"></a>any 任意类型 和 unknown 不知道的类型</h4><ol><li>top type 顶级类型：any、unknown</li><li>Object </li><li>Number String Boolean 构造器</li><li>number string boolean 基本类型</li><li>1      “小满”  true</li><li>never</li></ol><p><code>&#123;&#125;：对象；[]:数组；&#39;&#39;:字符串</code>  </p><p>注意事项：</p><ul><li>unknown 只能赋值给自身或 any</li><li>unknown 没有办法读任何属性，方法也不可以调用</li><li>unknown 比 any 更加安全</li></ul><h3 id="二、加餐：Object-object"><a href="#二、加餐：Object-object" class="headerlink" title="二、加餐：Object object {}"></a>二、加餐：Object object {}</h3><ol><li>Object：原型链的顶端，所有的原始类型和对象类型都指向了Object，即包含所有类型，可以等于任何一个值<ul><li><code>let a:Object =</code></li></ul></li><li>object：常用于泛型约束，代表非原始类型的一个类型（非原始类型：[]，数组；{}，对象；()&#x3D;&gt;{}，函数）（原始类型：字符串，数字，布尔值）<ul><li><code>let a:object =</code></li></ul></li><li>{}：空对象，也包含所有的类型<ul><li><code>let a:&#123;&#125; =</code> </li><li>无法对字面量进行修改</li></ul></li></ol><h3 id="三、接口和对象类型"><a href="#三、接口和对象类型" class="headerlink" title="三、接口和对象类型"></a>三、接口和对象类型</h3><p>定义对象的关键字：<code>interface</code></p><p>注意事项：</p><ol><li><p>重名重合：接口重名会发生结合</p></li><li><p>任意key：使用索引签名 <code>[propName:string]:any</code> 即可去定义对象中的任意属性</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> A &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="built_in">string</span></span><br><span class="line">    <span class="attr">age</span>:<span class="built_in">number</span></span><br><span class="line">    [<span class="attr">propName</span>:srting]:<span class="built_in">any</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>? readonly：</p></li></ol><ul><li><code>name?:string</code>：可选属性，可以有可以没有</li><li><code>readonly callback:()=&gt;boolean</code> ：一般用于函数，id</li></ul><ol start="4"><li><p>接口继承：extends</p></li><li><p>定义函数类型：</p></li></ol>  <figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Fn</span>&#123;</span><br><span class="line">    (<span class="attr">name</span>:<span class="built_in">string</span>):<span class="built_in">number</span>[]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn</span>:<span class="title class_">Fn</span> = <span class="keyword">function</span>(<span class="params">name:<span class="built_in">string</span></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="number">1</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>不能多属性 也不能少属性</li></ol><h3 id="四、数组类型"><a href="#四、数组类型" class="headerlink" title="四、数组类型"></a>四、数组类型</h3><ol><li><p>数组普通类型</p><ol><li><code>number[]</code></li><li><code>Array&lt;boolean&gt;</code></li></ol></li><li><p>对象数组</p><ol><li><p>定义对象数组使用 <code>interface</code></p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> X &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="built_in">string</span></span><br><span class="line">    age?:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>:X[] = [&#123;<span class="attr">name</span>:<span class="string">&quot;小满&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;胡萝卜&quot;</span>&#125;]</span><br></pre></td></tr></table></figure></li></ol></li><li><p>二维数组</p><ol><li><code>let arr:number[][] = [[1],[2],[3]]</code></li><li><code>let arr:Array&lt;Array&lt;number&gt;&gt; = [[1],[2],[3]]</code></li></ol></li><li><p>大杂烩数组</p><ol><li><code>let arr:any[] = [123,&#39;name&#39;,true,&#123;&#125;]</code></li></ol></li><li><p>类数组（伪数组）</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">...args:<span class="built_in">string</span>[]</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>)</span><br><span class="line">    <span class="comment">//let a:any[] = arguments 不可行</span></span><br><span class="line">    <span class="keyword">let</span> <span class="attr">a</span>:<span class="title class_">IArguments</span> = <span class="variable language_">arguments</span> <span class="comment">//专门提供 IArguments 定义 类数组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">a</span>(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">//IArguments原理</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">...args:<span class="built_in">string</span>[]</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">a</span>:A = <span class="variable language_">arguments</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> A &#123;</span><br><span class="line">    <span class="attr">callee</span>:<span class="title class_">Function</span></span><br><span class="line">    <span class="attr">length</span>:<span class="built_in">number</span></span><br><span class="line">    [<span class="attr">index</span>:<span class="built_in">number</span>]:<span class="built_in">any</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="五、函数类型"><a href="#五、函数类型" class="headerlink" title="五、函数类型"></a>五、函数类型</h3><ol><li><p>函数定义类型和返回值 | 箭头函数定义类型和返回值</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a: <span class="built_in">number</span>, b: <span class="built_in">number</span></span>): <span class="built_in">number</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">add</span>(<span class="attr">a</span>:<span class="built_in">number</span>, <span class="attr">b</span>:<span class="built_in">number</span>):<span class="function"><span class="params">number</span> =&gt;</span> a+b</span><br></pre></td></tr></table></figure></li><li><p>函数默认的参数 | 函数可选参数：默认值和可选参数只能二选一</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a: <span class="built_in">number</span> = <span class="number">10</span>, b: <span class="built_in">number</span> = <span class="number">20</span></span>): <span class="built_in">number</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a: <span class="built_in">number</span> = <span class="number">10</span>, b?: <span class="built_in">number</span></span>): <span class="built_in">number</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>参数是一个对象如何定义</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span></span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">user: User</span>): <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> user</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add</span>(&#123;<span class="attr">name</span>:<span class="string">&quot;小满&quot;</span>,<span class="attr">age</span>:<span class="number">24</span>&#125;))</span><br></pre></td></tr></table></figure></li><li><p>函数this类型</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Obj</span> &#123;</span><br><span class="line">    <span class="attr">user</span>:<span class="built_in">number</span>[]</span><br><span class="line">    <span class="title function_">add</span>(<span class="attr">this</span>: <span class="title class_">Obj</span>, <span class="attr">num</span>: nmber)=&gt;<span class="built_in">void</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ts 可以定义 this 的类型 在 js 中无法使用 必须是第一个参数定义this的类型</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">user</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">    <span class="title function_">add</span>(<span class="params"><span class="variable language_">this</span>: Obj, num: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">user</span>.<span class="title function_">push</span>(num)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">add</span>(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br></pre></td></tr></table></figure></li><li><p>函数重载</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">user</span>:<span class="built_in">number</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findNum</span>(<span class="params"></span>):<span class="built_in">number</span>[] <span class="comment">//如果没有传入东西就查询全部</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findNum</span>(<span class="params">add:<span class="built_in">number</span>[]</span>):<span class="built_in">number</span>[] <span class="comment">//如果传入一个number类型的数组就做添加</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findNum</span>(<span class="params">id:<span class="built_in">number</span></span>):<span class="built_in">number</span>[] <span class="comment">//如果传入了id就做单个查询</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findNum</span>(<span class="params">ids?: <span class="built_in">number</span> | <span class="built_in">number</span>[]</span>):<span class="built_in">number</span>[]&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> ids = <span class="string">&quot;number&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> user.<span class="title function_">filter</span>(<span class="function"><span class="params">v</span> =&gt;</span> v == ids) <span class="comment">//返回一个等于ids的新数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(ids))&#123;</span><br><span class="line">        user.<span class="title function_">push</span>(...ids) <span class="comment">//...：利用扩展运算符解构数组（ES6新特性）</span></span><br><span class="line">        <span class="keyword">return</span> user</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">findNum</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">findNum</span>(<span class="number">3</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">findNum</span>([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]))</span><br></pre></td></tr></table></figure></li></ol><h3 id="六、联合类型-类型断言-交叉类型"><a href="#六、联合类型-类型断言-交叉类型" class="headerlink" title="六、联合类型 | 类型断言 | 交叉类型"></a>六、联合类型 | 类型断言 | 交叉类型</h3><ol><li><p>函数或声明变量是使用联合类型</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">phone</span>: <span class="built_in">number</span> | <span class="built_in">string</span> = <span class="number">13903614872</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn = <span class="keyword">function</span>(<span class="params"><span class="keyword">type</span>: <span class="built_in">number</span> | <span class="built_in">boolean</span></span>): <span class="built_in">boolean</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !!<span class="keyword">type</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result = <span class="title function_">fn</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br></pre></td></tr></table></figure></li><li><p>类型断言</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fn = <span class="keyword">function</span>(<span class="params">num: <span class="built_in">number</span> | <span class="built_in">string</span></span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="comment">//断言 as 认定num是一个string类型</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>((num <span class="keyword">as</span> <span class="built_in">string</span>).<span class="property">length</span>) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fn</span>(<span class="string">&#x27;12345&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> A&#123;</span><br><span class="line">    <span class="attr">run</span>:<span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> B&#123;</span><br><span class="line">    <span class="attr">build</span>:<span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn = (<span class="attr">type</span>: A | B): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//断言 &lt;&gt; 认定type是一个A类型</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>((&lt;A&gt;<span class="keyword">type</span>).<span class="property">run</span>) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fn</span>(<span class="string">&#x27;12345&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>交叉类型（与<code>extends</code>很类似）</p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">People</span>&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="built_in">string</span></span><br><span class="line">    <span class="attr">age</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Man</span>&#123;</span><br><span class="line">    <span class="attr">gender</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> xiaoman = (<span class="attr">man</span>: <span class="title class_">People</span> &amp; <span class="title class_">Man</span>):<span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(man)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">xiaoman</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;小满今天身体不太好&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">108</span>,</span><br><span class="line">    <span class="attr">gender</span>:<span class="number">1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="七、内置对象-amp-代码雨"><a href="#七、内置对象-amp-代码雨" class="headerlink" title="七、内置对象 &amp; 代码雨"></a>七、内置对象 &amp; 代码雨</h3><ol><li><p>ecma Script：<code>Number、Date、RegExp、Error、XMLHttpRequest</code></p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">number</span>: <span class="title class_">Number</span> = <span class="keyword">new</span> <span class="title class_">Number</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">let</span> <span class="attr">date</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"><span class="keyword">let</span> <span class="attr">reg</span>: <span class="title class_">RegExp</span> = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="regexp">/\w/</span>) <span class="comment">//正则表达式</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">error</span>: <span class="title class_">Error</span> = <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;错了&quot;</span>)</span><br><span class="line"><span class="keyword">let</span> <span class="attr">xhr</span>: <span class="title class_">XMLHttpRequest</span> = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br></pre></td></tr></table></figure></li><li><p>dom：<code>querySelector、MouseEvent</code></p><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HTML(元素名称)Element  HTMLElement Element</span></span><br><span class="line"><span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>) <span class="keyword">as</span> <span class="title class_">Element</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">div</span>:<span class="title class_">NodeList</span> = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;footer&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> <span class="attr">div</span>:<span class="title class_">NodeListOf</span>&lt;<span class="title class_">HTMLDivElement</span> | <span class="title class_">HTMLElement</span>&gt; = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div footer&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>bom：<code>promise、localstorage、location、cookie</code> (浏览器或windows相关的类型)</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">local</span>: <span class="title class_">Storage</span> = <span class="variable language_">localStorage</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">lo</span>: <span class="title class_">Location</span> = location</span><br><span class="line"><span class="keyword">let</span> <span class="attr">promise</span>: <span class="title class_">Promise</span>&lt;<span class="built_in">number</span>&gt; = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">res</span>)=&gt;</span><span class="title function_">r</span>(<span class="number">1</span>))</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">    res.</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">let</span> <span class="attr">cookie</span>: <span class="title class_">String</span> = <span class="variable language_">document</span>.<span class="property">cookie</span></span><br></pre></td></tr></table></figure></li></ol><p>案例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">         &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">canvas</span>: <span class="title class_">HTMLCanvasElement</span> = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line">canvas.<span class="property">width</span> = screen.<span class="property">availWidth</span></span><br><span class="line">canvas.<span class="property">height</span> = screen.<span class="property">availHeight</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">string</span>: <span class="built_in">string</span>[] = <span class="string">&#x27;富强民主文明和谐自由平等公正法治爱国敬业诚信友善&#x27;</span>.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Arr</span> = <span class="title class_">Array</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(canvas.<span class="property">width</span> / <span class="number">10</span>)).<span class="title function_">fill</span>(<span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Arr</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个函数rain，用于绘制雨滴效果</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">rain</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 设置填充颜色为半透明的黑色</span></span><br><span class="line">    ctx.<span class="property">fillStyle</span> = <span class="string">&#x27;rgba(0, 0, 0, 0.05)&#x27;</span></span><br><span class="line">    <span class="comment">// 在画布上绘制一个矩形，覆盖整个画布</span></span><br><span class="line">    ctx.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>)</span><br><span class="line">    <span class="comment">// 设置填充颜色为绿色</span></span><br><span class="line">    ctx.<span class="property">fillStyle</span> = <span class="string">&#x27;#0f0&#x27;</span></span><br><span class="line">    <span class="comment">// 遍历Arr数组中的每个元素</span></span><br><span class="line">    <span class="title class_">Arr</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 在指定位置绘制随机字符串</span></span><br><span class="line">        ctx.<span class="title function_">fillText</span>(<span class="built_in">string</span>[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="built_in">string</span>.<span class="property">length</span>)], index * <span class="number">10</span>, item + <span class="number">10</span>)</span><br><span class="line">        <span class="comment">// 如果元素大于画布高度或者大于10000 * Math.random()，则将其重置为0，否则将其加10</span></span><br><span class="line">        <span class="title class_">Arr</span>[index] = item &gt; canvas.<span class="property">height</span> || item &gt; <span class="number">10000</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>() ? <span class="number">0</span> : item + <span class="number">10</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(rain, <span class="number">50</span>)</span><br></pre></td></tr></table></figure><h3 id="八、Class"><a href="#八、Class" class="headerlink" title="八、Class"></a>八、Class</h3><p>class 的基本用法 继承和类型约束 implements</p><p>class 的修饰符 readonlyprivate protected public</p><p>super 原理</p><p>静态方法</p><p>get set</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个接口Options，包含一个属性el，类型为string或HTMLElement</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Options</span> &#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="built_in">string</span> | <span class="title class_">HTMLElement</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个接口VueCls，包含一个属性options，类型为Options，和一个方法init，无返回值</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">VueCls</span> &#123;</span><br><span class="line">    <span class="attr">options</span>: <span class="title class_">Options</span></span><br><span class="line">    <span class="title function_">init</span>(): <span class="built_in">void</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个类Vue，实现VueCls接口</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vue</span> <span class="keyword">implements</span> <span class="title class_">VueCls</span> &#123;</span><br><span class="line">    <span class="comment">// 定义一个属性options，类型为Options</span></span><br><span class="line">    <span class="attr">options</span>: <span class="title class_">Options</span></span><br><span class="line">    <span class="comment">// 构造函数，接收一个参数options，类型为Options</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">options: Options</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">options</span> = options</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义一个方法init，无返回值</span></span><br><span class="line">    <span class="title function_">init</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个Vue实例，传入一个对象，包含一个属性el，值为&quot;#app&quot;</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="TypeScript（抽象类）"><a href="#TypeScript（抽象类）" class="headerlink" title="TypeScript（抽象类）"></a>TypeScript（抽象类）</h3><h3 id="TypeScript（元组类型）"><a href="#TypeScript（元组类型）" class="headerlink" title="TypeScript（元组类型）"></a>TypeScript（元组类型）</h3><h3 id="TypeScript（枚举类型）"><a href="#TypeScript（枚举类型）" class="headerlink" title="TypeScript（枚举类型）"></a>TypeScript（枚举类型）</h3><h3 id="TypeScript（类型推论-类型别名）"><a href="#TypeScript（类型推论-类型别名）" class="headerlink" title="TypeScript（类型推论|类型别名）"></a>TypeScript（类型推论|类型别名）</h3><h3 id="TypeScript（never类型）"><a href="#TypeScript（never类型）" class="headerlink" title="TypeScript（never类型）"></a>TypeScript（never类型）</h3><h3 id="TypeScript（上集Symbol类型）"><a href="#TypeScript（上集Symbol类型）" class="headerlink" title="TypeScript（上集Symbol类型）"></a>TypeScript（上集Symbol类型）</h3><h3 id="TypeScript（下集-迭代器-生成器）"><a href="#TypeScript（下集-迭代器-生成器）" class="headerlink" title="TypeScript（下集 迭代器|生成器）"></a>TypeScript（下集 迭代器|生成器）</h3><p>TypeScript（泛型）</p><p>TypeScript（泛型约束 keyof）</p><p>TypeScript（tsconfig.json配置文件）</p><p>TypeScript（namespace命名空间）</p><p>TypeScript（模块解析）</p><p>TypeScript（声明文件）</p><p>TypeScript（Mixins混入）</p><p>TypeScript（装饰器Decorator）</p><p>TypeScript（webpack构建ts+vue3）</p><p>TypeScript（发布订阅模式）</p><p>TypeScript（set,map,weakSet,weakMap）</p><p>TypeScript进阶（proxy Reflect）</p><p>TypeScript进阶（类型守卫）</p><p>TypeScript进阶（协变 逆变 双向协变）</p><p>TypeScript进阶（泛型工具-上）</p><p>TypeScript进阶（泛型工具-下）</p><p>TypeScript进阶（infer关键字）</p><h3 id="TypeScript进阶（infer-提取元素的妙用）"><a href="#TypeScript进阶（infer-提取元素的妙用）" class="headerlink" title="TypeScript进阶（infer 提取元素的妙用）"></a>TypeScript进阶（infer 提取元素的妙用）</h3><h3 id="TypeScript进阶（TS-用法infer-递归）"><a href="#TypeScript进阶（TS-用法infer-递归）" class="headerlink" title="TypeScript进阶（TS 用法infer 递归）"></a>TypeScript进阶（TS 用法infer 递归）</h3><h3 id="TypeScript高级-（实战插件编写）"><a href="#TypeScript高级-（实战插件编写）" class="headerlink" title="TypeScript高级 （实战插件编写）"></a>TypeScript高级 （实战插件编写）</h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3学习笔记 by小满zs</title>
      <link href="/post/5b83159.html"/>
      <url>/post/5b83159.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm init vite@latest // 初始化项目</span><br><span class="line">npm install // or npm i 下载相关依赖，生成node_modules</span><br><span class="line">npm run dev // 启动项目</span><br><span class="line">npm init vue@latest //初始化项目，配置更全面</span><br></pre></td></tr></table></figure><p><strong>node.js 源码</strong></p><p>v8、libnv和第三方库构成</p><h3 id="二、认识目录-amp-SFC-amp-插件"><a href="#二、认识目录-amp-SFC-amp-插件" class="headerlink" title="二、认识目录 &amp; SFC &amp; 插件"></a>二、认识目录 &amp; SFC &amp; 插件</h3><p><strong>认识目录</strong></p><ol><li>pubilc：静态资源，不会被vite编译</li><li>src<ol><li>assets：较小静态资源，打包成base64，</li><li>components</li><li>App.vue：全局入口文件</li><li>main.ts：全局TS文件，全局的样式、API</li><li>vite.env.d.ts：声明文件扩充</li></ol></li><li>index.html</li><li>package.json：依赖</li><li>tsconfig.json：是TS配置文件</li><li>vite.config.ts：是vite配置文件</li></ol><p><strong>SFC</strong></p><ol><li>script：变量</li><li>template：标签</li><li>style：样式</li></ol><p><strong>插件</strong></p><ol><li>volar</li><li>Vue Language Feature</li></ol><p><strong><code>npm run dev</code>过程</strong></p><ol><li>package.json -&gt; script -&gt; dev -&gt; vite</li><li>node_modules -&gt; vite -&gt; bin</li></ol><h3 id="三、模板语法-amp-Vue指令"><a href="#三、模板语法-amp-Vue指令" class="headerlink" title="三、模板语法 &amp; Vue指令"></a>三、模板语法 &amp; Vue指令</h3><ol><li><p>vue2：option api</p></li><li><p>vue3：setup函数模式</p><ol><li><p>setup</p></li><li><p>setup语法糖</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol></li></ol><p><strong>Vue指令</strong></p><p><code>v-</code> 开头都是 <code>vue</code> 的指令</p><ol><li>v-text 用来显示文本</li><li>v-html 用来展示富文本</li><li>v-if 用来控制元素的显示隐藏（切换真假DOM）</li><li>v-else-if 表示 v-if 的“else if 块”。可以链式调用</li><li>v-else v-if条件收尾语句</li><li>v-show 用来控制元素的显示隐藏（display none block Css切换）</li><li>v-on 简写**@** 用来给元素添加事件</li><li>v-bind 简写**:** 用来绑定元素的属性Attr</li><li>v-model 双向绑定 一般用于绑定表单</li><li>v-for 用来遍历元素</li><li>v-on修饰符 冒泡案例</li><li>v-once 性能优化只渲染一次（性能优化）</li><li>v-memo 性能优化会有缓存，状态未发生改变就只渲染一次（小部分提升性能）</li></ol><h3 id="四、Vue核心虚拟Dom和diff算法"><a href="#四、Vue核心虚拟Dom和diff算法" class="headerlink" title="四、Vue核心虚拟Dom和diff算法"></a>四、Vue核心虚拟Dom和diff算法</h3><p><strong>虚拟Dom</strong></p><p>通过JS来生成一个<code>AST</code>节点树，用<code>JS</code>的计算性能来换取操作<code>DOM</code>所消耗的性能，尽可能少的操作<code>DOM</code>，操作JS是非常快的</p><p><strong>diff算法</strong></p><p>忘了就看，文字一时半会儿说不明白</p><h3 id="五、Ref全家桶"><a href="#五、Ref全家桶" class="headerlink" title="五、Ref全家桶"></a>五、Ref全家桶</h3><ol><li>ref</li><li>isref</li><li>shallowref</li><li>triggerref</li><li>customref（自定义ref）</li></ol><h3 id="六、Reactive全家桶"><a href="#六、Reactive全家桶" class="headerlink" title="六、Reactive全家桶"></a>六、Reactive全家桶</h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暑期实习｜蚂蚁后端一面：深入源码和操作系统</title>
      <link href="/post/a6f5b56e.html"/>
      <url>/post/a6f5b56e.html</url>
      
        <content type="html"><![CDATA[<h1 id="暑期实习｜蚂蚁后端一面：深入源码和操作系统"><a href="#暑期实习｜蚂蚁后端一面：深入源码和操作系统" class="headerlink" title="暑期实习｜蚂蚁后端一面：深入源码和操作系统"></a>暑期实习｜蚂蚁后端一面：深入源码和操作系统</h1><h2 id="1-Java的聊天室是怎么做的？"><a href="#1-Java的聊天室是怎么做的？" class="headerlink" title="1.Java的聊天室是怎么做的？"></a>1.Java的聊天室是怎么做的？</h2><p>一个Java聊天室通常由两部分组成：服务器端和客户端。</p><ol><li><strong>服务器端（Server）</strong>：就像一个聊天室的控制中心。它会等待客户端的连接，并负责接收和发送消息。</li><li><strong>客户端（Client）</strong>：就像聊天室的参与者。它会连接到服务器，并能够发送消息给服务器，同时接收其他客户端发送的消息。</li></ol><p>在服务器端，我们使用一个专门的类叫做<code>ServerSocket</code>来监听一个特定的端口。当客户端想要加入聊天室时，它们会尝试连接到服务器上的这个端口。一旦有客户端连接成功，服务器就会为它创建一个新的线程来处理它的请求。这个线程会不断地接收该客户端发送的消息，并处理它们。服务器可以将接收到的消息广播给所有连接到它的客户端。</p><p>在客户端，我们使用普通的<code>Socket</code>来连接到服务器上的端口。一旦连接成功，客户端就可以通过这个Socket发送消息给服务器，并且也可以从服务器接收其他客户端发送的消息。这样，多个客户端就可以在服务器的协调下进行互相交流了。</p><h2 id="2-工厂模式分成几种类型？"><a href="#2-工厂模式分成几种类型？" class="headerlink" title="2.工厂模式分成几种类型？"></a>2.工厂模式分成几种类型？</h2><p>工厂模式是一种创建型设计模式，用于封装对象的创建过程。根据实现方式和结构的不同，工厂模式可以分为三种主要类型：</p><ol><li><strong>简单工厂模式（Simple Factory Pattern）</strong>： 在简单工厂模式中，有一个专门的工厂类负责根据给定的参数来创建对象。客户端只需要知道要创建的对象的类型，而不需要知道创建对象的具体细节。简单工厂模式将对象的创建过程从客户端代码中解耦出来，使得客户端代码更加简洁。但是，简单工厂模式违反了开闭原则，因为每次新增加一个产品类都需要修改工厂类的代码。</li><li><strong>工厂方法模式（Factory Method Pattern）</strong>： 工厂方法模式定义了一个抽象的工厂接口，其中包含一个用于创建对象的抽象方法。具体的产品类都实现这个接口，并提供自己的工厂类来创建自己的对象。这样每个产品类都有一个对应的工厂类，从而实现了对象的创建和具体产品类的解耦。工厂方法模式符合开闭原则，因为新增加一个产品类只需要添加一个相应的具体工厂类即可，不需要修改原有代码。</li><li><strong>抽象工厂模式（Abstract Factory Pattern）</strong>： 抽象工厂模式提供了一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。抽象工厂模式通常由一个抽象工厂类和多个具体工厂类组成，每个具体工厂类负责创建一组相关的产品对象。抽象工厂模式将一组相关的产品对象的创建过程封装在一起，使得客户端可以通过一个接口来创建一整套产品对象。</li></ol><h2 id="3-用编译原理实现加减乘除"><a href="#3-用编译原理实现加减乘除" class="headerlink" title="3.用编译原理实现加减乘除"></a>3.用编译原理实现加减乘除</h2><p>要用编译原理实现加减乘除，你可以考虑以下步骤：</p><ol><li><strong>词法分析（Lexical Analysis）</strong>：将输入的表达式分解为一个个的词法单元（token），如运算符、操作数等。</li><li><strong>语法分析（Syntax Analysis）</strong>：根据词法单元构建抽象语法树（Abstract Syntax Tree，AST），以表示表达式的结构。你可以使用递归下降解析器或者其他解析器来实现。</li><li><strong>语义分析（Semantic Analysis）</strong>：对抽象语法树进行语义分析，确保表达式的合法性。例如，检查除数是否为零等错误。</li><li><strong>生成中间代码（Intermediate Code Generation）</strong>：将抽象语法树转换为中间代码，例如逆波兰表达式（Reverse Polish Notation，RPN）。</li><li><strong>解释执行或生成目标代码（Interpretation or Code Generation）</strong>：根据中间代码执行相应的操作，计算表达式的值。如果你想生成目标代码，可以进一步将中间代码转换为机器代码或者其他可执行的形式。</li></ol><h2 id="4-看过Spring的书吗，讲讲内容"><a href="#4-看过Spring的书吗，讲讲内容" class="headerlink" title="4.看过Spring的书吗，讲讲内容"></a>4.看过Spring的书吗，讲讲内容</h2><p>Spring是一个轻量级的Java开发框架，主要用于简化企业级应用开发。</p><p>它提供了IOC（控制反转）和AOP（面向切面编程）的核心功能，用于管理对象之间的依赖关系和横切关注点。</p><p>Spring还提供了数据访问、事务管理、Web应用开发等模块化的解决方案。</p><h2 id="5-Linux分成哪些流"><a href="#5-Linux分成哪些流" class="headerlink" title="5.Linux分成哪些流"></a>5.Linux分成哪些流</h2><ol><li><strong>标准输入流（stdin）</strong>： 标准输入流通常代表从键盘输入的数据。在命令行中，如果没有重定向输入，命令将默认从标准输入流中读取数据。在程序中，通常使用标准输入流来接收用户的输入。</li><li><strong>标准输出流（stdout）</strong>： 标准输出流通常代表向屏幕输出的数据。在命令行中，如果没有重定向输出，命令将默认将输出写入到标准输出流中。在程序中，通常使用标准输出流来输出程序的结果和信息。</li><li><strong>标准错误流（stderr）</strong>： 标准错误流用于输出错误消息和诊断信息。与标准输出流不同，标准错误流的内容不会被重定向到同一个地方，通常会将它们显示在屏幕上，这样可以使得错误消息更容易被用户注意到。</li><li><strong>管道流（Pipes）</strong>： 管道流允许将一个命令的输出直接作为另一个命令的输入。在命令行中，可以使用竖线符号（|）来创建管道流。通过管道流，可以将多个命令串联起来，从而实现更复杂的数据处理操作。</li><li><strong>文件流（File Streams）</strong>： 文件流是指通过文件进行输入输出的流。在Linux系统中，可以通过文件流来读取和写入文件中的数据。在命令行中，可以使用重定向符号（&lt;、&gt;、&gt;&gt;）来将命令的输入输出重定向到文件中。</li></ol><h2 id="6-加减幂怎么实现"><a href="#6-加减幂怎么实现" class="headerlink" title="6.加减幂怎么实现"></a>6.加减幂怎么实现</h2><h2 id="7-看过哪些源码，怎么实现的"><a href="#7-看过哪些源码，怎么实现的" class="headerlink" title="7.看过哪些源码，怎么实现的"></a>7.看过哪些源码，怎么实现的</h2><p>建议看看Java核心库、Spring框架、Linux内核、数据库系统等。</p><h2 id="8-多核-CPU-改了一个-CPU-的内容，其他-CPU-怎么发现"><a href="#8-多核-CPU-改了一个-CPU-的内容，其他-CPU-怎么发现" class="headerlink" title="8.多核 CPU 改了一个 CPU 的内容，其他 CPU 怎么发现"></a>8.多核 CPU 改了一个 CPU 的内容，其他 CPU 怎么发现</h2><p>在多核CPU中，通常会存在一些机制来保证各个核心之间的一致性和同步。其中一个常见的机制是缓存一致性协议，比如MESI（Modified, Exclusive, Shared, Invalid）协议。</p><p>在MESI协议中，每个缓存行都有四种状态：</p><ul><li>Modified（已修改）：表示缓存行已被当前核心修改，但尚未写回到内存。</li><li>Exclusive（独占）：表示缓存行只存在于当前核心的缓存中，且未被修改。</li><li>Shared（共享）：表示缓存行在多个核心的缓存中存在且相同，未被修改。</li><li>Invalid（无效）：表示缓存行无效，不可用。</li></ul><p>当一个CPU修改了一个缓存行中的内容时，根据MESI协议，它会将该缓存行状态从Exclusive或Shared改为Modified，并且会向其他拥有相同缓存行的CPU发送信号，通知它们将该缓存行状态改为Invalid，从而保持一致性。</p><p>因此，其他CPU会通过缓存一致性协议中的机制，如总线嗅探或者其他通信机制，检测到对应缓存行的状态发生了改变，并更新自己的缓存</p><h2 id="9-WebSocket怎么实现的"><a href="#9-WebSocket怎么实现的" class="headerlink" title="9.WebSocket怎么实现的"></a>9.WebSocket怎么实现的</h2><p><code>WebSocket</code> 是一种在单个 TCP 连接上进行全双工通信的协议，允许在客户端和服务器之间进行实时数据传输。下面是 <code>WebSocket</code> 如何实现的简要概述：</p><ol><li><strong>建立握手（Handshake）</strong>： 客户端通过发送一个 HTTP 请求给服务器来请求建立 <code>WebSocket</code> 连接。该请求包含一些特殊的头部信息，如 <code>Upgrade: websocket</code> 和 <code>Connection: Upgrade</code>。服务器收到这个请求后，如果支持 <code>WebSocket</code>，就会响应一个 HTTP 101 状态码（Switching Protocols），表示协议切换成功，之后便进入了 <code>WebSocket</code> 协议的通信状态。</li><li><strong>通信（Communication）</strong>： 建立了 <code>WebSocket</code> 连接之后，客户端和服务器就可以通过这个连接进行实时通信了。双方可以发送文本或二进制数据帧，这些帧会经过 <code>WebSocket</code> 协议封装和解封装。<code>WebSocket</code> 协议提供了一种轻量级的通信方式，使得客户端和服务器可以通过一个持久化的连接进行双向数据传输，而无需频繁地发起 HTTP 请求和响应。</li><li><strong>保持连接（Keep-Alive）</strong>： <code>WebSocket</code> 连接是持久化的，因此在连接建立后，客户端和服务器之间的通信通常会保持活跃状态。双方可以定期发送心跳帧来确保连接的活性，同时也可以根据需要随时关闭连接。</li><li><strong>关闭连接（Closing Connection）</strong>： 客户端或服务器可以通过发送一个特殊的关闭帧来关闭 <code>WebSocket</code> 连接。一旦收到关闭帧，另一方也会发送一个相应的关闭帧，并且立即关闭连接。</li></ol><p>总的来说，<code>WebSocket</code> 协议通过一次握手建立连接，之后就可以通过一个持久化的连接进行实时通信，这使得它成为了一种高效、轻量级的实时通信方案。</p><h2 id="10-操作系统位数和CPU位数的关系"><a href="#10-操作系统位数和CPU位数的关系" class="headerlink" title="10.操作系统位数和CPU位数的关系"></a>10.操作系统位数和CPU位数的关系</h2><p>操作系统位数和 CPU 位数之间的关系通常体现在操作系统的兼容性和性能上。下面是它们之间的关系：</p><ol><li><strong>位数定义</strong>：<ul><li>操作系统的位数指的是操作系统在处理地址时使用的位数，通常表示操作系统能够寻址的内存地址的位数。比如，64位操作系统可以寻址的内存地址范围更广，可以支持更大的内存空间。</li><li>CPU 的位数指的是 CPU 寄存器的位数，通常表示 CPU 在一次指令操作中能够处理的数据位数。比如，64位 CPU 可以在一次指令操作中处理 64 位的数据。</li></ul></li><li><strong>兼容性</strong>：<ul><li>64位操作系统可以运行在 64位 CPU 上，也可以运行在 32位 CPU 上（在兼容模式下）。</li><li>32位操作系统只能运行在 32位 CPU 上。</li></ul></li><li><strong>性能</strong>：<ul><li>当一个应用程序在与其匹配的操作系统和 CPU 上运行时，通常会有更好的性能，因为它可以利用 CPU 的所有功能。</li><li>在相同的硬件上，64位操作系统通常能够更好地利用大于4GB的内存，提供更好的性能和更好的系统稳定性。</li></ul></li></ol><p>总的来说，操作系统位数和 CPU 位数之间的关系主要体现在兼容性和性能上。选择操作系统和 CPU 时，需要考虑它们之间的匹配关系，以获得最佳的性能和兼容性。</p><h2 id="11-北向接口和南向接口-哪个存储缓存"><a href="#11-北向接口和南向接口-哪个存储缓存" class="headerlink" title="11.北向接口和南向接口 哪个存储缓存"></a>11.北向接口和南向接口 哪个存储缓存</h2><p>在计算机网络和系统架构中，”北向接口”和”南向接口”是两个常见的术语，它们指的是不同层次或方向上的接口。</p><ol><li><strong>北向接口（Northbound Interface）</strong>：<ul><li>北向接口是指系统或组件向更高层次的系统或组件提供的接口。通常，这个更高层次的系统或组件是用户或应用程序。因此，北向接口是系统对外部世界的接口。</li><li>在网络领域，北向接口通常指的是设备或系统向网络管理系统(NMS)或上层管理系统提供的接口，用于获取网络状态信息、配置网络设备等。</li><li>在存储领域，北向接口可以指存储系统向上层应用程序提供的接口，用于访问存储资源、管理存储策略等。</li></ul></li><li><strong>南向接口（Southbound Interface）</strong>：<ul><li>南向接口是指系统或组件向更低层次的系统或组件提供的接口。通常，这个更低层次的系统或组件是硬件、底层服务或操作系统。</li><li>在网络领域，南向接口通常指的是设备向底层网络设备(如交换机、路由器)提供的接口，用于配置、管理和监控设备的硬件和软件参数。</li><li>在存储领域，南向接口可以指存储系统向底层存储设备(如硬盘、固态硬盘)或存储控制器提供的接口，用于数据的读写、存储管理等。</li></ul></li></ol><h2 id="12-操作系统底层原理"><a href="#12-操作系统底层原理" class="headerlink" title="12.操作系统底层原理"></a>12.操作系统底层原理</h2><p>操作系统底层原理涉及多个方面，包括操作系统的架构、调度算法、内存管理、文件系统、设备管理等。以下是操作系统底层原理的一些主要内容：</p><ol><li><strong>内核与用户空间</strong>： 操作系统通常由内核和用户空间组成。内核是操作系统的核心部分，负责管理系统的资源和提供系统调用接口；而用户空间是操作系统提供给应用程序的环境，应用程序在用户空间运行，通过系统调用接口访问内核功能。</li><li><strong>进程管理</strong>： 操作系统通过进程管理来实现多任务处理。进程是程序的执行实例，操作系统负责创建、调度、终止和管理进程。进程调度算法决定了进程如何分配CPU时间，常见的调度算法包括先来先服务（FCFS）、短作业优先（SJF）、时间片轮转等。</li><li><strong>内存管理</strong>： 内存管理是操作系统管理系统内存的过程，包括内存分配、地址映射、内存保护和内存回收等。内存管理的主要目标是提高内存利用率、减少内存碎片、保护进程的地址空间等。</li><li><strong>文件系统</strong>： 文件系统是操作系统管理存储设备上文件和目录的方式。文件系统负责文件的存储、组织、访问和管理。常见的文件系统包括FAT、NTFS、EXT等。</li><li><strong>设备管理</strong>： 设备管理是操作系统管理计算机硬件设备的过程，包括设备驱动程序的加载、设备的初始化、设备的控制和数据传输等。操作系统通过设备管理层抽象出统一的设备接口，使得应用程序可以统一地访问各种硬件设备。</li><li><strong>中断处理</strong>： 中断是指硬件或软件发出的信号，用于通知操作系统发生了某种事件。操作系统通过中断处理程序来响应中断，并根据中断类型执行相应的处理操作。</li></ol><p>这些底层原理共同构成了操作系统的核心功能和特性，对于理解操作系统的工作原理和实现具有重要意义。</p><h2 id="13-操作系统什么场景使用多线程，怎么设置"><a href="#13-操作系统什么场景使用多线程，怎么设置" class="headerlink" title="13.操作系统什么场景使用多线程，怎么设置"></a>13.操作系统什么场景使用多线程，怎么设置</h2><p>多线程在操作系统中的应用场景非常广泛，主要包括以下几个方面：</p><ol><li><strong>并发处理</strong>：多线程可以用于同时处理多个任务，提高系统的并发性能。例如，在服务器端应用中，可以使用多线程来处理多个客户端的请求，实现并发访问。</li><li><strong>异步编程</strong>：多线程可以用于实现异步编程模型，提高系统的响应速度。例如，在图形界面(GUI)应用中，可以使用多线程来处理用户界面的事件，保持界面的响应性。</li><li><strong>并行计算</strong>：多线程可以用于利用多核CPU的并行计算能力，提高计算性能。例如，在科学计算、图像处理等领域，可以使用多线程并行处理大规模数据。</li><li><strong>资源共享</strong>：多线程可以用于实现共享资源的并发访问和管理。例如，在数据库系统中，可以使用多线程来处理对共享数据库的查询和更新操作。</li></ol><p>要设置多线程，通常需要以下步骤：</p><ol><li><strong>创建线程</strong>：在程序中创建多个线程，可以使用操作系统提供的线程库或编程语言提供的线程支持。例如，在 Java 中可以使用 Thread 类或 Runnable 接口创建线程。</li><li><strong>线程调度</strong>：操作系统负责对线程进行调度和管理，以确保它们能够按照预期的方式运行。线程调度器会根据线程的优先级、状态等因素来确定线程的执行顺序。</li><li><strong>线程同步</strong>：在多线程环境中，可能会出现共享资源的并发访问问题，需要使用同步机制来确保多个线程之间的数据一致性和互斥访问。常见的同步机制包括锁、信号量、条件变量等。</li><li><strong>异常处理</strong>：在多线程程序中，可能会出现线程抛出异常而导致程序异常终止的情况，需要对异常进行适当的处理和捕获，以确保程序的稳定性和可靠性。</li></ol><p>通过合理地设置多线程，可以充分利用多核CPU的计算能力，提高系统的性能和响应速度，同时也需要注意处理多线程并发访问和同步的问题，以确保程序的正确性和稳定性。</p><h2 id="14-BeanFactory怎么做的，看过源码吗"><a href="#14-BeanFactory怎么做的，看过源码吗" class="headerlink" title="14.BeanFactory怎么做的，看过源码吗"></a>14.BeanFactory怎么做的，看过源码吗</h2><p><code>BeanFactory</code> 是 Spring 框架中的一个核心接口，用于管理和控制 Bean 对象的创建、生命周期管理等。<code>BeanFactory</code> 提供了一种解耦合的方式来管理应用程序中的对象依赖关系。</p><p><code>BeanFactory</code> 的主要功能包括：</p><ul><li>实例化 Bean：根据配置文件或注解，实例化应用程序中的各种 Bean 对象。</li><li>Bean 生命周期管理：管理 Bean 对象的生命周期，包括初始化、销毁等。</li><li>Bean 的依赖注入：处理 Bean 对象之间的依赖关系，实现依赖注入。</li></ul><p>在 Spring 框架中，<code>BeanFactory</code> 接口有多个实现类，其中最常用的是 <code>ApplicationContext</code> 接口的实现类。<code>ApplicationContext</code> 是 <code>BeanFactory</code> 的一个子接口，提供了更丰富的功能和更便捷的用法，通常也是更推荐使用的。</p><p>针对 <code>BeanFactory</code> 的具体实现，Spring 使用了反射机制、配置解析和依赖注入等技术来实现。具体来说，Spring 会通过解析配置文件（如 XML 文件）或扫描注解来获取 Bean 的定义和依赖关系，然后通过反射机制实例化 Bean 对象，并通过依赖注入来处理 Bean 之间的依赖关系。Spring 还会管理 Bean 的生命周期，执行初始化和销毁操作。</p><p>要深入了解 <code>BeanFactory</code> 的实现原理，可以阅读 Spring 框架的源代码。Spring 框架是一个开源项目，其源代码可以在其官方网站或 GitHub 上找到并下载。通过阅读源代码，可以更深入地理解 Spring 框架的设计思想和实现方式。</p><h2 id="15-ThreadLocal源码"><a href="#15-ThreadLocal源码" class="headerlink" title="15.ThreadLocal源码"></a>15.ThreadLocal源码</h2><p><code>ThreadLocal</code> 的源码主要实现了线程局部变量的功能。它提供了一种让每个线程都可以独立地维护自己的变量副本的机制。通过 <code>ThreadLocal</code>，我们可以在多线程环境下安全地存储和访问线程私有数据。下面是 <code>ThreadLocal</code> 的简要源码剖析以及它的实现原理：</p><ol><li><strong>ThreadLocal 类定义</strong>： <code>ThreadLocal</code> 类定义了一个静态内部类 <code>ThreadLocalMap</code>，用于存储线程局部变量的值。<code>ThreadLocal</code> 实例本身是一个线程安全的类。</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javaCopy codepublic <span class="keyword">class</span> <span class="title class_">ThreadLocal</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="comment">// 省略部分代码...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前线程的变量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t</span> <span class="operator">=</span> Thread.currentThread();</span><br><span class="line">        <span class="type">ThreadLocalMap</span> <span class="variable">map</span> <span class="operator">=</span> getMap(t);</span><br><span class="line">        <span class="keyword">if</span> (map != <span class="literal">null</span>) &#123;</span><br><span class="line">            ThreadLocalMap.<span class="type">Entry</span> <span class="variable">e</span> <span class="operator">=</span> map.getEntry(<span class="built_in">this</span>);</span><br><span class="line">            <span class="keyword">if</span> (e != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">                <span class="type">T</span> <span class="variable">result</span> <span class="operator">=</span> (T)e.value;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> setInitialValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略部分代码...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置当前线程的变量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(T value)</span> &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t</span> <span class="operator">=</span> Thread.currentThread();</span><br><span class="line">        <span class="type">ThreadLocalMap</span> <span class="variable">map</span> <span class="operator">=</span> getMap(t);</span><br><span class="line">        <span class="keyword">if</span> (map != <span class="literal">null</span>)</span><br><span class="line">            map.set(<span class="built_in">this</span>, value);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            createMap(t, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略部分代码...</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><strong>ThreadLocalMap 类定义</strong>： <code>ThreadLocalMap</code> 是 <code>ThreadLocal</code> 的静态内部类，用于实际存储线程局部变量的值。它是一个自定义的散列表，以 <code>ThreadLocal</code> 实例作为键，存储对应的值。</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javaCopy codestatic <span class="keyword">class</span> <span class="title class_">ThreadLocalMap</span> &#123;</span><br><span class="line">    <span class="comment">// 省略部分代码...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前 ThreadLocal 实例在当前线程中的变量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Entry <span class="title function_">getEntry</span><span class="params">(ThreadLocal&lt;?&gt; key)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> key.threadLocalHashCode &amp; (table.length - <span class="number">1</span>);</span><br><span class="line">        <span class="type">Entry</span> <span class="variable">e</span> <span class="operator">=</span> table[i];</span><br><span class="line">        <span class="keyword">if</span> (e != <span class="literal">null</span> &amp;&amp; e.get() == key)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> getEntryAfterMiss(key, i, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将当前 ThreadLocal 实例和对应的变量值存储到当前线程的 ThreadLocalMap 中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(ThreadLocal&lt;?&gt; key, Object value)</span> &#123;</span><br><span class="line">        <span class="comment">// 省略部分代码...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略部分代码...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Entry</span> <span class="keyword">extends</span> <span class="title class_">WeakReference</span>&lt;ThreadLocal&lt;?&gt;&gt; &#123;</span><br><span class="line">        Object value;</span><br><span class="line"></span><br><span class="line">        Entry(ThreadLocal&lt;?&gt; k, Object v) &#123;</span><br><span class="line">            <span class="built_in">super</span>(k);</span><br><span class="line">            value = v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现原理:</p><ul><li>每个 <code>ThreadLocal</code> 实例都有一个唯一的 <code>ThreadLocalHashCode</code>，用于在 <code>ThreadLocalMap</code> 中定位对应的值。</li><li>当调用 <code>ThreadLocal</code> 的 get 方法时，会先获取当前线程的 <code>ThreadLocalMap</code>，然后根据 <code>ThreadLocal</code> 实例定位到对应的 Entry，从而获取变量值。</li><li>当调用 <code>ThreadLocal</code> 的 set 方法时，会先获取当前线程的 <code>ThreadLocalMap</code>，然后将 <code>ThreadLocal</code> 实例和对应的值存储到 <code>ThreadLocalMap</code> 中。</li></ul><p><code>ThreadLocal</code> 的实现原理简单地通过每个线程都维护一个 <code>ThreadLocalMap</code>，然后根据 <code>ThreadLocal</code> 实例将变量值存储到对应的 Entry 中，从而实现了每个线程都拥有自己独立的变量副本的机制。值得注意的是，由于 <code>ThreadLocalMap</code> 中的 Entry 引用了 <code>ThreadLocal</code> 实例，如果 <code>ThreadLocal</code> 实例不再被使用，但对应的线程仍然存在，则可能会导致内存泄漏，因此在使用 <code>ThreadLocal</code> 时需要谨慎管理。</p><h2 id="16-Future除了接受异步任务结果，还能干嘛"><a href="#16-Future除了接受异步任务结果，还能干嘛" class="headerlink" title="16.Future除了接受异步任务结果，还能干嘛"></a>16.Future除了接受异步任务结果，还能干嘛</h2><p>Future 是 Java 并发编程中用于表示异步计算结果的接口。除了可以获取异步任务的结果，Future 还提供了<strong>判断任务是否完成</strong>、<strong>阻塞等待任务完成</strong>、<strong>异常处理</strong>以及<strong>取消任务</strong>等方法。这使我们能够更灵活地控制异步任务的执行和结果处理。</p><h2 id="17-Fork-x2F-Join与普通的线程池有什么区别？"><a href="#17-Fork-x2F-Join与普通的线程池有什么区别？" class="headerlink" title="17.Fork&#x2F;Join与普通的线程池有什么区别？"></a>17.Fork&#x2F;Join与普通的线程池有什么区别？</h2><ol><li><strong>任务分割与合并</strong>：<ul><li>Fork&#x2F;Join 框架主要用于处理可分解的任务，它将一个大任务分割成多个小任务，然后将这些小任务分配给多个线程执行，并最终将各个小任务的结果合并起来得到最终结果。这种任务的分割和合并是 Fork&#x2F;Join 框架的核心特性。</li><li>普通的线程池则主要用于处理独立的任务，它将任务提交给线程池后，由线程池中的线程按照指定的策略执行任务，但不会对任务进行分割和合并操作。</li></ul></li><li><strong>工作窃取算法</strong>：<ul><li>Fork&#x2F;Join 框架使用工作窃取算法（Work-Stealing Algorithm）来提高线程利用率和任务执行效率。在 Fork&#x2F;Join 框架中，每个线程都有自己的工作队列，当一个线程执行完自己队列中的任务后，会去其他线程的队列中“窃取”任务来执行，以保持线程的忙碌状态，提高整个系统的并行度。</li><li>而普通的线程池中，每个线程都是从线程池的任务队列中获取任务来执行，不存在工作窃取的概念。</li></ul></li><li><strong>任务类型</strong>：<ul><li>Fork&#x2F;Join 框架更适合处理递归、可分解的任务，如归并排序、快速排序、斐波那契数列等。这些任务可以被分割成多个子任务，并行执行，最后合并结果。</li><li>普通的线程池更适合处理独立的、相互不依赖的任务，如网络请求、IO操作等。</li></ul></li></ol><p>总的来说，Fork&#x2F;Join 框架相比普通的线程池在任务的分割与合并、工作窃取算法和适用任务类型等方面有着不同的设计思路和应用场景。</p><h2 id="18-ConcurrentHashMap源码"><a href="#18-ConcurrentHashMap源码" class="headerlink" title="18.ConcurrentHashMap源码"></a>18.ConcurrentHashMap源码</h2><p><code>ConcurrentHashMap</code> 是 Java 中用于多线程环境下安全地进行并发访问的哈希表实现。它提供了线程安全的并发操作，同时也提供了比 <code>Hashtable</code> 和同步的 <code>HashMap</code> 更高的性能。</p><p><code>ConcurrentHashMap</code> 的主要特点和实现包括：</p><ol><li><strong>线程安全</strong>： <code>ConcurrentHashMap</code> 提供了对并发访问的支持，多个线程可以同时对 <code>ConcurrentHashMap</code> 进行读取和部分写入操作，而不会出现数据不一致的情况。它采用了分段锁的方式来提高并发性能。</li><li><strong>分段锁</strong>： <code>ConcurrentHashMap</code> 内部维护了一定数量的 Segment（段），每个 Segment 就是一个类似于 <code>HashMap</code> 的哈希表，它独立于其他 Segment，拥有自己的锁。这样，在并发访问时，只有对应的 Segment 被加锁，其他 Segment 不受影响，从而减少了锁的竞争，提高了并发性能。</li><li><strong>高性能</strong>： <code>ConcurrentHashMap</code> 的分段锁设计使得多个线程可以并行地对不同的 Segment 进行操作，从而提高了并发性能。而且，在读操作上不会阻塞，多个线程可以同时读取数据，只有在写操作时才需要进行锁的竞争。</li><li><strong>调整容量</strong>： <code>ConcurrentHashMap</code> 在容量达到一定阈值时会自动扩容，而且在扩容时不会阻塞其他线程的读操作，只会影响到写操作的性能。它采用了一种称为 “分段锁扩容” 的策略，即只会对扩容的那个 Segment 进行加锁，其他 Segment 不受影响。</li><li><strong>迭代安全</strong>： <code>ConcurrentHashMap</code> 在迭代时也是安全的，即使在迭代过程中有其他线程对 <code>ConcurrentHashMap</code> 进行修改，也不会抛出 <code>ConcurrentModificationException</code> 异常。这是因为 <code>ConcurrentHashMap</code> 在内部采用了一种称为 “快速失败迭代器” 的机制，它在迭代过程中使用了一些技巧来确保迭代的一致性和安全性。</li></ol><p><code>ConcurrentHashMap</code> 实现了在多线程环境下安全地进行并发访问的哈希表，并通过分段锁等机制提高了并发性能，同时也提供了高性能的读操作、自动扩容、迭代安全等特性。</p><h2 id="19-String源码怎么设计的，与操作系统相关联的设计"><a href="#19-String源码怎么设计的，与操作系统相关联的设计" class="headerlink" title="19.String源码怎么设计的，与操作系统相关联的设计"></a>19.String源码怎么设计的，与操作系统相关联的设计</h2><p><code>String</code> 类在 Java 中是一个不可变的类，它表示字符串对象。在 Java 中，字符串是一种常见的数据类型，<code>String</code> 类提供了许多方法来操作字符串。<code>String</code> 类的设计与操作系统的设计没有直接关联，因为它是 Java 语言中的一个标准库类，而不是操作系统的一部分。</p><h2 id="20-基于Socket设计了哪些系统？怎么实现的"><a href="#20-基于Socket设计了哪些系统？怎么实现的" class="headerlink" title="20.基于Socket设计了哪些系统？怎么实现的"></a>20.基于Socket设计了哪些系统？怎么实现的</h2><p>基于 Socket 可以设计各种类型的系统，包括但不限于：</p><ol><li><strong>网络通信系统</strong>： 可以设计各种类型的网络通信系统，包括即时通讯系统、聊天应用、在线游戏、远程控制系统等。通过 Socket 建立客户端与服务器之间的通信连接，实现数据的双向传输。</li><li><strong>文件传输系统</strong>： 可以设计文件传输系统，用于在客户端和服务器之间传输文件。通过 Socket 实现客户端和服务器之间的文件传输，包括上传、下载、文件共享等功能。</li><li><strong>远程监控和控制系统</strong>： 可以设计远程监控和控制系统，用于监控和控制远程设备或系统。通过 Socket 建立客户端与监控设备或控制中心之间的连接，实现数据的实时监控和远程控制。</li><li><strong>分布式计算系统</strong>： 可以设计分布式计算系统，用于将计算任务分发到多台计算节点上进行并行计算。通过 Socket 实现计算节点之间的通信和数据交换，协调各个计算节点的工作。</li><li><strong>远程调用系统</strong>： 可以设计远程调用系统，用于实现跨网络的方法调用和远程服务调用。通过 Socket 建立客户端和服务端之间的连接，实现客户端对服务端方法的调用和数据传输。</li></ol><p>实现这些系统时，通常需要考虑以下几个方面：</p><ul><li><strong>通信协议的设计</strong>：定义通信协议，包括数据格式、消息格式、通信方式等。</li><li><strong>Socket 编程</strong>：使用 Java、Python、C++ 等编程语言进行 Socket 编程，实现客户端和服务器之间的通信连接。</li><li><strong>并发处理</strong>：处理多个客户端同时连接的情况，采用多线程、线程池等技术实现并发处理。</li><li><strong>安全性和可靠性</strong>：考虑数据的安全传输和通信的可靠性，采用加密算法、认证机制、重传机制等保障通信的安全性和可靠性。</li></ul><p>这些系统通过 Socket 进行网络通信，实现数据的发送和接收。具体的实现方式会根据系统的需求和架构而有所不同，但通常包括创建 <code>ServerSocket</code> 监听端口、建立 Socket 连接、发送和接收数据等步骤。</p><h2 id="21-除了Java还会哪些语言吗？"><a href="#21-除了Java还会哪些语言吗？" class="headerlink" title="21.除了Java还会哪些语言吗？"></a>21.除了Java还会哪些语言吗？</h2>]]></content>
      
      
      <categories>
          
          <category> 面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面经 </tag>
            
            <tag> 后端 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习入门</title>
      <link href="/post/54ae0472.html"/>
      <url>/post/54ae0472.html</url>
      
        <content type="html"><![CDATA[<h4 id="神经网络对象"><a href="#神经网络对象" class="headerlink" title="神经网络对象"></a>神经网络对象</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model = Sequential() #创建一个神经网络对象</span><br><span class="line">\#添加一个卷积层，传入固定宽高三通道的图片，以32种不同的卷积核构建32张特征图，</span><br><span class="line">\# 卷积核大小为3*3，构建特征图比例和原图相同，激活函数为relu函数。</span><br><span class="line">model.add(Conv2D(input_shape=(IMG_W,IMG_H,3),filters=32,kernel_size=3,padding=&#x27;same&#x27;,activation=&#x27;relu&#x27;))</span><br><span class="line">\#再次构建一个卷积层</span><br><span class="line">model.add(Conv2D(filters=32,kernel_size=3,padding=&#x27;same&#x27;,activation=&#x27;relu&#x27;))</span><br><span class="line">\#构建一个池化层，提取特征，池化层的池化窗口为2*2，步长为2。</span><br><span class="line">model.add(MaxPool2D(pool_size=2,strides=2))</span><br><span class="line">\#继续构建卷积层和池化层，区别是卷积核数量为64。</span><br><span class="line">model.add(Conv2D(filters=64,kernel_size=3,padding=&#x27;same&#x27;,activation=&#x27;relu&#x27;))</span><br><span class="line">model.add(Conv2D(filters=64,kernel_size=3,padding=&#x27;same&#x27;,activation=&#x27;relu&#x27;))</span><br><span class="line">model.add(MaxPool2D(pool_size=2,strides=2))</span><br><span class="line">\#继续构建卷积层和池化层，区别是卷积核数量为128。</span><br><span class="line">model.add(Conv2D(filters=128,kernel_size=3,padding=&#x27;same&#x27;,activation=&#x27;relu&#x27;))</span><br><span class="line">model.add(Conv2D(filters=128,kernel_size=3,padding=&#x27;same&#x27;,activation=&#x27;relu&#x27;))</span><br><span class="line">model.add(MaxPool2D(pool_size=2, strides=2))</span><br><span class="line">model.add(Flatten()) #数据扁平化</span><br><span class="line">model.add(Dense(128,activation=&#x27;relu&#x27;)) #构建一个具有128个神经元的全连接层</span><br><span class="line">model.add(Dense(64,activation=&#x27;relu&#x27;)) #构建一个具有64个神经元的全连接层</span><br><span class="line">model.add(Dropout(DROPOUT_RATE)) #加入dropout，防止过拟合。</span><br><span class="line">model.add(Dense(CLASS,activation=&#x27;softmax&#x27;)) #输出层，一共3个神经元，对应3个分类</span><br><span class="line">adam = Adam(lr=LEARNING_RATE) #创建Adam优化器</span><br><span class="line">model.compile(optimizer=adam,loss=&#x27;categorical_crossentropy&#x27;,metrics=[&#x27;accuracy&#x27;]) #使用交叉熵代价函数，adam优化器优化模型，并提取准确率</span><br><span class="line">train_generator = train_datagen.flow_from_directory( #设置训练集迭代器</span><br><span class="line">  TRAIN_PATH, #训练集存放路径</span><br><span class="line">  target_size=(IMG_W,IMG_H), #训练集图片尺寸</span><br><span class="line">  batch_size=BATCH_SIZE #训练集批次</span><br><span class="line">  )</span><br><span class="line">test_generator = test_datagen.flow_from_directory( #设置测试集迭代器</span><br><span class="line">  TEST_PATH, #测试集存放路径</span><br><span class="line">  target_size=(IMG_W,IMG_H), #测试集图片尺寸</span><br><span class="line">  batch_size=BATCH_SIZE, #测试集批次</span><br><span class="line">  )</span><br><span class="line">print(train_generator.class_indices) #打印迭代器分类</span><br><span class="line">try:</span><br><span class="line">  model = load_model(&#x27;&#123;&#125;.h5&#x27;.format(SAVE_PATH)) #尝试读取训练好的模型，再次训练</span><br><span class="line">  print(&#x27;model upload,start training!&#x27;)</span><br><span class="line">except:</span><br><span class="line">  print(&#x27;not find model,start training&#x27;) #如果没有训练过的模型，则从头开始训练</span><br><span class="line">model.fit_generator( #模型拟合</span><br><span class="line">          train_generator, #训练集迭代器</span><br><span class="line">          steps_per_epoch=len(train_generator), #每个周期需要迭代多少步</span><br><span class="line">          epochs=EPOCHS, #迭代周期</span><br><span class="line">          validation_data=test_generator, #测试集迭代器</span><br><span class="line">          validation_steps=len(test_generator) #测试集迭代多少步</span><br><span class="line">          )</span><br><span class="line">model.save(&#x27;&#123;&#125;.h5&#x27;.format(SAVE_PATH)) #保存模型</span><br><span class="line">print(&#x27;finish &#123;&#125; epochs!&#x27;.format(EPOCHS))</span><br></pre></td></tr></table></figure><h4 id="把深度学习通用的这些术语先了解一下"><a href="#把深度学习通用的这些术语先了解一下" class="headerlink" title="把深度学习通用的这些术语先了解一下"></a>把深度学习通用的这些术语先了解一下</h4><ol><li>batchsize</li><li>epoch</li><li>lables</li><li>loss </li><li>validation </li><li>relu </li><li>optimatize </li><li>线性梯度下降</li></ol><h4 id="卷积核、滤波器"><a href="#卷积核、滤波器" class="headerlink" title="卷积核、滤波器"></a>卷积核、滤波器</h4><p>MG_W,IMG_H,3),filters&#x3D;32,kernel_size&#x3D;3,padding&#x3D;’same’,activation&#x3D;’relu’))<br>比如这个 卷积核是3 滤波器32 这里面的参数先了解一下 具体作用后面带你们学</p><h4 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h4><p>最近正好做 男女儿童的分类，举个具体的例子解释一下：<br>假设 儿童5w, 识别成儿童的有4w， 识别成other 的有1w.<br>other10w, 识别成other的有8w, 识别成儿童的有 2w<br>下面分析儿童的准确率和召回率，那么按照给出的信息分析下面表格：<br>儿童相关数据 —————————————————–儿童不相关数据<br>检索到儿童是儿童的数据并识别为儿童 —————- 把other识别成儿童<br>（正类识别为正类， TP&#x3D;4w）———————（负类识别为正类，FP&#x3D;2w）<br>未检索到儿童是儿童数据却识别为other—————把other识别为 other<br>(正类识别为负类， FN&#x3D; 1w) ————————– (负类识别为负类， TN&#x3D;8w)</p><h4 id="准确率-accuracy"><a href="#准确率-accuracy" class="headerlink" title="准确率 accuracy:"></a>准确率 accuracy:</h4><p>准确率是我们最常见的评价指标，而且很容易理解，就是被分对的样本数除以所有的样本数，通常来说，正确率越高，分类器越好。</p><p>accuracy &#x3D; (4+8)&#x2F;(4+2+1+8)&#x3D;80%</p><h4 id="精确率-precision："><a href="#精确率-precision：" class="headerlink" title="精确率 precision："></a>精确率 precision：</h4><p>你认为的该类样本，有多少猜对了（猜的精确性如何）。可以解释为，在所有判别为儿童的数据中是儿童的数据的比例.TP表示是真正分类正确的数量。分母TP+FP表示被识别成儿童的总数</p><p>precision &#x3D; TP &#x2F;（TP + FP） &#x3D; 66.67%</p><h4 id="召回率-recall："><a href="#召回率-recall：" class="headerlink" title="召回率 recall："></a>召回率 recall：</h4><p>召回率可解释为， 在所有儿童相关的数据中，判别为儿童的数据的比例：<br>通俗对的解释就是，本来该有5W个儿童，算法召回了多少。<br>recall &#x3D; TP &#x2F; (TP + FN) &#x3D; 80%</p><h4 id="F-score-x3D-精确率-召回率-2-x2F-精确率-召回率"><a href="#F-score-x3D-精确率-召回率-2-x2F-精确率-召回率" class="headerlink" title="F-score &#x3D;精确率 * 召回率 * 2 &#x2F; (精确率 + 召回率)"></a>F-score &#x3D;精确率 * 召回率 * 2 &#x2F; (精确率 + 召回率)</h4><p>f-score &#x3D;(0.667*0.8)*2&#x2F;(0.667+0.8) &#x3D; 72.8%</p><h4 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h4><p>TP: 将正类预测为正类数<br>FN: 将正类预测为负类数<br>FP: 将负类预测为正类数<br>TN: 将负类预测为负类数</p><p>准确率(accuracy) &#x3D; 预测对的&#x2F;所有 &#x3D; (TP+TN)&#x2F;(TP+FN+FP+TN)<br>精确率(precision) &#x3D; TP&#x2F;(TP+FP)<br>召回率(recall) &#x3D; TP&#x2F;(TP+FN)<br>f-score &#x3D; 精确率 * 召回率 * 2 &#x2F; (精确率 + 召回率)</p>]]></content>
      
      
      <categories>
          
          <category> DeepLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DeepLearning基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql学习笔记</title>
      <link href="/post/7f3b056.html"/>
      <url>/post/7f3b056.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、mySQL锁"><a href="#一、mySQL锁" class="headerlink" title="一、mySQL锁"></a>一、mySQL锁</h1><blockquote><p>数据库隐式帮我们添加了锁:</p><ul><li>对于<code>UPDATE、DELETE、INSERT</code>语句,InnoDB(<em>mySQL的数据库引擎之一,现为MySQL的默认存储引擎</em>)会自动将涉及的数据集添加 <strong>排他锁(X锁)</strong></li><li>事务拿到某一行记录的 <strong>共享锁(S锁)</strong> 才可以读取这一行,并阻止其他事务对其添加排他锁</li><li>事务拿到一行记录的 <strong>排他锁(X锁)</strong> 才可以修改或和删除这一行</li></ul><h5 id="共享锁的目的是为了提高读取的并发-排他锁的目的时为了保证数据的一致性"><a href="#共享锁的目的是为了提高读取的并发-排他锁的目的时为了保证数据的一致性" class="headerlink" title="共享锁的目的是为了提高读取的并发;排他锁的目的时为了保证数据的一致性"></a>共享锁的目的是为了提高读取的并发;排他锁的目的时为了保证数据的一致性</h5><p>我们在某些特定的场景下才需要手动进行加所,学习数据库锁知识就是为了:</p><ul><li>更好地控制程序代码</li><li>能让我们在特定场景上派上用场</li><li>构建自己的数据库知识体系</li></ul></blockquote><h2 id="1、悲观锁"><a href="#1、悲观锁" class="headerlink" title="1、悲观锁"></a>1、悲观锁</h2><blockquote><p>悲观锁（Pessimistic Lock），顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会block直到它拿到锁。</p><ul><li>悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。</li><li>Java synchronized 就属于悲观锁的一种实现，每次线程要修改数据时都先获得锁，保证同一时刻只有一个线程能操作数据，其他线程则会被block。</li><li><code>共享锁</code>与<code>排他锁</code>都是<strong>悲观锁</strong>的范畴</li></ul></blockquote><h3 id="Ⅰ-注意点"><a href="#Ⅰ-注意点" class="headerlink" title="Ⅰ- 注意点"></a>Ⅰ- 注意点</h3><blockquote><p>要使用悲观锁我们就必须先关闭Mysql数据库的自动提交属性,因为Mysql默认使用 autocommit 模式</p><p>也就是说当你执行一个更新操作,Mysql会立即将结果进行提交</p><h6 id="排他锁与共享锁是悲观锁的不同实现-他们都属于悲观锁的范畴"><a href="#排他锁与共享锁是悲观锁的不同实现-他们都属于悲观锁的范畴" class="headerlink" title="排他锁与共享锁是悲观锁的不同实现,他们都属于悲观锁的范畴"></a>排他锁与共享锁是悲观锁的不同实现,他们都属于悲观锁的范畴</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&gt;<span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 更新库存(使用悲观锁)</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> productId</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">&gt;*/</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updateStock</span><span class="params">(Long productId)</span>&#123;</span><br><span class="line">       <span class="comment">//先锁定商品库存记录</span></span><br><span class="line">       <span class="type">ProductStock</span> <span class="variable">product</span> <span class="operator">=</span> query(<span class="string">&quot;SELECT * FROM tb_product_stock WHERE product_id=#&#123;productId&#125; FOR UPDATE&quot;</span>, productId);</span><br><span class="line">       <span class="keyword">if</span> (product.getNumber() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="type">int</span> <span class="variable">updateCnt</span> <span class="operator">=</span> update(<span class="string">&quot;UPDATE tb_product_stock SET number=number-1 WHERE product_id=#&#123;productId&#125;&quot;</span>, productId);</span><br><span class="line">           <span class="keyword">if</span>(updateCnt &gt; <span class="number">0</span>)&#123;    <span class="comment">//更新库存成功</span></span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></blockquote><h3 id="Ⅱ-排他锁"><a href="#Ⅱ-排他锁" class="headerlink" title="Ⅱ- 排他锁"></a>Ⅱ- 排他锁</h3><blockquote><p>排他锁与共享锁相对应,就是指对于多个不同事务,对同一个资源只能有一把锁,与共享锁类似,在需要执行的语句后面加上 <code>for update</code> 就可以了</p><ul><li>用域数据修改操作,例如:<code>UPDATE、DELETE、INSERT</code>语句.确保不会同时对同一资源进行多重更新</li><li>如果事务T对数据A加上排他锁后,则其他事务不能再对A加任何类型的封锁.</li><li>获准排他锁的数据技能读取数据还能修改数据</li></ul></blockquote><h3 id="Ⅲ-共享锁"><a href="#Ⅲ-共享锁" class="headerlink" title="Ⅲ - 共享锁"></a>Ⅲ - 共享锁</h3><blockquote><p><strong>共享锁(S锁)</strong> 用于不更改或不更新数据的操作(只读操作),例如<code>SELECT</code>语句</p><p>如果事务T对数据A加上共享锁后: <strong>其他事务只能对A再加共享锁,不能加排他锁.获准共享锁的事务只能读数据,不可修改数据</strong></p></blockquote><h4 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h4><blockquote><ol><li>开启共享锁</li></ol>  <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> city <span class="keyword">where</span> id <span class="operator">=</span> &quot;1&quot; lock <span class="keyword">in</span> share mode;</span><br></pre></td></tr></table></figure><ol start="2"><li>然后在另一个查询窗口中对id为1的数据进行更新</li></ol>  <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span>  city <span class="keyword">set</span> name<span class="operator">=</span>&quot;努力学习的汪&quot; <span class="keyword">where</span> id <span class="operator">=</span>&quot;1&quot;;</span><br></pre></td></tr></table></figure><ol start="3"><li>此时操作界面进入了卡顿状态,过了几秒也提示错误信息</li></ol>  <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">SQL</span>]<span class="keyword">update</span>  city <span class="keyword">set</span> name<span class="operator">=</span>&quot;努力学习的汪&quot; <span class="keyword">where</span> id <span class="operator">=</span>&quot;1&quot;;</span><br><span class="line">[Err] <span class="number">1205</span> <span class="operator">-</span> Lock wait timeout exceeded; try restarting transaction</span><br></pre></td></tr></table></figure><ol start="4"><li>如此就证明对于 <code>id=1</code> 的记录枷锁成功了:</li></ol><blockquote><p>在上一条记录还没有commmit之前,这条 <code>id=1</code>的记录被锁住了,只有在上一个事务书房掉锁后才能进行操作,或用共享锁才能对此数据进行操作</p></blockquote></blockquote><h2 id="2、乐观锁"><a href="#2、乐观锁" class="headerlink" title="2、乐观锁"></a>2、乐观锁</h2><blockquote><p>乐观锁（Optimistic Lock），顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在提交更新的时候会判断一下在此期间别人有没有去更新这个数据。乐观锁适用于读多写少的应用场景，这样可以提高吞吐量。</p><p>乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。</p></blockquote><h3 id="Ⅰ-乐观锁的两种方式"><a href="#Ⅰ-乐观锁的两种方式" class="headerlink" title="Ⅰ - 乐观锁的两种方式"></a>Ⅰ - 乐观锁的两种方式</h3><h4 id="①-使用数据版本实现"><a href="#①-使用数据版本实现" class="headerlink" title="① 使用数据版本实现"></a>① 使用数据版本实现</h4><blockquote><h6 id="使用数据版本（Version）记录机制实现，这是乐观锁最常用的一种实现方式。何谓数据版本？"><a href="#使用数据版本（Version）记录机制实现，这是乐观锁最常用的一种实现方式。何谓数据版本？" class="headerlink" title="使用数据版本（Version）记录机制实现，这是乐观锁最常用的一种实现方式。何谓数据版本？"></a>使用数据版本（Version）记录机制实现，这是乐观锁最常用的一种实现方式。何谓数据版本？</h6><ol><li>即为数据增加一个版本标识，一般是通过为数据库表增加一个数字类型的 “version” 字段来实现。</li><li>当读取数据时，将version字段的值一同读出，数据每更新一次，对此version值加一。</li><li>当我们提交更新的时候，判断数据库表对应记录的当前版本信息与第一次取出来的version值进行比对</li><li>如果数据库表当前版本号与第一次取出来的version值相等，则予以更新，否则认为是过期数据。</li></ol></blockquote><h4 id="②-使用时间戳（timestamp）"><a href="#②-使用时间戳（timestamp）" class="headerlink" title="② 使用时间戳（timestamp）"></a>② 使用时间戳（timestamp）</h4><blockquote><p>乐观锁定的第二种实现方式和第一种差不多:</p><ol><li>同样是在需要乐观锁控制的table中增加一个字段，名称无所谓，字段类型使用时间戳（timestamp）</li><li>和上面的version类似，也是在更新提交的时候检查当前数据库中数据的时间戳和自己更新前取到的时间戳进行对比</li><li>如果一致则OK，否则就是版本冲突。</li></ol></blockquote><h3 id="Ⅱ-举个栗子"><a href="#Ⅱ-举个栗子" class="headerlink" title="Ⅱ- 举个栗子"></a>Ⅱ- 举个栗子</h3><blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&gt;<span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 下单减库存</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> productId</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">&gt;*/</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updateStock</span><span class="params">(Long productId)</span>&#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">updateCnt</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span> (updateCnt == <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="type">ProductStock</span> <span class="variable">product</span> <span class="operator">=</span> query(<span class="string">&quot;SELECT * FROM tb_product_stock WHERE product_id=#&#123;productId&#125;&quot;</span>, productId);</span><br><span class="line">           <span class="keyword">if</span> (product.getNumber() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">               <span class="comment">//这里进行判断,number需要等于number才能更新</span></span><br><span class="line">               updateCnt = update(<span class="string">&quot;UPDATE tb_product_stock SET number=number-1 WHERE product_id=#&#123;productId&#125; AND number=#&#123;number&#125;&quot;</span>, productId, product.getNumber());</span><br><span class="line">               <span class="keyword">if</span>(updateCnt &gt; <span class="number">0</span>)&#123;    <span class="comment">//更新库存成功</span></span><br><span class="line">                   <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;    <span class="comment">//卖完啦</span></span><br><span class="line">               <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></blockquote><h2 id="3、行锁"><a href="#3、行锁" class="headerlink" title="3、行锁"></a>3、行锁</h2><blockquote><p>行锁，由字面意思理解，就是给某一行加上锁，也就是一条记录加上锁。</p><p>比如之前的共享锁语句</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> city <span class="keyword">where</span> id <span class="operator">=</span> &quot;1&quot; lock <span class="keyword">in</span> share mode; </span><br></pre></td></tr></table></figure><p>由于对于city表中,id字段为主键，就也相当于索引。执行加锁时，会将id这个索引为1的记录加上锁，那么这个锁就是行锁。</p><p>除此之外还有表锁,但不进行深入研究记录</p></blockquote><h3 id="Ⅰ-InnoDB引擎的数据库状态查看（分析行锁）"><a href="#Ⅰ-InnoDB引擎的数据库状态查看（分析行锁）" class="headerlink" title="Ⅰ - InnoDB引擎的数据库状态查看（分析行锁）"></a>Ⅰ - InnoDB引擎的数据库状态查看（分析行锁）</h3><blockquote><p>通过检查InnoDB_row_lock状态变量来分析系统上的行锁的争夺情况</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span><span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;innodb_row_lock%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>对于各个状态说明如下：</p><ul><li><code>Innodb_row_lock_current_waits</code>: 当前正在等待锁的数量；</li><li><code>Innodb_row_lock_time</code>: 从系统启动到现在锁定总时间长度；</li><li><code>Innodb_row_lock_time_avg</code>：每次等待所花平均时间；</li><li><code>Innodb_row_lock_time_max</code>: 从系统启动到现在等待最长的一次所花的时间长度；</li><li><code>Innodb_row_lock_waits</code>: 系统启动到现在总共等待的次数</li></ul></blockquote><h1 id="二、数据库设计"><a href="#二、数据库设计" class="headerlink" title="二、数据库设计"></a>二、数据库设计</h1><h2 id="1、数据库设计三大范式"><a href="#1、数据库设计三大范式" class="headerlink" title="1、数据库设计三大范式"></a>1、数据库设计三大范式</h2><blockquote><p>为了建立冗余较小、结构合理的数据库，设计数据库时必须遵循一定的规则。在关系型数据库中这种规则就称为范式。范式是符合某一种设计要求的总结。要想设计一个结构合理的关系型数据库，必须满足一定的范式。</p><ol><li>每一列只有一个值</li><li>每一行都能区分。</li><li>每一个表都不包含其他表已经包含的非主关键字信息。</li></ol></blockquote><h1 id="三、Mysql相关的问题与解答"><a href="#三、Mysql相关的问题与解答" class="headerlink" title="三、Mysql相关的问题与解答"></a>三、Mysql相关的问题与解答</h1><h2 id="1、MyISAM索引底层是什么结构-–B-Tree"><a href="#1、MyISAM索引底层是什么结构-–B-Tree" class="headerlink" title="1、MyISAM索引底层是什么结构? –B+ Tree"></a>1、MyISAM索引底层是什么结构? –<code>B+ Tree</code></h2><blockquote><h6 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B+ Tree"></a><code>B+ Tree</code></h6><p><strong>MyISAM索引文件和数据文件是分离的，索引文件仅保存数据记录的地址</strong>。而在InnoDB中，表数据文件本身就是按<code>B+Tree</code>组织的一个索引结构，这棵树的叶节点data域保存了完整的数据记录。这个索引的key是数据表的主键，因此InnoDB表数据文件本身就是主索引</p></blockquote><h2 id="2、MySQL如何解决脏读、不可重复读、幻读"><a href="#2、MySQL如何解决脏读、不可重复读、幻读" class="headerlink" title="2、MySQL如何解决脏读、不可重复读、幻读"></a>2、MySQL如何解决脏读、不可重复读、幻读</h2><h3 id="Ⅰ-脏读"><a href="#Ⅰ-脏读" class="headerlink" title="Ⅰ - 脏读"></a>Ⅰ - 脏读</h3><blockquote><h6 id="什么是脏读"><a href="#什么是脏读" class="headerlink" title="什么是脏读?"></a>什么是脏读?</h6><p>脏读是指一个事务中访问到了另外一个事务未提交的数据</p><ul><li>如果会话2更新age到10,但是在commit之前会话1希望得到age: 那么会获得的值就是更新前的值</li><li>或者会话2更新了值但是执行了 <code>rollback</code>,而会话1拿到的仍是10,这就是脏读</li></ul></blockquote><h3 id="Ⅱ-幻读"><a href="#Ⅱ-幻读" class="headerlink" title="Ⅱ - 幻读"></a>Ⅱ - 幻读</h3><blockquote><p>一个事务读取2次,得到的记录条数不一致</p><p>上图很明显的表示了这个情况，由于在会话 1 之间插入了一个新的值，所以得到的两次数据就不一样了</p></blockquote><h3 id="Ⅲ-不可重复读"><a href="#Ⅲ-不可重复读" class="headerlink" title="Ⅲ - 不可重复读"></a>Ⅲ - 不可重复读</h3><blockquote><p>一个事务读取同一条记录2次,得到的结果不一致</p><p>由于在读取中间变更了数据，所以会话 1 事务查询期间的得到的结果就不一样了</p></blockquote><h3 id="Ⅳ-解决方案"><a href="#Ⅳ-解决方案" class="headerlink" title="Ⅳ - 解决方案"></a>Ⅳ - 解决方案</h3><blockquote><p>解决方案即是下面四种隔离级别,他们可以最大程度避免以上三种情况的发生</p></blockquote><h2 id="3、MySQL-数据隔离级别"><a href="#3、MySQL-数据隔离级别" class="headerlink" title="3、MySQL 数据隔离级别"></a>3、MySQL 数据隔离级别</h2><blockquote><p>MySQL 里有四个隔离级别：</p><ol><li>Read uncommttied(可以读取未提交数据)–未授权读取</li><li>Read committed(可以读取已提交数据) –授权读取</li><li>Repeatable read(可重复读) –可重复读取</li><li>Serializable(可串行化) –序列化</li></ol><h6 id="在-InnoDB-中，默认为-Repeatable-级别，InnoDB-中使用一种被称为-next-key-locking-的策略来避免幻读-phantom-现象的产生"><a href="#在-InnoDB-中，默认为-Repeatable-级别，InnoDB-中使用一种被称为-next-key-locking-的策略来避免幻读-phantom-现象的产生" class="headerlink" title="在 InnoDB 中，默认为 Repeatable 级别，InnoDB 中使用一种被称为 next-key locking 的策略来避免幻读(phantom)现象的产生"></a>在 InnoDB 中，默认为 Repeatable 级别，InnoDB 中使用一种被称为 next-key locking 的策略来避免幻读(phantom)现象的产生</h6><p>不同的事务隔离级别会导致不同的问题：</p></blockquote><h3 id="Ⅰ-Read-uncommttied–未授权读取"><a href="#Ⅰ-Read-uncommttied–未授权读取" class="headerlink" title="Ⅰ - Read uncommttied–未授权读取"></a>Ⅰ - Read uncommttied–未授权读取</h3><blockquote><p>也称为读未提交(Read Uncommitted)：允许脏读取，但不允许更新丢失。</p><p>如果一个事务已经开始写数据，则另外一个事务则不允许同时进行写操作，但允许其他事务读此行数据。该隔离级别可以通过“排他写锁”实现</p></blockquote><h3 id="Ⅱ-Read-committed–授权读取"><a href="#Ⅱ-Read-committed–授权读取" class="headerlink" title="Ⅱ - Read committed–授权读取"></a>Ⅱ - Read committed–授权读取</h3><blockquote><p>也称为读提交(Read Committed)：允许不可重复读取，但不允许脏读取。</p><p>这可以通过“瞬间共享读锁”和“排他写锁”实现。读取数据的事务允许其他事务继续访问该行数据，但是未提交的写事务将会禁止其他事务访问该行。</p></blockquote><h3 id="Ⅲ-Repeatable-read–可重复读取"><a href="#Ⅲ-Repeatable-read–可重复读取" class="headerlink" title="Ⅲ - Repeatable read–可重复读取"></a>Ⅲ - Repeatable read–可重复读取</h3><blockquote><p>可重复读取(Repeatable Read)：禁止不可重复读取和脏读取，但是有时可能出现幻读数据。</p><p>这可以通过“共享读锁”和“排他写锁”实现。读取数据的事务将会禁止写事务(但允许读事务)，写事务则禁止任何其他事务。</p></blockquote><h3 id="Ⅳ-Serializable–序列化"><a href="#Ⅳ-Serializable–序列化" class="headerlink" title="Ⅳ - Serializable–序列化"></a>Ⅳ - Serializable–序列化</h3><blockquote><p>序列化(Serializable)：提供严格的事务隔离。它要求事务序列化执行，事务只能一个接着一个地执行，不能并发执行。</p><ul><li>仅仅通过“行级锁”是无法实现事务序列化的，必须通过其他机制保证新插入的数据不会被刚执行查询操作的事务访问到。</li><li>隔离级别越高，越能保证数据的完整性和一致性，但是对并发性能的影响也越大。</li><li>对于多数应用程序，可以优先考虑把数据库系统的隔离级别设为<code>Read Committed(授权读取)</code>。它能够避免脏读取，而且具有较好的并发性能。尽管它会导致不可重复读、幻读和第二类丢失更新这些并发问题，在可能出现这类问题的个别场合，可以由应用程序采用悲观锁或乐观锁来控制。</li></ul></blockquote><h1 id="四、常见的报错与解决"><a href="#四、常见的报错与解决" class="headerlink" title="四、常见的报错与解决"></a>四、常见的报错与解决</h1><h2 id="1、解除输入的安全模式"><a href="#1、解除输入的安全模式" class="headerlink" title="1、解除输入的安全模式"></a>1、解除输入的安全模式</h2><blockquote><ol><li><p>报错:<code>You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column.  To disable safe mode, toggle the option in Preferences -&gt; SQL Editor and reconnect.0.000 sec</code></p></li><li><p>这是因为MySql运行在safe-updates模式下，该模式会导致非主键条件下<code>无法执行update或者delete命令</code>。</p></li><li><p>show variables like ‘SQL_SAFE_UPDATES’;查看开关状态。</p></li><li><p>执行命令SET SQL_SAFE_UPDATES &#x3D; 0;修改下数据库模式</p></li><li><p>至此可以正常修改了</p></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql进阶 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
